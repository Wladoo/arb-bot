{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes"
            }
          ],
          "internalType": "struct DeployerDiscoverableMetaV3ConstructionConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "badLender",
          "type": "address"
        }
      ],
      "name": "BadLender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitializeSignatureFn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "MinimumOutput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOrders",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inputs",
          "type": "uint256"
        }
      ],
      "name": "NonZeroBeforeArbInputs",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonZeroBeforeArbStack",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "unmeta",
          "type": "bytes"
        }
      ],
      "name": "NotRainMetaV1",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedMetaHash",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV3",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV3",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Initialize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "subject",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "MetaV1",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "minimumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumIORatio",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "handleIO",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IInterpreterV2",
                          "name": "interpreter",
                          "type": "address"
                        },
                        {
                          "internalType": "contract IInterpreterStoreV1",
                          "name": "store",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "expression",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct EvaluableV2",
                      "name": "evaluable",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validInputs",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validOutputs",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct OrderV2",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "inputIOIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputIOIndex",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "signer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "context",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct SignedContextV1[]",
                  "name": "signedContext",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct TakeOrderConfigV2[]",
              "name": "orders",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TakeOrdersConfigV2",
          "name": "takeOrders",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "minimumSenderOutput",
          "type": "uint256"
        }
      ],
      "name": "arb",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV3",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV3",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "inputToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "outputToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inputAmountSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalOutputAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "takeOrdersData",
          "type": "bytes"
        }
      ],
      "name": "onTakeOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9r",
      "outputs": [
        {
          "internalType": "contract IInterpreterV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rDispatch",
      "outputs": [
        {
          "internalType": "EncodedDispatch",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rStore",
      "outputs": [
        {
          "internalType": "contract IInterpreterStoreV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sOrderBook",
      "outputs": [
        {
          "internalType": "contract IOrderBookV3",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sRouteProcessor",
      "outputs": [
        {
          "internalType": "contract IRouteProcessor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200358d3803806200358d8339810160408190526200003491620003d2565b600160005560208101517f6b0cdd85f2332f483d4cf2ad85c9538af7c47632abd119a748d313b3681f89329082908290829062000073908390620000d7565b60208101516040517fbea766d03fa1efd3f81cc8634d08320bc62bb0ed9234ac59bbaafa5893fb6b1391620000ac9133913091620004a0565b60405180910390a18051620000c1906200011e565b50620000ce9050620001d1565b505050620005c6565b805160208201208281146200010e5760405163074fe10f60e41b815260048101849052602481018290526044015b60405180910390fd5b62000119826200028f565b505050565b60008080806001600160a01b03851663b7f14403826040519080825280602002602001820160405280156200015d578160200160208202803683370190505b506040518263ffffffff1660e01b81526004016200017c9190620004d2565b6000604051808303816000875af11580156200019c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001c6919081019062000529565b505050505050505050565b600154610100900460ff16156200023b5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840162000105565b60015460ff908116146200028d576001805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6200029a81620002bf565b620002bc5780604051630c89984b60e31b8152600401620001059190620005aa565b50565b6000600882511015620002d457506000919050565b50600801516001600160401b031667ff0a89c674ee78741490565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620002bc57600080fd5b60005b83811015620003385781810151838201526020016200031e565b50506000910152565b600082601f8301126200035357600080fd5b81516001600160401b0380821115620003705762000370620002ef565b604051601f8301601f19908116603f011681019082821181831017156200039b576200039b620002ef565b81604052838152866020858801011115620003b557600080fd5b620003c88460208301602089016200031b565b9695505050505050565b600060208284031215620003e557600080fd5b81516001600160401b0380821115620003fd57600080fd5b90830190604082860312156200041257600080fd5b604051604081018181108382111715620004305762000430620002ef565b6040528251620004408162000305565b81526020830151828111156200045557600080fd5b620004638782860162000341565b60208301525095945050505050565b600081518084526200048c8160208601602086016200031b565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000620004c9606083018462000472565b95945050505050565b60408152600060408201526000606082016020606081850152818551808452608086019150828701935060005b818110156200051d57845183529383019391830191600101620004ff565b50909695505050505050565b600080600080608085870312156200054057600080fd5b84516200054d8162000305565b6020860151909450620005608162000305565b6040860151909350620005738162000305565b60608601519092506001600160401b038111156200059057600080fd5b6200059e8782880162000341565b91505092959194509250565b602081526000620005bf602083018462000472565b9392505050565b612fb780620005d66000396000f3fe6080604052600436106100b15760003560e01c806371c1dea71161006957806389448c3a1161004e57806389448c3a1461026457806398da8d6a1461027a578063c3b7c7c31461029a576100b1565b806371c1dea714610204578063886d165014610231576100b1565b8063141ae6e61161009a578063141ae6e614610157578063439fab91146101a957806361bb39e4146101d7576100b1565b806301ffc9a714610102578063059bebe614610137575b3480156100bd57600080fd5b50600154610100900460ff1615610100576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b34801561010e57600080fd5b5061012261011d366004611f35565b6102ad565b60405190151581526020015b60405180910390f35b34801561014357600080fd5b50610100610152366004611fa3565b610392565b34801561016357600080fd5b506005546101849073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012e565b3480156101b557600080fd5b506101c96101c436600461213a565b6104fb565b60405190815260200161012e565b3480156101e357600080fd5b506004546101849073ffffffffffffffffffffffffffffffffffffffff1681565b34801561021057600080fd5b506003546101849073ffffffffffffffffffffffffffffffffffffffff1681565b34801561023d57600080fd5b506001546101849062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561027057600080fd5b506101c960025481565b34801561028657600080fd5b506101c96102953660046121ba565b610917565b6101006102a83660046121f5565b61094b565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f059bebe600000000000000000000000000000000000000000000000000000000148061034057507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061038c57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6103a08686868686866110b3565b6005546103c89073ffffffffffffffffffffffffffffffffffffffff88811691166000611156565b60055461040f9073ffffffffffffffffffffffffffffffffffffffff88811691167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611156565b600061041d8284018461213a565b6005546040517f2646478b00000000000000000000000000000000000000000000000000000000815291925060009173ffffffffffffffffffffffffffffffffffffffff90911690632646478b90610483908b908a908c908b9030908a906004016122ad565b6020604051808303816000875af11580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c69190612306565b6005549091506104f19073ffffffffffffffffffffffffffffffffffffffff8a811691166000611156565b5050505050505050565b600154600090610100900460ff161580801561051b57506001805460ff16105b806105345750303b15801561053457506001805460ff16145b6105c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561062257600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61062a61135b565b60008380602001905181019061064091906123d9565b905061064f81604001516113ce565b80516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906106ce903390849061251d565b60405180910390a160006106e982602001516020015161142d565b11156108815760208082015180519181015160409182015191517fb7f1440300000000000000000000000000000000000000000000000000000000815260009360609373ffffffffffffffffffffffffffffffffffffffff9091169263b7f144039261075892906004016125f2565b6000604051808303816000875af1158015610777573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107bd9190810190612620565b6004805473ffffffffffffffffffffffffffffffffffffffff9485167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556003805495909416941693909317909155600182015190935090915060ff16801561085b576040517f1751534b000000000000000000000000000000000000000000000000000000008152600481018290526024016105bc565b50602082901b77ffffffffffffffffffffffffffffffffffffffff000000001660025550505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506108af6001600055565b801561091157600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61095361135b565b600154610100900460ff1615610995576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109a26060830183612698565b90506000036109dd576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109ec6060840184612698565b60008181106109fd576109fd612700565b9050602002810190610a0f919061272f565b610a19908061276d565b610a279060a08101906127a1565b610a346060860186612698565b6000818110610a4557610a45612700565b9050602002810190610a57919061272f565b60200135818110610a6a57610a6a612700565b610a809260206060909202019081019150612808565b90506000610a916060850185612698565b6000818110610aa257610aa2612700565b9050602002810190610ab4919061272f565b610abe908061276d565b610acc9060c08101906127a1565b610ad96060870187612698565b6000818110610aea57610aea612700565b9050602002810190610afc919061272f565b60400135818110610b0f57610b0f612700565b610b259260206060909202019081019150612808565b6002549091508015610d8c57600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636046c5f99116610b70843060009182526020526040902090565b604080516000808252602082019092528891610c0b9190610ba1565b6060815260200190600190039081610b8c5790505b506040805160008082526020820190925290610c05565b610bf26040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610bb85790505b5061144b565b604080516000815260208101918290527fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16909152610c56949392919060248101612825565b600060405180830381865afa158015610c73573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610cb991908101906128d8565b8151919350915015610cf7576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610d8957600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610d569160009186910161293c565b600060405180830381600087803b158015610d7057600080fd5b505af1158015610d84573d6000803e3d6000fd5b505050505b50505b600154610dba9073ffffffffffffffffffffffffffffffffffffffff85811691620100009004166000611156565b600154610e079073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611156565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c90610e67908a90600401612c79565b60408051808303816000875af1158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea99190612eec565b6001549193509150610edc9073ffffffffffffffffffffffffffffffffffffffff87811691620100009004166000611156565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6d9190612306565b905086811015610fb3576040517f0c08b5bc00000000000000000000000000000000000000000000000000000000815260048101889052602481018290526044016105bc565b8015610fda57610fda73ffffffffffffffffffffffffffffffffffffffff8716338361175b565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015611047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106b9190612306565b905080156110945761109473ffffffffffffffffffffffffffffffffffffffff8716338361175b565b61109e33476117b1565b505050505050506110af6001600055565b5050565b600154610100900460ff16156110f5576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff16331461114e576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024016105bc565b505050505050565b8015806111f657506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156111d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f49190612306565b155b611282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016105bc565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526113569084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261190b565b505050565b6002600054036113c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105bc565b6002600055565b6000818060200190518101906113e49190612f10565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790555050565b6000815160000361144057506000919050565b506020015160001a90565b60606000825167ffffffffffffffff8111156114695761146961204d565b604051908082528060200260200182016040528015611492578160200160208202803683370190505b5090506000808451116114a65760006114ac565b83516001015b855160010101905060008167ffffffffffffffff8111156114cf576114cf61204d565b60405190808252806020026020018201604052801561150257816020015b60608152602001906001900390816114ed5790505b5090506000611527604080516002815233602082015230818301526060810190915290565b82828151811061153957611539612700565b602002602001018190525060005b875181101561159757818060010192505087818151811061156a5761156a612700565b602002602001015183838151811061158457611584612700565b6020908102919091010152600101611547565b50855115611751578080600101915050838282815181106115ba576115ba612700565b602002602001018190525060005b865181101561174f576116798782815181106115e6576115e6612700565b6020026020010151600001516116566116238a858151811061160a5761160a612700565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b89848151811061166857611668612700565b602002602001015160400151611a1a565b6116b2576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016105bc565b8681815181106116c4576116c4612700565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168582815181106116f8576116f8612700565b602002602001018181525050818060010192505086818151811061171e5761171e612700565b60200260200101516020015183838151811061173c5761173c612700565b60209081029190910101526001016115c8565b505b5095945050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526113569084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016112d4565b8047101561181b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016105bc565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611875576040519150601f19603f3d011682016040523d82523d6000602084013e61187a565b606091505b5050905080611356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016105bc565b600061196d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a959092919063ffffffff16565b905080516000148061198e57508080602001905181019061198e9190612f2d565b611356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105bc565b6000806000611a298585611aac565b90925090506000816004811115611a4257611a42612f4a565b148015611a7a57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a8b5750611a8b868686611af1565b9695505050505050565b6060611aa48484600085611c4e565b949350505050565b6000808251604103611ae25760208301516040840151606085015160001a611ad687828585611d67565b94509450505050611aea565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611b28929190612f79565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611bb19190612f92565b600060405180830381855afa9150503d8060008114611bec576040519150601f19603f3d011682016040523d82523d6000602084013e611bf1565b606091505b5091509150818015611c0557506020815110155b8015611a8b575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611c439083016020908101908401612306565b149695505050505050565b606082471015611ce0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105bc565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d099190612f92565b60006040518083038185875af1925050503d8060008114611d46576040519150601f19603f3d011682016040523d82523d6000602084013e611d4b565b606091505b5091509150611d5c87838387611e56565b979650505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d9e5750600090506003611e4d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611df2573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611e4657600060019250925050611e4d565b9150600090505b94509492505050565b60608315611eec578251600003611ee55773ffffffffffffffffffffffffffffffffffffffff85163b611ee5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105bc565b5081611aa4565b611aa48383815115611f015781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc9190612fa4565b600060208284031215611f4757600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611f7757600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611fa057600080fd5b50565b60008060008060008060a08789031215611fbc57600080fd5b8635611fc781611f7e565b95506020870135611fd781611f7e565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561200257600080fd5b818901915089601f83011261201657600080fd5b81358181111561202557600080fd5b8a602082850101111561203757600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561209f5761209f61204d565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156120ec576120ec61204d565b604052919050565b600067ffffffffffffffff82111561210e5761210e61204d565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561214c57600080fd5b813567ffffffffffffffff81111561216357600080fd5b8201601f8101841361217457600080fd5b8035612187612182826120f4565b6120a5565b81815285602083850101111561219c57600080fd5b81602084016020830137600091810160200191909152949350505050565b6000602082840312156121cc57600080fd5b813567ffffffffffffffff8111156121e357600080fd5b820160608185031215611f7757600080fd5b6000806040838503121561220857600080fd5b823567ffffffffffffffff81111561221f57600080fd5b830160a0818603121561223157600080fd5b946020939093013593505050565b60005b8381101561225a578181015183820152602001612242565b50506000910152565b6000815180845261227b81602086016020860161223f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352876020840152808716604084015285606084015280851660808401525060c060a08301526122fa60c0830184612263565b98975050505050505050565b60006020828403121561231857600080fd5b5051919050565b600082601f83011261233057600080fd5b815161233e612182826120f4565b81815284602083860101111561235357600080fd5b611aa482602083016020870161223f565b600082601f83011261237557600080fd5b8151602067ffffffffffffffff8211156123915761239161204d565b8160051b6123a08282016120a5565b92835284810182019282810190878511156123ba57600080fd5b83870192505b84831015611d5c578251825291830191908301906123c0565b6000602082840312156123eb57600080fd5b815167ffffffffffffffff8082111561240357600080fd5b908301906060828603121561241757600080fd5b61241f61207c565b825161242a81611f7e565b815260208301518281111561243e57600080fd5b83016060818803121561245057600080fd5b61245861207c565b815161246381611f7e565b815260208201518481111561247757600080fd5b6124838982850161231f565b60208301525060408201518481111561249b57600080fd5b6124a789828501612364565b60408301525080602084015250506040830151828111156124c757600080fd5b6124d38782860161231f565b60408301525095945050505050565b600081518084526020808501945080840160005b83811015612512578151875295820195908201906001016124f6565b509495945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c0850152612579610100850183612263565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e08501526125b682826124e2565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a8b8282612263565b6040815260006126056040830185612263565b828103602084015261261781856124e2565b95945050505050565b6000806000806080858703121561263657600080fd5b845161264181611f7e565b602086015190945061265281611f7e565b604086015190935061266381611f7e565b606086015190925067ffffffffffffffff81111561268057600080fd5b61268c8782880161231f565b91505092959194509250565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126126cd57600080fd5b83018035915067ffffffffffffffff8211156126e857600080fd5b6020019150600581901b3603821315611aea57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261276357600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261276357600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126127d657600080fd5b83018035915067ffffffffffffffff8211156127f157600080fd5b6020019150606081023603821315611aea57600080fd5b60006020828403121561281a57600080fd5b8135611f7781611f7e565b600060a0820173ffffffffffffffffffffffffffffffffffffffff881683526020878185015286604085015260a0606085015281865180845260c08601915060c08160051b870101935082880160005b828110156128c1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff408887030184526128af8683516124e2565b95509284019290840190600101612875565b505050505082810360808401526122fa81856124e2565b600080604083850312156128eb57600080fd5b825167ffffffffffffffff8082111561290357600080fd5b61290f86838701612364565b9350602085015191508082111561292557600080fd5b5061293285828601612364565b9150509250929050565b828152604060208201526000611aa460408301846124e2565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261298a57600080fd5b830160208101925035905067ffffffffffffffff8111156129aa57600080fd5b8060051b3603821315611aea57600080fd5b8015158114611fa057600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126129ff57600080fd5b830160208101925035905067ffffffffffffffff811115612a1f57600080fd5b606081023603821315611aea57600080fd5b818352600060208085019450826000805b86811015612aa1578235612a5581611f7e565b73ffffffffffffffffffffffffffffffffffffffff1688528284013560ff8116808214612a80578384fd5b89860152506040838101359089015260609788019790920191600101612a42565b50959695505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612ae257600080fd5b830160208101925035905067ffffffffffffffff811115612b0257600080fd5b803603821315611aea57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b88811015612c6b578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612bb457600080fd5b880160608135612bc381611f7e565b73ffffffffffffffffffffffffffffffffffffffff168552612be782890183612955565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811115612c2257600080fd5b881b808288850137860190506040612c3c84820185612aad565b9450838884030182890152612c548484018683612b11565b9e8b019e9750505093880193505050600101612b75565b509098975050505050505050565b6000602080835260c083018435828501526040828601358186015260608187013581870152612caa81880188612955565b60a060808981018290529582905260e095868a01600584901b8b0188018560005b86811015612e95577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff208e840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81893603018112612d2c57600080fd5b88018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21018112612d6157600080fd5b86855281018035612d7181611f7e565b73ffffffffffffffffffffffffffffffffffffffff90811686890152818f013590612d9b826129bc565b901515868a0152818d013590612db082611f7e565b90811660c0870152818c013590612dc682611f7e565b908116868f01528188013590612ddb82611f7e565b16610100860152612dee818901826129ca565b8e610120880152612e0461016088018284612a31565b915050612e1460c08301836129ca565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087830301610140880152612e4c828483612a31565b925050508d8201358e8601528b8201358c860152612e6c8b830183612955565b92508582038c870152612e80828483612b5a565b968f019695505050918c019150600101612ccb565b5050612ea3838e018e612aad565b9a5098507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301848d0152612edb818b8b612b11565b9d9c50505050505050505050505050565b60008060408385031215612eff57600080fd5b505080516020909101519092909150565b600060208284031215612f2257600080fd5b8151611f7781611f7e565b600060208284031215612f3f57600080fd5b8151611f77816129bc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b828152604060208201526000611aa46040830184612263565b6000825161276381846020870161223f565b602081526000611f77602083018461226356",
    "sourceMap": "544:1514:173:-:0;;;735:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:22;466:75:173;1821:22:22;1109:11:71;;;;474:66:173;;858:6;;474:66;;858:6;;1075:46:71;;474:66:173;;1075:23:71;:46::i;:::-;1188:11;;;;1136:64;;;;;;1143:10;;1179:4;;1136:64;:::i;:::-;;;;;;;;1250:15;;1210:56;;:39;:56::i;:::-;-1:-1:-1;3611:22:167::1;::::0;-1:-1:-1;3611:20:167::1;:22::i;:::-;3454:186:::0;;735:137:173;544:1514;;1424:292:153;1538:16;;;;;;1568:28;;;1564:112;;1619:46;;-1:-1:-1;;;1619:46:153;;;;;3007:25:227;;;3048:18;;;3041:34;;;2980:18;;1619:46:153;;;;;;;;1564:112;1685:24;1703:5;1685:17;:24::i;:::-;1506:210;1424:292;;:::o;1111:293:88:-;1174:26;;;;-1:-1:-1;;;;;1280:49:88;;;1174:26;1334:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1334:16:88;;1280:71;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1280:71:88;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;1111:293:88:o;5917:280:21:-;5985:13;;;;;;;5984:14;5976:66;;;;-1:-1:-1;;;5976:66:21;;4910:2:227;5976:66:21;;;4892:21:227;4949:2;4929:18;;;4922:30;4988:34;4968:18;;;4961:62;-1:-1:-1;;;5039:18:227;;;5032:37;5086:19;;5976:66:21;4708:403:227;5976:66:21;6056:12;;6072:15;6056:12;;;:31;6052:139;;6103:12;:30;;-1:-1:-1;;6103:30:21;6118:15;6103:30;;;;;;6152:28;;5258:36:227;;;6152:28:21;;5246:2:227;5231:18;6152:28:21;;;;;;;6052:139;5917:280::o;1075:155:153:-;1151:19;1164:5;1151:12;:19::i;:::-;1146:78;;1207:5;1193:20;;-1:-1:-1;;;1193:20:153;;;;;;;;:::i;1146:78::-;1075:155;:::o;550:376::-;615:4;650:1;635:5;:12;:16;631:34;;;-1:-1:-1;660:5:153;;550:376;-1:-1:-1;550:376:153:o;631:34::-;-1:-1:-1;846:1:153;835:13;829:20;-1:-1:-1;;;;;825:32:153;667:18:152;883:36:153;;550:376::o;14:127:227:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:131;-1:-1:-1;;;;;221:31:227;;211:42;;201:70;;267:1;264;257:12;282:250;367:1;377:113;391:6;388:1;385:13;377:113;;;467:11;;;461:18;448:11;;;441:39;413:2;406:10;377:113;;;-1:-1:-1;;524:1:227;506:16;;499:27;282:250::o;537:698::-;590:5;643:3;636:4;628:6;624:17;620:27;610:55;;661:1;658;651:12;610:55;684:13;;-1:-1:-1;;;;;746:10:227;;;743:36;;;759:18;;:::i;:::-;834:2;828:9;802:2;888:13;;-1:-1:-1;;884:22:227;;;908:2;880:31;876:40;864:53;;;932:18;;;952:22;;;929:46;926:72;;;978:18;;:::i;:::-;1018:10;1014:2;1007:22;1053:2;1045:6;1038:18;1099:3;1092:4;1087:2;1079:6;1075:15;1071:26;1068:35;1065:55;;;1116:1;1113;1106:12;1065:55;1129:76;1202:2;1195:4;1187:6;1183:17;1176:4;1168:6;1164:17;1129:76;:::i;:::-;1223:6;537:698;-1:-1:-1;;;;;;537:698:227:o;1240:923::-;1373:6;1426:2;1414:9;1405:7;1401:23;1397:32;1394:52;;;1442:1;1439;1432:12;1394:52;1469:16;;-1:-1:-1;;;;;1534:14:227;;;1531:34;;;1561:1;1558;1551:12;1531:34;1584:22;;;;1640:4;1622:16;;;1618:27;1615:47;;;1658:1;1655;1648:12;1615:47;1691:4;1685:11;1735:4;1727:6;1723:17;1790:6;1778:10;1775:22;1770:2;1758:10;1755:18;1752:46;1749:72;;;1801:18;;:::i;:::-;1837:4;1830:24;1876:9;;1894:31;1876:9;1894:31;:::i;:::-;1934:21;;1994:2;1986:11;;1980:18;2010:16;;;2007:36;;;2039:1;2036;2029:12;2007:36;2076:55;2123:7;2112:8;2108:2;2104:17;2076:55;:::i;:::-;2071:2;2059:15;;2052:80;-1:-1:-1;2063:6:227;1240:923;-1:-1:-1;;;;;1240:923:227:o;2168:270::-;2209:3;2247:5;2241:12;2274:6;2269:3;2262:19;2290:76;2359:6;2352:4;2347:3;2343:14;2336:4;2329:5;2325:16;2290:76;:::i;:::-;2420:2;2399:15;-1:-1:-1;;2395:29:227;2386:39;;;;2427:4;2382:50;;2168:270;-1:-1:-1;;2168:270:227:o;2443:385::-;2675:1;2671;2666:3;2662:11;2658:19;2650:6;2646:32;2635:9;2628:51;2715:6;2710:2;2699:9;2695:18;2688:34;2758:2;2753;2742:9;2738:18;2731:30;2609:4;2778:44;2818:2;2807:9;2803:18;2795:6;2778:44;:::i;:::-;2770:52;2443:385;-1:-1:-1;;;;;2443:385:227:o;3086:827::-;3365:2;3354:9;3347:21;3404:1;3399:2;3388:9;3384:18;3377:29;3328:4;3449:2;3438:9;3434:18;3471:4;3511:2;3506;3495:9;3491:18;3484:30;3534:11;3574:6;3568:13;3610:6;3597:11;3590:27;3648:3;3637:9;3633:19;3626:26;;3687:2;3679:6;3675:15;3661:29;;3708:1;3718:169;3732:6;3729:1;3726:13;3718:169;;;3793:13;;3781:26;;3862:15;;;;3827:12;;;;3754:1;3747:9;3718:169;;;-1:-1:-1;3904:3:227;;3086:827;-1:-1:-1;;;;;;3086:827:227:o;3918:785::-;4077:6;4085;4093;4101;4154:3;4142:9;4133:7;4129:23;4125:33;4122:53;;;4171:1;4168;4161:12;4122:53;4203:9;4197:16;4222:31;4247:5;4222:31;:::i;:::-;4322:2;4307:18;;4301:25;4272:5;;-1:-1:-1;4335:33:227;4301:25;4335:33;:::i;:::-;4439:2;4424:18;;4418:25;4387:7;;-1:-1:-1;4452:33:227;4418:25;4452:33;:::i;:::-;4555:2;4540:18;;4534:25;4504:7;;-1:-1:-1;;;;;;4571:30:227;;4568:50;;;4614:1;4611;4604:12;4568:50;4637:60;4689:7;4680:6;4669:9;4665:22;4637:60;:::i;:::-;4627:70;;;3918:785;;;;;;;:::o;5305:217::-;5452:2;5441:9;5434:21;5415:4;5472:44;5512:2;5501:9;5497:18;5489:6;5472:44;:::i;:::-;5464:52;5305:217;-1:-1:-1;;;5305:217:227:o;:::-;544:1514:173;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100b15760003560e01c806371c1dea71161006957806389448c3a1161004e57806389448c3a1461026457806398da8d6a1461027a578063c3b7c7c31461029a576100b1565b806371c1dea714610204578063886d165014610231576100b1565b8063141ae6e61161009a578063141ae6e614610157578063439fab91146101a957806361bb39e4146101d7576100b1565b806301ffc9a714610102578063059bebe614610137575b3480156100bd57600080fd5b50600154610100900460ff1615610100576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b34801561010e57600080fd5b5061012261011d366004611f35565b6102ad565b60405190151581526020015b60405180910390f35b34801561014357600080fd5b50610100610152366004611fa3565b610392565b34801561016357600080fd5b506005546101849073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012e565b3480156101b557600080fd5b506101c96101c436600461213a565b6104fb565b60405190815260200161012e565b3480156101e357600080fd5b506004546101849073ffffffffffffffffffffffffffffffffffffffff1681565b34801561021057600080fd5b506003546101849073ffffffffffffffffffffffffffffffffffffffff1681565b34801561023d57600080fd5b506001546101849062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561027057600080fd5b506101c960025481565b34801561028657600080fd5b506101c96102953660046121ba565b610917565b6101006102a83660046121f5565b61094b565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f059bebe600000000000000000000000000000000000000000000000000000000148061034057507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061038c57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6103a08686868686866110b3565b6005546103c89073ffffffffffffffffffffffffffffffffffffffff88811691166000611156565b60055461040f9073ffffffffffffffffffffffffffffffffffffffff88811691167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611156565b600061041d8284018461213a565b6005546040517f2646478b00000000000000000000000000000000000000000000000000000000815291925060009173ffffffffffffffffffffffffffffffffffffffff90911690632646478b90610483908b908a908c908b9030908a906004016122ad565b6020604051808303816000875af11580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c69190612306565b6005549091506104f19073ffffffffffffffffffffffffffffffffffffffff8a811691166000611156565b5050505050505050565b600154600090610100900460ff161580801561051b57506001805460ff16105b806105345750303b15801561053457506001805460ff16145b6105c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561062257600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61062a61135b565b60008380602001905181019061064091906123d9565b905061064f81604001516113ce565b80516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906106ce903390849061251d565b60405180910390a160006106e982602001516020015161142d565b11156108815760208082015180519181015160409182015191517fb7f1440300000000000000000000000000000000000000000000000000000000815260009360609373ffffffffffffffffffffffffffffffffffffffff9091169263b7f144039261075892906004016125f2565b6000604051808303816000875af1158015610777573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107bd9190810190612620565b6004805473ffffffffffffffffffffffffffffffffffffffff9485167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556003805495909416941693909317909155600182015190935090915060ff16801561085b576040517f1751534b000000000000000000000000000000000000000000000000000000008152600481018290526024016105bc565b50602082901b77ffffffffffffffffffffffffffffffffffffffff000000001660025550505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506108af6001600055565b801561091157600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61095361135b565b600154610100900460ff1615610995576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109a26060830183612698565b90506000036109dd576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109ec6060840184612698565b60008181106109fd576109fd612700565b9050602002810190610a0f919061272f565b610a19908061276d565b610a279060a08101906127a1565b610a346060860186612698565b6000818110610a4557610a45612700565b9050602002810190610a57919061272f565b60200135818110610a6a57610a6a612700565b610a809260206060909202019081019150612808565b90506000610a916060850185612698565b6000818110610aa257610aa2612700565b9050602002810190610ab4919061272f565b610abe908061276d565b610acc9060c08101906127a1565b610ad96060870187612698565b6000818110610aea57610aea612700565b9050602002810190610afc919061272f565b60400135818110610b0f57610b0f612700565b610b259260206060909202019081019150612808565b6002549091508015610d8c57600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636046c5f99116610b70843060009182526020526040902090565b604080516000808252602082019092528891610c0b9190610ba1565b6060815260200190600190039081610b8c5790505b506040805160008082526020820190925290610c05565b610bf26040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610bb85790505b5061144b565b604080516000815260208101918290527fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16909152610c56949392919060248101612825565b600060405180830381865afa158015610c73573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610cb991908101906128d8565b8151919350915015610cf7576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610d8957600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610d569160009186910161293c565b600060405180830381600087803b158015610d7057600080fd5b505af1158015610d84573d6000803e3d6000fd5b505050505b50505b600154610dba9073ffffffffffffffffffffffffffffffffffffffff85811691620100009004166000611156565b600154610e079073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611156565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c90610e67908a90600401612c79565b60408051808303816000875af1158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea99190612eec565b6001549193509150610edc9073ffffffffffffffffffffffffffffffffffffffff87811691620100009004166000611156565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6d9190612306565b905086811015610fb3576040517f0c08b5bc00000000000000000000000000000000000000000000000000000000815260048101889052602481018290526044016105bc565b8015610fda57610fda73ffffffffffffffffffffffffffffffffffffffff8716338361175b565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015611047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106b9190612306565b905080156110945761109473ffffffffffffffffffffffffffffffffffffffff8716338361175b565b61109e33476117b1565b505050505050506110af6001600055565b5050565b600154610100900460ff16156110f5576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff16331461114e576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024016105bc565b505050505050565b8015806111f657506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156111d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f49190612306565b155b611282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016105bc565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526113569084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261190b565b505050565b6002600054036113c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105bc565b6002600055565b6000818060200190518101906113e49190612f10565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790555050565b6000815160000361144057506000919050565b506020015160001a90565b60606000825167ffffffffffffffff8111156114695761146961204d565b604051908082528060200260200182016040528015611492578160200160208202803683370190505b5090506000808451116114a65760006114ac565b83516001015b855160010101905060008167ffffffffffffffff8111156114cf576114cf61204d565b60405190808252806020026020018201604052801561150257816020015b60608152602001906001900390816114ed5790505b5090506000611527604080516002815233602082015230818301526060810190915290565b82828151811061153957611539612700565b602002602001018190525060005b875181101561159757818060010192505087818151811061156a5761156a612700565b602002602001015183838151811061158457611584612700565b6020908102919091010152600101611547565b50855115611751578080600101915050838282815181106115ba576115ba612700565b602002602001018190525060005b865181101561174f576116798782815181106115e6576115e6612700565b6020026020010151600001516116566116238a858151811061160a5761160a612700565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b89848151811061166857611668612700565b602002602001015160400151611a1a565b6116b2576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016105bc565b8681815181106116c4576116c4612700565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168582815181106116f8576116f8612700565b602002602001018181525050818060010192505086818151811061171e5761171e612700565b60200260200101516020015183838151811061173c5761173c612700565b60209081029190910101526001016115c8565b505b5095945050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526113569084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016112d4565b8047101561181b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016105bc565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611875576040519150601f19603f3d011682016040523d82523d6000602084013e61187a565b606091505b5050905080611356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016105bc565b600061196d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a959092919063ffffffff16565b905080516000148061198e57508080602001905181019061198e9190612f2d565b611356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105bc565b6000806000611a298585611aac565b90925090506000816004811115611a4257611a42612f4a565b148015611a7a57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a8b5750611a8b868686611af1565b9695505050505050565b6060611aa48484600085611c4e565b949350505050565b6000808251604103611ae25760208301516040840151606085015160001a611ad687828585611d67565b94509450505050611aea565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611b28929190612f79565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611bb19190612f92565b600060405180830381855afa9150503d8060008114611bec576040519150601f19603f3d011682016040523d82523d6000602084013e611bf1565b606091505b5091509150818015611c0557506020815110155b8015611a8b575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611c439083016020908101908401612306565b149695505050505050565b606082471015611ce0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105bc565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611d099190612f92565b60006040518083038185875af1925050503d8060008114611d46576040519150601f19603f3d011682016040523d82523d6000602084013e611d4b565b606091505b5091509150611d5c87838387611e56565b979650505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d9e5750600090506003611e4d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611df2573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611e4657600060019250925050611e4d565b9150600090505b94509492505050565b60608315611eec578251600003611ee55773ffffffffffffffffffffffffffffffffffffffff85163b611ee5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105bc565b5081611aa4565b611aa48383815115611f015781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc9190612fa4565b600060208284031215611f4757600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611f7757600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114611fa057600080fd5b50565b60008060008060008060a08789031215611fbc57600080fd5b8635611fc781611f7e565b95506020870135611fd781611f7e565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561200257600080fd5b818901915089601f83011261201657600080fd5b81358181111561202557600080fd5b8a602082850101111561203757600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561209f5761209f61204d565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156120ec576120ec61204d565b604052919050565b600067ffffffffffffffff82111561210e5761210e61204d565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561214c57600080fd5b813567ffffffffffffffff81111561216357600080fd5b8201601f8101841361217457600080fd5b8035612187612182826120f4565b6120a5565b81815285602083850101111561219c57600080fd5b81602084016020830137600091810160200191909152949350505050565b6000602082840312156121cc57600080fd5b813567ffffffffffffffff8111156121e357600080fd5b820160608185031215611f7757600080fd5b6000806040838503121561220857600080fd5b823567ffffffffffffffff81111561221f57600080fd5b830160a0818603121561223157600080fd5b946020939093013593505050565b60005b8381101561225a578181015183820152602001612242565b50506000910152565b6000815180845261227b81602086016020860161223f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff8089168352876020840152808716604084015285606084015280851660808401525060c060a08301526122fa60c0830184612263565b98975050505050505050565b60006020828403121561231857600080fd5b5051919050565b600082601f83011261233057600080fd5b815161233e612182826120f4565b81815284602083860101111561235357600080fd5b611aa482602083016020870161223f565b600082601f83011261237557600080fd5b8151602067ffffffffffffffff8211156123915761239161204d565b8160051b6123a08282016120a5565b92835284810182019282810190878511156123ba57600080fd5b83870192505b84831015611d5c578251825291830191908301906123c0565b6000602082840312156123eb57600080fd5b815167ffffffffffffffff8082111561240357600080fd5b908301906060828603121561241757600080fd5b61241f61207c565b825161242a81611f7e565b815260208301518281111561243e57600080fd5b83016060818803121561245057600080fd5b61245861207c565b815161246381611f7e565b815260208201518481111561247757600080fd5b6124838982850161231f565b60208301525060408201518481111561249b57600080fd5b6124a789828501612364565b60408301525080602084015250506040830151828111156124c757600080fd5b6124d38782860161231f565b60408301525095945050505050565b600081518084526020808501945080840160005b83811015612512578151875295820195908201906001016124f6565b509495945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c0850152612579610100850183612263565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e08501526125b682826124e2565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a8b8282612263565b6040815260006126056040830185612263565b828103602084015261261781856124e2565b95945050505050565b6000806000806080858703121561263657600080fd5b845161264181611f7e565b602086015190945061265281611f7e565b604086015190935061266381611f7e565b606086015190925067ffffffffffffffff81111561268057600080fd5b61268c8782880161231f565b91505092959194509250565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126126cd57600080fd5b83018035915067ffffffffffffffff8211156126e857600080fd5b6020019150600581901b3603821315611aea57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261276357600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261276357600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126127d657600080fd5b83018035915067ffffffffffffffff8211156127f157600080fd5b6020019150606081023603821315611aea57600080fd5b60006020828403121561281a57600080fd5b8135611f7781611f7e565b600060a0820173ffffffffffffffffffffffffffffffffffffffff881683526020878185015286604085015260a0606085015281865180845260c08601915060c08160051b870101935082880160005b828110156128c1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff408887030184526128af8683516124e2565b95509284019290840190600101612875565b505050505082810360808401526122fa81856124e2565b600080604083850312156128eb57600080fd5b825167ffffffffffffffff8082111561290357600080fd5b61290f86838701612364565b9350602085015191508082111561292557600080fd5b5061293285828601612364565b9150509250929050565b828152604060208201526000611aa460408301846124e2565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261298a57600080fd5b830160208101925035905067ffffffffffffffff8111156129aa57600080fd5b8060051b3603821315611aea57600080fd5b8015158114611fa057600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126129ff57600080fd5b830160208101925035905067ffffffffffffffff811115612a1f57600080fd5b606081023603821315611aea57600080fd5b818352600060208085019450826000805b86811015612aa1578235612a5581611f7e565b73ffffffffffffffffffffffffffffffffffffffff1688528284013560ff8116808214612a80578384fd5b89860152506040838101359089015260609788019790920191600101612a42565b50959695505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612ae257600080fd5b830160208101925035905067ffffffffffffffff811115612b0257600080fd5b803603821315611aea57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b88811015612c6b578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612bb457600080fd5b880160608135612bc381611f7e565b73ffffffffffffffffffffffffffffffffffffffff168552612be782890183612955565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811115612c2257600080fd5b881b808288850137860190506040612c3c84820185612aad565b9450838884030182890152612c548484018683612b11565b9e8b019e9750505093880193505050600101612b75565b509098975050505050505050565b6000602080835260c083018435828501526040828601358186015260608187013581870152612caa81880188612955565b60a060808981018290529582905260e095868a01600584901b8b0188018560005b86811015612e95577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff208e840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81893603018112612d2c57600080fd5b88018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21018112612d6157600080fd5b86855281018035612d7181611f7e565b73ffffffffffffffffffffffffffffffffffffffff90811686890152818f013590612d9b826129bc565b901515868a0152818d013590612db082611f7e565b90811660c0870152818c013590612dc682611f7e565b908116868f01528188013590612ddb82611f7e565b16610100860152612dee818901826129ca565b8e610120880152612e0461016088018284612a31565b915050612e1460c08301836129ca565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087830301610140880152612e4c828483612a31565b925050508d8201358e8601528b8201358c860152612e6c8b830183612955565b92508582038c870152612e80828483612b5a565b968f019695505050918c019150600101612ccb565b5050612ea3838e018e612aad565b9a5098507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301848d0152612edb818b8b612b11565b9d9c50505050505050505050505050565b60008060408385031215612eff57600080fd5b505080516020909101519092909150565b600060208284031215612f2257600080fd5b8151611f7781611f7e565b600060208284031215612f3f57600080fd5b8151611f77816129bc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b828152604060208201526000611aa46040830184612263565b6000825161276381846020870161223f565b602081526000611f77602083018461226356",
    "sourceMap": "544:1514:173:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6596:13:21;;;;;;;4112:69:167;;;4156:14;;;;;;;;;;;;;;4112:69;544:1514:173;3674:271:167;;;;;;;;;;-1:-1:-1;3674:271:167;;;;;:::i;:::-;;:::i;:::-;;;516:14:227;;509:22;491:41;;479:2;464:18;3674:271:167;;;;;;;;1176:803:173;;;;;;;;;;-1:-1:-1;1176:803:173;;;;;:::i;:::-;;:::i;690:38::-;;;;;;;;;;-1:-1:-1;690:38:173;;;;;;;;;;;1913:42:227;1901:55;;;1883:74;;1871:2;1856:18;690:38:173;1712:251:227;4385:1815:167;;;;;;;;;;-1:-1:-1;4385:1815:167;;;;;:::i;:::-;;:::i;:::-;;;3826:25:227;;;3814:2;3799:18;4385:1815:167;3680:177:227;3411:36:167;;;;;;;;;;-1:-1:-1;3411:36:167;;;;;;;;3379:26;;;;;;;;;;-1:-1:-1;3379:26:167;;;;;;;;3302:30;;;;;;;;;;-1:-1:-1;3302:30:167;;;;;;;;;;;3338:35;;;;;;;;;;;;;;;;4204:142;;;;;;;;;;-1:-1:-1;4204:142:167;;;;;:::i;:::-;;:::i;6252:2883::-;;;;;;:::i;:::-;;:::i;3674:271::-;3759:4;3782:55;;;3797:40;3782:55;;:104;;-1:-1:-1;3841:45:167;;;3856:30;3841:45;3782:104;:156;;;-1:-1:-1;952:25:35;937:40;;;;3902:36:167;3775:163;3674:271;-1:-1:-1;;3674:271:167:o;1176:803:173:-;1402:95;1421:10;1433:11;1446:15;1463:17;1482:14;;1402:18;:95::i;:::-;1546:15;;1507:59;;1546:15;1507:30;;;;1546:15;;1507:30;:59::i;:::-;1615:15;;1576:75;;1615:15;1576:30;;;;1615:15;1633:17;1576:30;:75::i;:::-;1661:18;1682:35;;;;1693:14;1682:35;:::i;:::-;1749:15;;:133;;;;;1661:56;;-1:-1:-1;1728:17:173;;1749:15;;;;;:28;;:133;;1791:10;;1803:15;;1820:11;;1833:17;;1860:4;;1661:56;;1749:133;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1931:15;;1727:155;;-1:-1:-1;1892:59:173;;1931:15;1892:30;;;;1931:15;;1892:30;:59::i;:::-;1392:587;;1176:803;;;;;;:::o;4385:1815:167:-;3291:13:21;;4467:7:167;;3291:13:21;;;;;3290:14;;3336:34;;;;-1:-1:-1;3369:1:21;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:21;1702:19:29;:23;;;3376:55:21;;-1:-1:-1;3414:12:21;;;;;:17;3376:55;3314:190;;;;;;;7387:2:227;3314:190:21;;;7369:21:227;7426:2;7406:18;;;7399:30;7465:34;7445:18;;;7438:62;7536:16;7516:18;;;7509:44;7570:19;;3314:190:21;;;;;;;;;3529:1;3514:16;;;;;;;;3540:65;;;;3590:4;3574:20;;;;;;;;3540:65;2261:21:22::1;:19;:21::i;:::-;4486:46:167::2;4546:4;4535:52;;;;;;;;;;;;:::i;:::-;4486:101;;4663:44;4681:6;:25;;;4663:17;:44::i;:::-;4799:16:::0;;4773:10:::2;:43:::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;4891:30:::2;::::0;::::2;::::0;::::2;::::0;4902:10:::2;::::0;4799:6;;4891:30:::2;:::i;:::-;;;;;;;;5144:1;5085:56;5109:6;:22;;;:31;;;5085:23;:56::i;:::-;:60;5081:1074;;;5590:22;::::0;;::::2;::::0;:31;;5657;;::::2;::::0;5690:32:::2;::::0;;::::2;::::0;5590:146;;;;;5161:18:::2;::::0;5194:15:::2;::::0;5590:49:::2;::::0;;::::2;::::0;::::2;::::0;:146:::2;::::0;5690:32;5590:146:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;::::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;5561:9;5554:182:::0;;::::2;::::0;;::::2;::::0;;;::::2;;::::0;;;5555:4:::2;5554:182:::0;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;5867:10;::::2;5861:17:::0;5554:182;;-1:-1:-1;5554:182:167;;-1:-1:-1;5880:4:167::2;5857:28;5924:11:::0;;5920:95:::2;;5966:30;::::0;::::2;::::0;;::::2;::::0;::::2;3826:25:227::0;;;3799:18;;5966:30:167::2;3680:177:227::0;5920:95:167::2;-1:-1:-1::0;1517:4:89;1485:36;;;;;6042:12:167::2;:102:::0;-1:-1:-1;;5081:1074:167::2;191:36:41;6165:28:167;;;2303:20:22::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;3629:14:21::0;3625:99;;;3659:13;:21;;;;;;3699:14;;13546:36:227;;;3699:14:21;;13534:2:227;13519:18;3699:14:21;;;;;;;3625:99;3258:472;4385:1815:167;;;:::o;4204:142::-;4290:7;4316:23;;;;;;;;;;;;;;6252:2883;2261:21:22;:19;:21::i;:::-;6596:13:21;;;;;;;4112:69:167::1;;;4156:14;;;;;;;;;;;;;;4112:69;6503:17:::2;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;:24;;6531:1;6503:29:::0;6499:77:::2;;6555:10;;;;;;;;;;;;;;6499:77;6586:24;6613:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;6631:1;6613:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:38;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;6652:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;6670:1;6652:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;6613:73;;;;;;;:::i;:::-;:79;::::0;::::2;:73;::::0;;::::2;;:79:::0;;::::2;::::0;-1:-1:-1;6613:79:167::2;:::i;:::-;6586:106:::0;-1:-1:-1;6702:25:167::2;6730:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;6748:1;6730:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:39;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;6770:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;6788:1;6770:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:34;;;6730:75;;;;;;;:::i;:::-;:81;::::0;::::2;:75;::::0;;::::2;;:81:::0;;::::2;::::0;-1:-1:-1;6730:81:167::2;:::i;:::-;6906:12;::::0;6702:109;;-1:-1:-1;6932:36:167;;6928:725:::2;;7033:4;::::0;7061:9:::2;::::0;6985:22:::2;::::0;;;7033:4:::2;::::0;;::::2;::::0;:10:::2;::::0;7061:9:::2;7088:69;6985:22:::0;7151:4:::2;1053:42:93::0;1150:25;;;1195:4;1188:20;1256:4;1243:18;;;933:344;7088:69:167::2;7218:18;::::0;;7234:1:::2;7218:18:::0;;;::::2;::::0;::::2;::::0;;;7175:8;;7201:62:::2;::::0;7218:18;::::2;::::0;::::2;;;;;;;;;;;;;;;;;-1:-1:-1::0;7238:24:167::2;::::0;;7260:1:::2;7238:24:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;7238:24:167::2;;;;;;;;;;;;;;;;;7201:16;:62::i;:::-;7281:16;::::0;;7295:1:::2;7281:16:::0;;::::2;::::0;::::2;::::0;;;;7033:278;::::2;::::0;;;;;;;::::2;::::0;;;;;;;;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;::::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;7391:12:::0;;6984:327;;-1:-1:-1;6984:327:167;-1:-1:-1;7391:16:167;7387:85:::2;;7434:23;;;;;;;;;;;;;;7387:85;7551:10:::0;;:14;7547:96:::2;;7585:9;::::0;;:43:::2;::::0;;;;:9:::2;::::0;;::::2;::::0;:13:::2;::::0;:43:::2;::::0;:9:::2;::::0;7624:3;;7585:43:::2;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;7547:96;6970:683;;6928:725;7708:10;::::0;7663:60:::2;::::0;7708:10:::2;7663:36:::0;;::::2;::::0;7708:10;;::::2;;7721:1;7663:36;:60::i;:::-;7778:10;::::0;7733:76:::2;::::0;7778:10:::2;7733:36:::0;;::::2;::::0;7778:10;;::::2;;7791:17;7733:36;:76::i;:::-;7863:10;::::0;:33:::2;::::0;;;;7820:18:::2;::::0;;;7863:10;;;::::2;;;::::0;:21:::2;::::0;:33:::2;::::0;7885:10;;7863:33:::2;;;:::i;:::-;;::::0;::::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7986:10;::::0;7819:77;;-1:-1:-1;7819:77:167;-1:-1:-1;7941:60:167::2;::::0;7986:10:::2;7941:36:::0;;::::2;::::0;7986:10;;::::2;;7999:1;7941:36;:60::i;:::-;8091:49;::::0;;;;8134:4:::2;8091:49;::::0;::::2;1883:74:227::0;8068:20:167::2;::::0;8091:34:::2;::::0;::::2;::::0;::::2;::::0;1856:18:227;;8091:49:167::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8068:72;;8169:19;8154:12;:34;8150:120;;;8211:48;::::0;::::2;::::0;;::::2;::::0;::::2;28354:25:227::0;;;28395:18;;;28388:34;;;28327:18;;8211:48:167::2;28180:248:227::0;8150:120:167::2;8283:16:::0;;8279:110:::2;;8315:63;:37;::::0;::::2;8353:10;8365:12:::0;8315:37:::2;:63::i;:::-;8479:50;::::0;;;;8523:4:::2;8479:50;::::0;::::2;1883:74:227::0;8455:21:167::2;::::0;8479:35:::2;::::0;::::2;::::0;::::2;::::0;1856:18:227;;8479:50:167::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8455:74:::0;-1:-1:-1;8543:17:167;;8539:113:::2;;8576:65;:38;::::0;::::2;8615:10;8627:13:::0;8576:38:::2;:65::i;:::-;9067:61;9093:10;9106:21;9067:17;:61::i;:::-;6420:2715;;;;;;;2303:20:22::0;1716:1;2809:7;:22;2629:209;2303:20;6252:2883:167;;:::o;9184:262::-;6596:13:21;;;;;;;4112:69:167;;;4156:14;;;;;;;;;;;;;;4112:69;9374:10:::1;::::0;;;::::1;;;9352;:33;9348:92;;9408:21;::::0;::::1;::::0;;9418:10:::1;9408:21;::::0;::::1;1883:74:227::0;1856:18;;9408:21:167::1;1712:251:227::0;9348:92:167::1;9184:262:::0;;;;;;:::o;1818:573:27:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:27;;;;;2183:4;2159:39;;;28668:34:227;2159:15:27;28738::227;;;28718:18;;;28711:43;2159:15:27;;;;;28580:18:227;;2159:39:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;;;;28967:2:227;2121:163:27;;;28949:21:227;29006:2;28986:18;;;28979:30;29045:34;29025:18;;;29018:62;29116:24;29096:18;;;29089:52;29158:19;;2121:163:27;28765:418:227;2121:163:27;2321:62;;29392:42:227;29380:55;;2321:62:27;;;29362:74:227;29452:18;;;29445:34;;;2294:90:27;;2314:5;;2344:22;;29335:18:227;;2321:62:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:19;:90::i;:::-;1818:573;;;:::o;2336:287:22:-;1759:1;2468:7;;:19;2460:63;;;;;;;29692:2:227;2460:63:22;;;29674:21:227;29731:2;29711:18;;;29704:30;29770:33;29750:18;;;29743:61;29821:18;;2460:63:22;29490:355:227;2460:63:22;1759:1;2598:7;:18;2336:287::o;923:202:173:-;1006:22;1043:4;1032:27;;;;;;;;;;;;:::i;:::-;1069:15;:49;;;;;;;;;;;;;;;-1:-1:-1;;923:202:173:o;3332:365:86:-;3399:13;3428:8;:15;3447:1;3428:20;3424:59;;-1:-1:-1;3471:1:86;;3332:365;-1:-1:-1;3332:365:86:o;3424:59::-;-1:-1:-1;3674:4:86;3660:19;3654:26;3651:1;3646:35;;3332:365::o;7166:2290:87:-;7301:18;7359:24;7400:14;:21;7386:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7386:36:87;;7359:63;;7571:21;7645:1;7621:14;:21;:25;:57;;7677:1;7621:57;;;7649:14;:21;7673:1;7649:25;7621:57;7599:11;:18;7595:1;:22;:84;7571:108;;7694:26;7739:13;7723:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7694:59;;7767:14;7817:17;3283:4:159;3277:11;;3315:1;3301:16;;2288:10:87;3348:4:159;3337:16;;3330:27;2326:4:87;3377:16:159;;;3370:27;2211:16:87;3423::159;;3410:30;;;3277:11;2172:169:87;7817:17;7799:7;7807:6;7799:15;;;;;;;;:::i;:::-;;;;;;:35;;;;7854:9;7849:140;7873:11;:18;7869:1;:22;7849:140;;;7916:8;;;;;;;7960:11;7972:1;7960:14;;;;;;;;:::i;:::-;;;;;;;7942:7;7950:6;7942:15;;;;;;;;:::i;:::-;;;;;;;;;;:32;7893:3;;7849:140;;;-1:-1:-1;8007:21:87;;:25;8003:1408;;8052:8;;;;;;;8096:7;8078;8086:6;8078:15;;;;;;;;:::i;:::-;;;;;;:25;;;;8127:9;8122:1275;8146:14;:21;8142:1;:25;8122:1275;;;8824:284;8890:14;8905:1;8890:17;;;;;;;;:::i;:::-;;;;;;;:24;;;8944:81;8973:51;8998:14;9013:1;8998:17;;;;;;;;:::i;:::-;;;;;;;:25;;;4081:13:146;;4096:4;4077:24;;;4058:17;;4048:54;;3908:210;8973:51:87;7389:34:33;7189:15;7376:48;;;7444:4;7437:18;;;;7495:4;7479:21;;;7120:396;8944:81:87;9055:14;9070:1;9055:17;;;;;;;;:::i;:::-;;;;;;;:27;;;8824:36;:284::i;:::-;8196:1010;;9164:19;;;;;;;;3826:25:227;;;3799:18;;9164:19:87;3680:177:227;8196:1010:87;9257:14;9272:1;9257:17;;;;;;;;:::i;:::-;;;;;;;:24;;;9241:42;;9228:7;9236:1;9228:10;;;;;;;;:::i;:::-;;;;;;:55;;;;;9305:8;;;;;;;9353:14;9368:1;9353:17;;;;;;;;:::i;:::-;;;;;;;:25;;;9335:7;9343:6;9335:15;;;;;;;;:::i;:::-;;;;;;;;;;:43;8169:3;;8122:1275;;;;8003:1408;-1:-1:-1;9432:7:87;7166:2290;-1:-1:-1;;;;;7166:2290:87:o;941:175:27:-;1050:58;;29392:42:227;29380:55;;1050:58:27;;;29362:74:227;29452:18;;;29445:34;;;1023:86:27;;1043:5;;1073:23;;29335:18:227;;1050:58:27;29188:297:227;2647:312:29;2761:6;2736:21;:31;;2728:73;;;;;;;30316:2:227;2728:73:29;;;30298:21:227;30355:2;30335:18;;;30328:30;30394:31;30374:18;;;30367:59;30443:18;;2728:73:29;30114:353:227;2728:73:29;2813:12;2831:9;:14;;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;;;;30884:2:227;2874:78:29;;;30866:21:227;30923:2;30903:18;;;30896:30;30962:34;30942:18;;;30935:62;31033:28;31013:18;;;31006:56;31079:19;;2874:78:29;30682:422:227;5196:642:27;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;;;;31561:2:227;5720:111:27;;;31543:21:227;31600:2;31580:18;;;31573:30;31639:34;31619:18;;;31612:62;31710:12;31690:18;;;31683:40;31740:19;;5720:111:27;31359:406:227;1014:366:34;1120:4;1137:17;1156:24;1184:33;1201:4;1207:9;1184:16;:33::i;:::-;1136:81;;-1:-1:-1;1136:81:34;-1:-1:-1;1256:26:34;1247:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1299:6;1286:19;;:9;:19;;;1247:58;1246:127;;;;1322:51;1349:6;1357:4;1363:9;1322:26;:51::i;:::-;1227:146;1014:366;-1:-1:-1;;;;;;1014:366:34:o;4108:223:29:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:29:o;2145:730:33:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:33;;-1:-1:-1;2822:35:33;2259:610;2145:730;;;;;:::o;1786:473:34:-;1929:4;1946:12;1960:19;1983:6;:17;;2037:34;;;2073:4;2079:9;2014:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:116;;;;2014:75;1983:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:154;;;;2117:7;:42;;;;;2157:2;2140:6;:13;:19;;2117:42;:134;;;;-1:-1:-1;2175:29:34;;2216:34;;2175:29;;;;;;;;;;;;:::i;:::-;:76;;1786:473;-1:-1:-1;;;;;;1786:473:34:o;5165:446:29:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;32935:2:227;5354:81:29;;;32917:21:227;32974:2;32954:18;;;32947:30;33013:34;32993:18;;;32986:62;33084:8;33064:18;;;33057:36;33110:19;;5354:81:29;32733:402:227;5354:81:29;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:29:o;5009:1456:33:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:33;;-1:-1:-1;6123:30:33;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;33367:25:227;;;33440:4;33428:17;;33408:18;;;33401:45;;;;33462:18;;;33455:34;;;33505:18;;;33498:34;;;6276:24:33;;33339:19:227;;6276:24:33;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:33;;;;;;-1:-1:-1;;6314:20:33;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:33;;-1:-1:-1;5009:1456:33;;;;;;;;:::o;7671:628:29:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;1702:19;;;;8113:60;;;;;;;33745:2:227;8113:60:29;;;33727:21:227;33784:2;33764:18;;;33757:30;33823:31;33803:18;;;33796:59;33872:18;;8113:60:29;33543:353:227;8113:60:29;-1:-1:-1;8208:10:29;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;14:332:227:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:227:o;543:154::-;629:42;622:5;618:54;611:5;608:65;598:93;;687:1;684;677:12;598:93;543:154;:::o;702:1005::-;808:6;816;824;832;840;848;901:3;889:9;880:7;876:23;872:33;869:53;;;918:1;915;908:12;869:53;957:9;944:23;976:31;1001:5;976:31;:::i;:::-;1026:5;-1:-1:-1;1083:2:227;1068:18;;1055:32;1096:33;1055:32;1096:33;:::i;:::-;1148:7;-1:-1:-1;1202:2:227;1187:18;;1174:32;;-1:-1:-1;1253:2:227;1238:18;;1225:32;;-1:-1:-1;1308:3:227;1293:19;;1280:33;1332:18;1362:14;;;1359:34;;;1389:1;1386;1379:12;1359:34;1427:6;1416:9;1412:22;1402:32;;1472:7;1465:4;1461:2;1457:13;1453:27;1443:55;;1494:1;1491;1484:12;1443:55;1534:2;1521:16;1560:2;1552:6;1549:14;1546:34;;;1576:1;1573;1566:12;1546:34;1621:7;1616:2;1607:6;1603:2;1599:15;1595:24;1592:37;1589:57;;;1642:1;1639;1632:12;1589:57;1673:2;1669;1665:11;1655:21;;1695:6;1685:16;;;;;702:1005;;;;;;;;:::o;1968:184::-;2020:77;2017:1;2010:88;2117:4;2114:1;2107:15;2141:4;2138:1;2131:15;2157:253;2229:2;2223:9;2271:4;2259:17;;2306:18;2291:34;;2327:22;;;2288:62;2285:88;;;2353:18;;:::i;:::-;2389:2;2382:22;2157:253;:::o;2415:334::-;2486:2;2480:9;2542:2;2532:13;;2547:66;2528:86;2516:99;;2645:18;2630:34;;2666:22;;;2627:62;2624:88;;;2692:18;;:::i;:::-;2728:2;2721:22;2415:334;;-1:-1:-1;2415:334:227:o;2754:245::-;2802:4;2835:18;2827:6;2824:30;2821:56;;;2857:18;;:::i;:::-;-1:-1:-1;2914:2:227;2902:15;2919:66;2898:88;2988:4;2894:99;;2754:245::o;3004:671::-;3072:6;3125:2;3113:9;3104:7;3100:23;3096:32;3093:52;;;3141:1;3138;3131:12;3093:52;3181:9;3168:23;3214:18;3206:6;3203:30;3200:50;;;3246:1;3243;3236:12;3200:50;3269:22;;3322:4;3314:13;;3310:27;-1:-1:-1;3300:55:227;;3351:1;3348;3341:12;3300:55;3387:2;3374:16;3412:48;3428:31;3456:2;3428:31;:::i;:::-;3412:48;:::i;:::-;3483:2;3476:5;3469:17;3523:7;3518:2;3513;3509;3505:11;3501:20;3498:33;3495:53;;;3544:1;3541;3534:12;3495:53;3599:2;3594;3590;3586:11;3581:2;3574:5;3570:14;3557:45;3643:1;3622:14;;;3638:2;3618:23;3611:34;;;;3626:5;3004:671;-1:-1:-1;;;;3004:671:227:o;4849:412::-;4961:6;5014:2;5002:9;4993:7;4989:23;4985:32;4982:52;;;5030:1;5027;5020:12;4982:52;5070:9;5057:23;5103:18;5095:6;5092:30;5089:50;;;5135:1;5132;5125:12;5089:50;5158:22;;5214:2;5196:16;;;5192:25;5189:45;;;5230:1;5227;5220:12;5266:467;5373:6;5381;5434:2;5422:9;5413:7;5409:23;5405:32;5402:52;;;5450:1;5447;5440:12;5402:52;5490:9;5477:23;5523:18;5515:6;5512:30;5509:50;;;5555:1;5552;5545:12;5509:50;5578:22;;5634:3;5616:16;;;5612:26;5609:46;;;5651:1;5648;5641:12;5609:46;5674:2;5723;5708:18;;;;5695:32;;-1:-1:-1;;;5266:467:227:o;5738:250::-;5823:1;5833:113;5847:6;5844:1;5841:13;5833:113;;;5923:11;;;5917:18;5904:11;;;5897:39;5869:2;5862:10;5833:113;;;-1:-1:-1;;5980:1:227;5962:16;;5955:27;5738:250::o;5993:329::-;6034:3;6072:5;6066:12;6099:6;6094:3;6087:19;6115:76;6184:6;6177:4;6172:3;6168:14;6161:4;6154:5;6150:16;6115:76;:::i;:::-;6236:2;6224:15;6241:66;6220:88;6211:98;;;;6311:4;6207:109;;5993:329;-1:-1:-1;;5993:329:227:o;6327:664::-;6577:4;6606:42;6687:2;6679:6;6675:15;6664:9;6657:34;6727:6;6722:2;6711:9;6707:18;6700:34;6782:2;6774:6;6770:15;6765:2;6754:9;6750:18;6743:43;6822:6;6817:2;6806:9;6802:18;6795:34;6878:2;6870:6;6866:15;6860:3;6849:9;6845:19;6838:44;;6919:3;6913;6902:9;6898:19;6891:32;6940:45;6980:3;6969:9;6965:19;6957:6;6940:45;:::i;:::-;6932:53;6327:664;-1:-1:-1;;;;;;;;6327:664:227:o;6996:184::-;7066:6;7119:2;7107:9;7098:7;7094:23;7090:32;7087:52;;;7135:1;7132;7125:12;7087:52;-1:-1:-1;7158:16:227;;6996:184;-1:-1:-1;6996:184:227:o;7600:441::-;7653:5;7706:3;7699:4;7691:6;7687:17;7683:27;7673:55;;7724:1;7721;7714:12;7673:55;7753:6;7747:13;7784:48;7800:31;7828:2;7800:31;:::i;7784:48::-;7857:2;7848:7;7841:19;7903:3;7896:4;7891:2;7883:6;7879:15;7875:26;7872:35;7869:55;;;7920:1;7917;7910:12;7869:55;7933:77;8007:2;8000:4;7991:7;7987:18;7980:4;7972:6;7968:17;7933:77;:::i;8046:709::-;8111:5;8164:3;8157:4;8149:6;8145:17;8141:27;8131:55;;8182:1;8179;8172:12;8131:55;8211:6;8205:13;8237:4;8260:18;8256:2;8253:26;8250:52;;;8282:18;;:::i;:::-;8328:2;8325:1;8321:10;8351:28;8375:2;8371;8367:11;8351:28;:::i;:::-;8413:15;;;8483;;;8479:24;;;8444:12;;;;8515:15;;;8512:35;;;8543:1;8540;8533:12;8512:35;8579:2;8571:6;8567:15;8556:26;;8591:135;8607:6;8602:3;8599:15;8591:135;;;8673:10;;8661:23;;8624:12;;;;8704;;;;8591:135;;8760:1508;8881:6;8934:2;8922:9;8913:7;8909:23;8905:32;8902:52;;;8950:1;8947;8940:12;8902:52;8983:9;8977:16;9012:18;9053:2;9045:6;9042:14;9039:34;;;9069:1;9066;9059:12;9039:34;9092:22;;;;9148:4;9130:16;;;9126:27;9123:47;;;9166:1;9163;9156:12;9123:47;9192:22;;:::i;:::-;9244:2;9238:9;9256:33;9281:7;9256:33;:::i;:::-;9298:22;;9359:2;9351:11;;9345:18;9375:16;;;9372:36;;;9404:1;9401;9394:12;9372:36;9427:17;;9478:4;9460:16;;;9456:27;9453:47;;;9496:1;9493;9486:12;9453:47;9524:22;;:::i;:::-;9576:2;9570:9;9588:33;9613:7;9588:33;:::i;:::-;9630:24;;9693:2;9685:11;;9679:18;9709:16;;;9706:36;;;9738:1;9735;9728:12;9706:36;9776:55;9823:7;9812:8;9808:2;9804:17;9776:55;:::i;:::-;9771:2;9762:7;9758:16;9751:81;;9871:2;9867;9863:11;9857:18;9900:2;9890:8;9887:16;9884:36;;;9916:1;9913;9906:12;9884:36;9954:67;10013:7;10002:8;9998:2;9994:17;9954:67;:::i;:::-;9949:2;9940:7;9936:16;9929:93;;10054:7;10049:2;10042:5;10038:14;10031:31;;;10101:2;10097;10093:11;10087:18;10130:2;10120:8;10117:16;10114:36;;;10146:1;10143;10136:12;10114:36;10182:55;10229:7;10218:8;10214:2;10210:17;10182:55;:::i;:::-;10177:2;10166:14;;10159:79;-1:-1:-1;10170:5:227;8760:1508;-1:-1:-1;;;;;8760:1508:227:o;10273:435::-;10326:3;10364:5;10358:12;10391:6;10386:3;10379:19;10417:4;10446:2;10441:3;10437:12;10430:19;;10483:2;10476:5;10472:14;10504:1;10514:169;10528:6;10525:1;10522:13;10514:169;;;10589:13;;10577:26;;10623:12;;;;10658:15;;;;10550:1;10543:9;10514:169;;;-1:-1:-1;10699:3:227;;10273:435;-1:-1:-1;;;;;10273:435:227:o;10713:1278::-;10935:4;10964:42;11045:2;11037:6;11033:15;11022:9;11015:34;11085:2;11080;11069:9;11065:18;11058:30;11143:2;11134:6;11128:13;11124:22;11119:2;11108:9;11104:18;11097:50;11194:2;11186:6;11182:15;11176:22;11236:4;11229;11218:9;11214:20;11207:34;11303:2;11288:12;11282:19;11278:28;11272:3;11261:9;11257:19;11250:57;11362:2;11348:12;11344:21;11338:28;11316:50;;11403:4;11397:3;11386:9;11382:19;11375:33;11431:53;11479:3;11468:9;11464:19;11448:14;11431:53;:::i;:::-;11417:67;;11539:2;11525:12;11521:21;11515:28;11493:50;;11608:66;11596:9;11588:6;11584:22;11580:95;11574:3;11563:9;11559:19;11552:124;11696:52;11741:6;11725:14;11696:52;:::i;:::-;11685:63;;;11797:2;11789:6;11785:15;11779:22;11863:66;11851:9;11846:3;11842:19;11838:92;11832:3;11821:9;11817:19;11810:121;11948:37;11981:3;11965:14;11948:37;:::i;11996:421::-;12221:2;12210:9;12203:21;12184:4;12247:44;12287:2;12276:9;12272:18;12264:6;12247:44;:::i;:::-;12339:9;12331:6;12327:22;12322:2;12311:9;12307:18;12300:50;12367:44;12404:6;12396;12367:44;:::i;:::-;12359:52;11996:421;-1:-1:-1;;;;;11996:421:227:o;12422:785::-;12581:6;12589;12597;12605;12658:3;12646:9;12637:7;12633:23;12629:33;12626:53;;;12675:1;12672;12665:12;12626:53;12707:9;12701:16;12726:31;12751:5;12726:31;:::i;:::-;12826:2;12811:18;;12805:25;12776:5;;-1:-1:-1;12839:33:227;12805:25;12839:33;:::i;:::-;12943:2;12928:18;;12922:25;12891:7;;-1:-1:-1;12956:33:227;12922:25;12956:33;:::i;:::-;13059:2;13044:18;;13038:25;13008:7;;-1:-1:-1;13086:18:227;13075:30;;13072:50;;;13118:1;13115;13108:12;13072:50;13141:60;13193:7;13184:6;13173:9;13169:22;13141:60;:::i;:::-;13131:70;;;12422:785;;;;;;;:::o;13593:642::-;13724:4;13730:6;13790:11;13777:25;13880:66;13869:8;13853:14;13849:29;13845:102;13825:18;13821:127;13811:155;;13962:1;13959;13952:12;13811:155;13989:33;;14041:20;;;-1:-1:-1;14084:18:227;14073:30;;14070:50;;;14116:1;14113;14106:12;14070:50;14149:4;14137:17;;-1:-1:-1;14200:1:227;14196:14;;;14180;14176:35;14166:46;;14163:66;;;14225:1;14222;14215:12;14240:184;14292:77;14289:1;14282:88;14389:4;14386:1;14379:15;14413:4;14410:1;14403:15;14429:394;14533:4;14591:11;14578:25;14681:66;14670:8;14654:14;14650:29;14646:102;14626:18;14622:127;14612:155;;14763:1;14760;14753:12;14612:155;14784:33;;;;;14429:394;-1:-1:-1;;14429:394:227:o;14828:384::-;14922:4;14980:11;14967:25;15070:66;15059:8;15043:14;15039:29;15035:102;15015:18;15011:127;15001:155;;15152:1;15149;15142:12;15217:630;15333:4;15339:6;15399:11;15386:25;15489:66;15478:8;15462:14;15458:29;15454:102;15434:18;15430:127;15420:155;;15571:1;15568;15561:12;15420:155;15598:33;;15650:20;;;-1:-1:-1;15693:18:227;15682:30;;15679:50;;;15725:1;15722;15715:12;15679:50;15758:4;15746:17;;-1:-1:-1;15817:4:227;15805:17;;15789:14;15785:38;15775:49;;15772:69;;;15837:1;15834;15827:12;15852:247;15911:6;15964:2;15952:9;15943:7;15939:23;15935:32;15932:52;;;15980:1;15977;15970:12;15932:52;16019:9;16006:23;16038:31;16063:5;16038:31;:::i;16104:1456::-;16569:4;16617:3;16606:9;16602:19;16660:42;16652:6;16648:55;16637:9;16630:74;16723:2;16761:6;16756:2;16745:9;16741:18;16734:34;16804:6;16799:2;16788:9;16784:18;16777:34;16847:3;16842:2;16831:9;16827:18;16820:31;16871:6;16906;16900:13;16937:6;16929;16922:22;16975:3;16964:9;16960:19;16953:26;;17038:3;17028:6;17025:1;17021:14;17010:9;17006:30;17002:40;16988:54;;17077:2;17069:6;17065:15;17098:1;17108:325;17122:6;17119:1;17116:13;17108:325;;;17211:66;17199:9;17191:6;17187:22;17183:95;17178:3;17171:108;17302:51;17346:6;17337;17331:13;17302:51;:::i;:::-;17292:61;-1:-1:-1;17411:12:227;;;;17376:15;;;;17144:1;17137:9;17108:325;;;17112:3;;;;;17482:9;17474:6;17470:22;17464:3;17453:9;17449:19;17442:51;17510:44;17547:6;17539;17510:44;:::i;17565:614::-;17694:6;17702;17755:2;17743:9;17734:7;17730:23;17726:32;17723:52;;;17771:1;17768;17761:12;17723:52;17804:9;17798:16;17833:18;17874:2;17866:6;17863:14;17860:34;;;17890:1;17887;17880:12;17860:34;17913:72;17977:7;17968:6;17957:9;17953:22;17913:72;:::i;:::-;17903:82;;18031:2;18020:9;18016:18;18010:25;17994:41;;18060:2;18050:8;18047:16;18044:36;;;18076:1;18073;18066:12;18044:36;;18099:74;18165:7;18154:8;18143:9;18139:24;18099:74;:::i;:::-;18089:84;;;17565:614;;;;;:::o;18184:368::-;18427:6;18416:9;18409:25;18470:2;18465;18454:9;18450:18;18443:30;18390:4;18490:56;18542:2;18531:9;18527:18;18519:6;18490:56;:::i;18557:605::-;18653:5;18660:6;18720:3;18707:17;18802:66;18791:8;18775:14;18771:29;18767:102;18747:18;18743:127;18733:155;;18884:1;18881;18874:12;18733:155;18912:33;;19016:4;19003:18;;;-1:-1:-1;18964:21:227;;-1:-1:-1;19044:18:227;19033:30;;19030:50;;;19076:1;19073;19066:12;19030:50;19130:6;19127:1;19123:14;19107;19103:35;19096:5;19092:47;19089:67;;;19152:1;19149;19142:12;19167:118;19253:5;19246:13;19239:21;19232:5;19229:32;19219:60;;19275:1;19272;19265:12;19290:593;19371:5;19378:6;19438:3;19425:17;19520:66;19509:8;19493:14;19489:29;19485:102;19465:18;19461:127;19451:155;;19602:1;19599;19592:12;19451:155;19630:33;;19734:4;19721:18;;;-1:-1:-1;19682:21:227;;-1:-1:-1;19762:18:227;19751:30;;19748:50;;;19794:1;19791;19784:12;19748:50;19853:4;19845:6;19841:17;19825:14;19821:38;19814:5;19810:50;19807:70;;;19873:1;19870;19863:12;19888:892;19999:6;19994:3;19987:19;19969:3;20025:4;20054:2;20049:3;20045:12;20038:19;;20080:5;20103:1;20124;20134:621;20150:6;20145:3;20142:15;20134:621;;;20231:6;20218:20;20251:33;20276:7;20251:33;:::i;:::-;20322:42;20309:56;20297:69;;20407:15;;;20394:29;20459:4;20446:18;;20487:15;;;20477:43;;20516:1;20513;20506:12;20477:43;20540:12;;;20533:24;-1:-1:-1;20580:4:227;20631:15;;;20618:29;20604:12;;;20597:51;20671:4;20695:12;;;;20730:15;;;;20176:1;20167:11;20134:621;;;-1:-1:-1;20771:3:227;;19888:892;-1:-1:-1;;;;;;19888:892:227:o;20785:559::-;20843:5;20850:6;20910:3;20897:17;20992:66;20981:8;20965:14;20961:29;20957:102;20937:18;20933:127;20923:155;;21074:1;21071;21064:12;20923:155;21102:33;;21206:4;21193:18;;;-1:-1:-1;21154:21:227;;-1:-1:-1;21234:18:227;21223:30;;21220:50;;;21266:1;21263;21256:12;21220:50;21313:6;21297:14;21293:27;21286:5;21282:39;21279:59;;;21334:1;21331;21324:12;21349:325;21437:6;21432:3;21425:19;21489:6;21482:5;21475:4;21470:3;21466:14;21453:43;;21541:1;21534:4;21525:6;21520:3;21516:16;21512:27;21505:38;21407:3;21663:4;21593:66;21588:2;21580:6;21576:15;21572:88;21567:3;21563:98;21559:109;21552:116;;21349:325;;;;:::o;21679:1874::-;21803:6;21798:3;21791:19;21773:3;21829:4;21870:2;21865:3;21861:12;21895:11;21922;21915:18;;21952:1;21942:11;;21993:6;21989:2;21985:15;21978:5;21974:27;22024:5;22047:1;22057:1470;22071:6;22068:1;22065:13;22057:1470;;;22142:5;22136:4;22132:16;22127:3;22120:29;22201:6;22188:20;22287:66;22279:5;22263:14;22259:26;22255:99;22235:18;22231:124;22221:152;;22369:1;22366;22359:12;22221:152;22401:30;;22454:4;22486:21;;22520:33;22486:21;22520:33;:::i;:::-;22592:42;22579:56;22566:70;;22683:95;22761:16;;;22765:7;22683:95;:::i;:::-;22813:2;22808;22802:4;22798:13;22791:25;22851:12;22846:2;22840:4;22836:13;22829:35;22887:3;22877:13;;22923:66;22909:12;22906:84;22903:104;;;23003:1;23000;22993:12;22903:104;23036:21;;;23098:12;23083:13;;;23070:51;23144:19;;;-1:-1:-1;23186:4:227;23241:57;23281:16;;;23285:7;23241:57;:::i;:::-;23203:95;;23352:2;23345:4;23341:2;23337:13;23333:22;23328:2;23322:4;23318:13;23311:45;23377:70;23443:2;23439;23435:11;23419:14;23403;23377:70;:::i;:::-;23505:12;;;;23369:78;-1:-1:-1;;;23470:15:227;;;;-1:-1:-1;;;22093:1:227;22086:9;22057:1470;;;-1:-1:-1;23543:4:227;;21679:1874;-1:-1:-1;;;;;;;;21679:1874:227:o;23558:4136::-;23726:4;23755:2;23784;23773:9;23766:21;23825:3;23814:9;23810:19;23878:6;23865:20;23860:2;23849:9;23845:18;23838:48;23905:2;23968;23960:6;23956:15;23943:29;23938:2;23927:9;23923:18;23916:57;23992:2;24055;24047:6;24043:15;24030:29;24025:2;24014:9;24010:18;24003:57;24103:93;24192:2;24184:6;24180:15;24172:6;24103:93;:::i;:::-;24215:4;24238:3;24257:18;;;24250:30;;;24315:28;;;;24362:3;;24381:18;;;24445:1;24441:20;;;24426:36;;24422:45;;24490:12;24520:1;24530:2842;24544:12;24541:1;24538:19;24530:2842;;;24639:66;24627:9;24619:6;24615:22;24611:95;24606:3;24599:108;24759:6;24746:20;24852:66;24837:12;24821:14;24817:33;24813:106;24793:18;24789:131;24779:159;;24934:1;24931;24924:12;24779:159;24964:37;;25042:19;;25118:14;25114:26;;;25142:66;25110:99;25084:126;;25074:154;;25224:1;25221;25214:12;25074:154;25301:18;;;25256:32;;25347:21;;25381:33;25347:21;25381:33;:::i;:::-;25437:42;25516:16;;;25499:15;;;25492:41;25574:16;;;25561:30;;25604;25561;25604;:::i;:::-;25678:15;;25671:23;25654:15;;;25647:48;25736:16;;;25723:30;;25766:33;25723:30;25766:33;:::i;:::-;25837:16;;;25831:3;25819:16;;25812:42;25895:16;;;25882:30;;25925:33;25882:30;25925:33;:::i;:::-;25995:16;;;25978:15;;;25971:41;26053:16;;;26040:30;;26083:33;26040:30;26083:33;:::i;:::-;26154:16;26148:3;26136:16;;26129:42;26222:80;26285:16;;;26289:7;26222:80;:::i;:::-;26340:2;26334:3;26326:6;26322:16;26315:28;26370:98;26463:3;26455:6;26451:16;26435:14;26419;26370:98;:::i;:::-;26356:112;;;26519:81;26595:3;26586:7;26582:17;26573:7;26519:81;:::i;:::-;26481:119;;26663:66;26654:6;26646;26642:19;26638:92;26632:3;26624:6;26620:16;26613:118;26755:88;26836:6;26820:14;26804;26755:88;:::i;:::-;26744:99;;;;26904:2;26897:5;26893:14;26880:28;26875:2;26867:6;26863:15;26856:53;26970:2;26963:5;26959:14;26946:28;26941:2;26933:6;26929:15;26922:53;27026:91;27113:2;27106:5;27102:14;27095:5;27026:91;:::i;:::-;26988:129;;27163:6;27158:3;27154:16;27149:2;27141:6;27137:15;27130:41;27194:98;27288:3;27272:14;27256;27194:98;:::i;:::-;27350:12;;;;27184:108;-1:-1:-1;;;27315:15:227;;;;-1:-1:-1;24572:1:227;24565:9;24530:2842;;;24534:3;;27419:55;27470:2;27462:6;27458:15;27450:6;27419:55;:::i;:::-;27381:93;;;;27538:66;27526:9;27518:6;27514:22;27510:95;27505:2;27494:9;27490:18;27483:123;27623:65;27681:6;27665:14;27649;27623:65;:::i;:::-;27615:73;23558:4136;-1:-1:-1;;;;;;;;;;;;;23558:4136:227:o;27699:245::-;27778:6;27786;27839:2;27827:9;27818:7;27814:23;27810:32;27807:52;;;27855:1;27852;27845:12;27807:52;-1:-1:-1;;27878:16:227;;27934:2;27919:18;;;27913:25;27878:16;;27913:25;;-1:-1:-1;27699:245:227:o;29850:259::-;29928:6;29981:2;29969:9;29960:7;29956:23;29952:32;29949:52;;;29997:1;29994;29987:12;29949:52;30029:9;30023:16;30048:31;30073:5;30048:31;:::i;31109:245::-;31176:6;31229:2;31217:9;31208:7;31204:23;31200:32;31197:52;;;31245:1;31242;31235:12;31197:52;31277:9;31271:16;31296:28;31318:5;31296:28;:::i;31770:184::-;31822:77;31819:1;31812:88;31919:4;31916:1;31909:15;31943:4;31940:1;31933:15;31959:288;32134:6;32123:9;32116:25;32177:2;32172;32161:9;32157:18;32150:30;32097:4;32197:44;32237:2;32226:9;32222:18;32214:6;32197:44;:::i;32252:287::-;32381:3;32419:6;32413:13;32435:66;32494:6;32489:3;32482:4;32474:6;32470:17;32435:66;:::i;33901:219::-;34050:2;34039:9;34032:21;34013:4;34070:44;34110:2;34099:9;34095:18;34087:6;34070:44;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256)": "c3b7c7c3",
    "initialize((address,(address,bytes,uint256[]),bytes))": "98da8d6a",
    "initialize(bytes)": "439fab91",
    "onTakeOrders(address,address,uint256,uint256,bytes)": "059bebe6",
    "sI9r()": "71c1dea7",
    "sI9rDispatch()": "89448c3a",
    "sI9rStore()": "61bb39e4",
    "sOrderBook()": "886d1650",
    "sRouteProcessor()": "141ae6e6",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"internalType\":\"struct DeployerDiscoverableMetaV3ConstructionConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"badLender\",\"type\":\"address\"}],\"name\":\"BadLender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializeSignatureFn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"MinimumOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOrders\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inputs\",\"type\":\"uint256\"}],\"name\":\"NonZeroBeforeArbInputs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonZeroBeforeArbStack\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"unmeta\",\"type\":\"bytes\"}],\"name\":\"NotRainMetaV1\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedMetaHash\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV3\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV3\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct OrderBookV3ArbOrderTakerConfigV1\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subject\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"MetaV1\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minimumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumIORatio\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"handleIO\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"contract IInterpreterV2\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"internalType\":\"struct EvaluableV2\",\"name\":\"evaluable\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validInputs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validOutputs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderV2\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"inputIOIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputIOIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"context\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedContextV1[]\",\"name\":\"signedContext\",\"type\":\"tuple[]\"}],\"internalType\":\"struct TakeOrderConfigV2[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeOrdersConfigV2\",\"name\":\"takeOrders\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"minimumSenderOutput\",\"type\":\"uint256\"}],\"name\":\"arb\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV3\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV3\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderBookV3ArbOrderTakerConfigV1\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmountSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"takeOrdersData\",\"type\":\"bytes\"}],\"name\":\"onTakeOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9r\",\"outputs\":[{\"internalType\":\"contract IInterpreterV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rDispatch\",\"outputs\":[{\"internalType\":\"EncodedDispatch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rStore\",\"outputs\":[{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sOrderBook\",\"outputs\":[{\"internalType\":\"contract IOrderBookV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sRouteProcessor\",\"outputs\":[{\"internalType\":\"contract IRouteProcessor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BadLender(address)\":[{\"params\":{\"badLender\":\"The untrusted lender calling `onFlashLoan`.\"}}],\"MinimumOutput(uint256,uint256)\":[{\"params\":{\"actual\":\"The actual output that would be received by the sender.\",\"minimum\":\"The minimum output expected by the sender.\"}}],\"NotRainMetaV1(bytes)\":[{\"params\":{\"unmeta\":\"the bytes that are not meta.\"}}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"params\":{\"actualHash\":\"The hash of the metadata seen by the `IMetaV1` contract.\",\"expectedHash\":\"The hash expected by the `IMetaV1` contract.\"}}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetaV1(address,uint256,bytes)\":{\"params\":{\"meta\":\"Rain metadata V1 compliant metadata bytes. https://github.com/rainprotocol/specs/blob/main/metadata-v1.md\",\"sender\":\"The msg.sender.\",\"subject\":\"The entity that the metadata is about. MAY be the address of the emitting contract (as `uint256`) OR anything else. The interpretation of the subject is context specific, so will often be a hash of some data/thing that this metadata is about.\"}}},\"kind\":\"dev\",\"methods\":{\"initialize(bytes)\":{\"details\":\"The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.\",\"params\":{\"data\":\"The initialization data.\"},\"returns\":{\"_0\":\"keccak256(\\\"ICloneableV2.initialize\\\") if successful.\"}},\"onTakeOrders(address,address,uint256,uint256,bytes)\":{\"params\":{\"inputAmountSent\":\"The amount of `inputToken` that was sent to `IOrderBookV3OrderTaker`.\",\"inputToken\":\"The token that was sent to `IOrderBookV3OrderTaker`.\",\"outputToken\":\"The token that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.\",\"takeOrdersData\":\"The data passed to `takeOrders` by the caller.\",\"totalOutputAmount\":\"The total amount of `outputToken` that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"BadLender(address)\":[{\"notice\":\"Thrown when the lender is not the trusted `OrderBook`.\"}],\"InitializeSignatureFn()\":[{\"notice\":\"Overloaded initialize function MUST revert with this error.\"}],\"Initializing()\":[{\"notice\":\"Thrown when calling functions while the contract is still initializing.\"}],\"InvalidSignature(uint256)\":[{\"notice\":\"Thrown when the ith signature from a list of signed contexts is invalid.\"}],\"MinimumOutput(uint256,uint256)\":[{\"notice\":\"Thrown when the minimum output for the sender is not met after the arb.\"}],\"NoOrders()\":[{\"notice\":\"Thrown when take orders is called with no orders.\"}],\"NonZeroBeforeArbInputs(uint256)\":[{\"notice\":\"Thrown when \\\"before arb\\\" wants inputs that we don't have.\"}],\"NonZeroBeforeArbStack()\":[{\"notice\":\"Thrown when the stack is not empty after the access control dispatch.\"}],\"NotRainMetaV1(bytes)\":[{\"notice\":\"Thrown when some bytes are expected to be rain meta and are not.\"}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when hashed metadata does NOT match the expected hash.\"}]},\"events\":{\"MetaV1(address,uint256,bytes)\":{\"notice\":\"An onchain wrapper to carry arbitrary Rain metadata. Assigns the sender to the metadata so that tooling can easily drop/ignore data from unknown sources. As metadata is about something, the subject MUST be provided.\"}},\"kind\":\"user\",\"methods\":{\"initialize(bytes)\":{\"notice\":\"Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \\\"ICloneableV2.initialize\\\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`.\"},\"onTakeOrders(address,address,uint256,uint256,bytes)\":{\"notice\":\"Called by `OrderBookV3` when `takeOrders` is called with non-zero data, if it caused a non-zero input amount. I.e. if the order(s) taker received some tokens. Input and output directions are relative to the `IOrderBookV3OrderTaker` contract. If the order(s) taker had an active debt from a flash loan then that debt will be paid _before_ calculating any input amounts sent. i.e. the debt is deducted from the input amount before this callback is called.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/concrete/RouteProcessorOrderBookV3ArbOrderTaker.sol\":\"RouteProcessorOrderBookV3ArbOrderTaker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":axelar-gmp-sdk-solidity/=lib/sushixswap-v2/lib/axelar-gmp-sdk-solidity/\",\":bitwise/=lib/rain.interpreter/src/lib/bitwise/\",\":bytecode/=lib/rain.interpreter/src/lib/bytecode/\",\":caller/=lib/rain.interpreter/src/lib/caller/\",\":compile/=lib/rain.interpreter/src/lib/compile/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eval/=lib/rain.interpreter/src/lib/eval/\",\":extern/=lib/rain.interpreter/src/lib/extern/\",\":forge-gas-snapshot/=lib/sushixswap-v2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":integrity/=lib/rain.interpreter/src/lib/integrity/\",\":ns/=lib/rain.interpreter/src/lib/ns/\",\":op/=lib/rain.interpreter/src/lib/op/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":parse/=lib/rain.interpreter/src/lib/parse/\",\":prb-math/=lib/rain.interpreter/lib/prb-math/src/\",\":prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/\",\":rain.datacontract/=lib/rain.interpreter/lib/rain.datacontract/src/\",\":rain.erc1820/=lib/rain.erc1820/src/\",\":rain.extrospection/=lib/rain.factory/lib/rain.extrospection/\",\":rain.factory/=lib/rain.factory/\",\":rain.interpreter/=lib/rain.interpreter/\",\":rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/\",\":rain.lib.memkv/=lib/rain.lib.memkv/src/\",\":rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/\",\":rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/\",\":rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.metadata/=lib/rain.metadata/src/\",\":rain.solmem/=lib/rain.solmem/src/\",\":sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/\",\":state/=lib/rain.interpreter/src/lib/state/\",\":sushixswap-v2/=lib/sushixswap-v2/\",\":uniswap/=lib/rain.interpreter/src/lib/uniswap/\",\":v2-core/=lib/rain.interpreter/lib/v2-core/contracts/\",\":v2-periphery/=lib/rain.interpreter/lib/v2-periphery/contracts/\"]},\"sources\":{\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/rain.factory/src/interface/ICloneableV2.sol\":{\"keccak256\":\"0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234\",\"dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP\"]},\"lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV3.sol\":{\"keccak256\":\"0xe333361bf503def41107d2e38acb421f11766e636ffe0728fef933097c66857b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://43b69e65c41a2cb13304d8d8b7fe31ee8d1cb55708b6cf60b799552bb09b4c1b\",\"dweb:/ipfs/QmXy4CDRjBVMezbH72uTkYJNrt6yQLVnjNkheD5773MKrn\"]},\"lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol\":{\"keccak256\":\"0xd6f76317b41d50fb6b3fbfcffa5fa8b4a3bb547a17bf52244f67f5c364fcd6bc\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://e7a35981e397564e85c53fab7b46bf8118328cfdb729264f946f7826c205f813\",\"dweb:/ipfs/QmfXnGW5RTDgqoMkp3k4E3eWBBS7hXWzmhw56XcfvB766E\"]},\"lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol\":{\"keccak256\":\"0x8fe347844f029b84087daae66742fb10aa9e44f94ac90af696318188aa922c19\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5eea5d2116f643db3ede89fd2dc3a5d293e35aec1d62a9daf6531f88a9656fb3\",\"dweb:/ipfs/Qmdys5MsEjgpXokb5FhMg96SYB6Bmf3frtVRvX74WrbKTc\"]},\"lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV1.sol\":{\"keccak256\":\"0x5e903fdb445cc16e63bb86d53eeb49172e2472cd7344a762c6d85684aec8251d\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5dab81bd2f092f392afbb295525c3602246ab5620de7630e84dab37b955f7e4d\",\"dweb:/ipfs/QmaGiCBSf2KjwjpVtJwG4k6iGqPKYs8dq6gkUYo9EFWkTg\"]},\"lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV2.sol\":{\"keccak256\":\"0xc98ea86cd5d633d01b4136258bc0026b3d4bade652f831b482867e97df0e5365\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d412df06ddccb1be19f6e962872297395546c591ccd42ccad91559aa0e5ee214\",\"dweb:/ipfs/QmebpvwxNtv9XNoKi9y8Ldqhzy3GWY5kwoSNDQL2vJHrbg\"]},\"lib/rain.interpreter/src/interface/deprecated/IInterpreterCallerV1.sol\":{\"keccak256\":\"0xdfccb8ca0e4673ac476d1ccfcd1ffa69300f910c41352cc51c3408a58bf095b2\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9a44b64873ed13c9c7d964e1d3b66dc2e80bb457563def325551bf796db8791c\",\"dweb:/ipfs/QmWTfH9qtwki5DFRAri1ouV7NVZ1mQzraz9eRumNEbcSNU\"]},\"lib/rain.interpreter/src/interface/deprecated/IInterpreterV1.sol\":{\"keccak256\":\"0xb58d3b75312da70f4fb7896dc07d8a3d77de0638d169db4acf6c246ddab0f518\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://970029663ca4321640ca0d577213e938046a3fe2995b580f9f7c8f0bfa34a3f3\",\"dweb:/ipfs/QmeZgH1RKqLgDh56FWQATBy8BCt6CyGiCuamrKY22QyCRz\"]},\"lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV3.sol\":{\"keccak256\":\"0x408f6c6fa3766cf7d24ffe1c98eb57b77af5bfbe946f266fd7a3b800de4ddb79\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://186b12c32030d2b7e4e81f1a11ac7c7a63b0f14b7dc1b6df50cbd2be7459bb69\",\"dweb:/ipfs/QmXRV3DGCoQtVxufMtiuXLvN3GF6YNTLyPLVVeoLL53sMg\"]},\"lib/rain.interpreter/src/interface/unstable/IInterpreterV2.sol\":{\"keccak256\":\"0xcf050192ba12f7eb129e0262cee4920cbd65bb331e7487cfc21151882464be50\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://10ff84f0acf532c5e11e69b7ab41c739ce4ad0f9193d347b5cc4a34f158774a8\",\"dweb:/ipfs/QmRvfB8jCdCwDdLrLHQh8yLLLv2eowpwjfwXgy2u629xew\"]},\"lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol\":{\"keccak256\":\"0xac53e84486e843acbabd6ba258550ba947c35c33a570e4615e57ff15a77d57e0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://e07c2907da9323f1d6d5b6557e87a904fdf1be3768ad64bb59655d060128bee4\",\"dweb:/ipfs/QmbukDZevfHYZ27yPqfmG1UFw8TsGbCRyH6Uc536QrtgHK\"]},\"lib/rain.interpreter/src/lib/caller/LibContext.sol\":{\"keccak256\":\"0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05\",\"dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF\"]},\"lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol\":{\"keccak256\":\"0x3949de1f4537cd262d54a06a64028343793c6110611c7b4967de3153de4b3b55\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9bdd88ec9a7dc671c33bf73e9fe1801bcf7d4a2eb4e6308186f8a7adc4b712dc\",\"dweb:/ipfs/Qme27jUCKETZ9ASPqVbyiQPGTj7ifgZdmRZcsJqgm5hkEW\"]},\"lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol\":{\"keccak256\":\"0x4f011d07a8fa4b24efccb02022bff68730d53c852424817a4ca3cfc134bbc455\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd0ffd2bdc5e2af1f2f67938d70e2ae694a0285a4fae4818530aa86edce400b1\",\"dweb:/ipfs/QmQAcoLvHatMANZpm5aP1vCaVm3xp1tF5MnZjQiX7AfiRe\"]},\"lib/rain.interpreter/src/lib/caller/LibEvaluable.sol\":{\"keccak256\":\"0xc3e649c4d698822ae81c4ec0814d2dd506e601795914a7af0883c5c40678ab21\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://901d9258689585e338aeb648d77ca083766c423dabc78db46285b3fb69fb12d1\",\"dweb:/ipfs/QmPVw7yuoDuqWorxpM7oWPhjSGRXhcEeu1dXQrjBDvpfrn\"]},\"lib/rain.interpreter/src/lib/ns/LibNamespace.sol\":{\"keccak256\":\"0x29574214b0e499343ea999d676764a18618485dece1cedc732ab73e779302153\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4de0c0b4d297bbe286bf2e6ec8ba38ef3ea93811826d910c00381df86e54661f\",\"dweb:/ipfs/QmdJv5EgqtuRo2iTdChUE5hjhJgtBhBzztYqPUXevU6J5y\"]},\"lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol\":{\"keccak256\":\"0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24\",\"dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35\"]},\"lib/rain.metadata/src/IMetaV1.sol\":{\"keccak256\":\"0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3\",\"dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs\"]},\"lib/rain.metadata/src/LibMeta.sol\":{\"keccak256\":\"0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d\",\"dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU\"]},\"lib/rain.solmem/src/lib/LibBytes.sol\":{\"keccak256\":\"0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353\",\"dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk\"]},\"lib/rain.solmem/src/lib/LibMemCpy.sol\":{\"keccak256\":\"0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102\",\"dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe\"]},\"lib/rain.solmem/src/lib/LibPointer.sol\":{\"keccak256\":\"0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7\",\"dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG\"]},\"lib/rain.solmem/src/lib/LibUint256Array.sol\":{\"keccak256\":\"0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6\",\"dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL\"]},\"lib/sushixswap-v2/src/interfaces/IRouteProcessor.sol\":{\"keccak256\":\"0x5b2289c992f34dd25943db3cbc27ece8b0a1addeb2631f812e7834b7ae3eac37\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f21522058b7fe3c18d2353b06a5ddbf2b62d2aceebf7dd6dfdc51b081452bb3f\",\"dweb:/ipfs/QmVkicGnNWgnX1RfXJWPpQaAPbiAQfFwGWigbPi1wu2WiT\"]},\"src/abstract/OrderBookV3ArbCommon.sol\":{\"keccak256\":\"0xd639006096b170c49ffa6299d47879c244447862478823ca35e2aeb819785860\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://c39adbe01adbb7cc84d6375b70d090c45fc30b6ae9cbc2ecdb1289a33a524acf\",\"dweb:/ipfs/QmZsKJXbSFtdEbnTD4d8c4KJJjurwBectuCKcdiaBsakyW\"]},\"src/abstract/OrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0x44c98f7b979b896b26558e849713a35828f123f78eb420edcc6f4b60e1a584d4\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://73c5dc32c0eb67d5b2423e7f2dbcd59a84667c0f91e2a291e990f5e66e0812e0\",\"dweb:/ipfs/QmcYPxHjoEujNg3NQ4iU5kWWBY5YM262Ja3J4bBxQBRKbX\"]},\"src/concrete/RouteProcessorOrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0xabfeff80ccfbfc0f1926af43161415df8c182de06424287f98c8b1726a64f8ee\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://b49b7348f8dd05bd8495e9b166a6f59d6061eaa138994fd65ed4fdbb765a4277\",\"dweb:/ipfs/QmZEpHasyZuLrNmowDCHpmrxKipXBA1hCfZyBHRxBf1ZXo\"]},\"src/interface/deprecated/IOrderBookV2.sol\":{\"keccak256\":\"0xc4f99b2e74b48063eb0383184446e5ad65aa158e12519949e28bed62b49d88fb\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://1a2cdc0410026ffc686d4100505564a9dff28b2364cadfeb75b3eea4dde841dc\",\"dweb:/ipfs/QmXC1QtN2Go2RLH8bK9GrtsxfMLY5eKaksW53utMTaNuR8\"]},\"src/interface/ierc3156/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c\",\"dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB\"]},\"src/interface/ierc3156/IERC3156FlashLender.sol\":{\"keccak256\":\"0x1c14bc32c7483a68f5cb3ff65f64a8a32b279472525340033ce8e0b462fd1e72\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://e25cbc0c4512d737fd9fb32f30af0f9bcccd10f28870c927057f6bcaac213dd4\",\"dweb:/ipfs/Qmey7YDkCTMXgoRDVHUbHRH6f4MJz6mBdfucp7v7bVy1ie\"]},\"src/interface/unstable/IOrderBookV3.sol\":{\"keccak256\":\"0x1aba9fbf5e9c2f410a2c24d56361718ac4ec6d62431ee07107bb83660740b6a1\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://12e803376fce4b36bcb7c228faa2aa5360b85688539485212f129b3467e23852\",\"dweb:/ipfs/QmV7oBCy2idxp8pY9yhGGcqbdpfVcqgpRvpJ1wYDNg7rZT\"]},\"src/interface/unstable/IOrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0xcf557395c82abca1d66abf241a8435aeee7ee8d451a08e9a95cbd3d156c19091\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://c08f1c3f6bc2adae54badc1ace1f5d76bf3ebc7f7564cd971ed31f304f569452\",\"dweb:/ipfs/Qmc7CRZ17fzVTorhUbRTxwSGtRrHwFDpBvBuypt46WH8eb\"]},\"src/interface/unstable/IOrderBookV3OrderTaker.sol\":{\"keccak256\":\"0x256cda8259c6c344e80ea5db35c7899e2c6f337ca040653ebdf7527e2e1d776e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5b26e4385457c5c18b0c4cb394d00662364912f082510df6015e0127059c05b9\",\"dweb:/ipfs/QmaQmiW8dDDAcfzRJZVavcZo9QLeFrN44obvRydJouJbL1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct DeployerDiscoverableMetaV3ConstructionConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "meta",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "badLender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BadLender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializeSignatureFn"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializing"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minimum",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MinimumOutput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoOrders"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "inputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NonZeroBeforeArbInputs"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonZeroBeforeArbStack"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "unmeta",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "NotRainMetaV1"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetaHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV3",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV3",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "subject",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaV1",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct TakeOrdersConfigV2",
              "name": "takeOrders",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "minimumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumIORatio",
                  "type": "uint256"
                },
                {
                  "internalType": "struct TakeOrderConfigV2[]",
                  "name": "orders",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct OrderV2",
                      "name": "order",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "owner",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "handleIO",
                          "type": "bool"
                        },
                        {
                          "internalType": "struct EvaluableV2",
                          "name": "evaluable",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "contract IInterpreterV2",
                              "name": "interpreter",
                              "type": "address"
                            },
                            {
                              "internalType": "contract IInterpreterStoreV1",
                              "name": "store",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "expression",
                              "type": "address"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validInputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validOutputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SignedContextV1[]",
                      "name": "signedContext",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "signer",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "context",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "bytes",
                          "name": "signature",
                          "type": "bytes"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "minimumSenderOutput",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "arb"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV3",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV3",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "inputToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "outputToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "inputAmountSent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalOutputAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "takeOrdersData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onTakeOrders"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9r",
          "outputs": [
            {
              "internalType": "contract IInterpreterV2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rDispatch",
          "outputs": [
            {
              "internalType": "EncodedDispatch",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rStore",
          "outputs": [
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sOrderBook",
          "outputs": [
            {
              "internalType": "contract IOrderBookV3",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sRouteProcessor",
          "outputs": [
            {
              "internalType": "contract IRouteProcessor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "initialize(bytes)": {
            "details": "The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.",
            "params": {
              "data": "The initialization data."
            },
            "returns": {
              "_0": "keccak256(\"ICloneableV2.initialize\") if successful."
            }
          },
          "onTakeOrders(address,address,uint256,uint256,bytes)": {
            "params": {
              "inputAmountSent": "The amount of `inputToken` that was sent to `IOrderBookV3OrderTaker`.",
              "inputToken": "The token that was sent to `IOrderBookV3OrderTaker`.",
              "outputToken": "The token that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.",
              "takeOrdersData": "The data passed to `takeOrders` by the caller.",
              "totalOutputAmount": "The total amount of `outputToken` that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "initialize(bytes)": {
            "notice": "Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \"ICloneableV2.initialize\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`."
          },
          "onTakeOrders(address,address,uint256,uint256,bytes)": {
            "notice": "Called by `OrderBookV3` when `takeOrders` is called with non-zero data, if it caused a non-zero input amount. I.e. if the order(s) taker received some tokens. Input and output directions are relative to the `IOrderBookV3OrderTaker` contract. If the order(s) taker had an active debt from a flash loan then that debt will be paid _before_ calculating any input amounts sent. i.e. the debt is deducted from the input amount before this callback is called."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "axelar-gmp-sdk-solidity/=lib/sushixswap-v2/lib/axelar-gmp-sdk-solidity/",
        "bitwise/=lib/rain.interpreter/src/lib/bitwise/",
        "bytecode/=lib/rain.interpreter/src/lib/bytecode/",
        "caller/=lib/rain.interpreter/src/lib/caller/",
        "compile/=lib/rain.interpreter/src/lib/compile/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "eval/=lib/rain.interpreter/src/lib/eval/",
        "extern/=lib/rain.interpreter/src/lib/extern/",
        "forge-gas-snapshot/=lib/sushixswap-v2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "integrity/=lib/rain.interpreter/src/lib/integrity/",
        "ns/=lib/rain.interpreter/src/lib/ns/",
        "op/=lib/rain.interpreter/src/lib/op/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "parse/=lib/rain.interpreter/src/lib/parse/",
        "prb-math/=lib/rain.interpreter/lib/prb-math/src/",
        "prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/",
        "rain.datacontract/=lib/rain.interpreter/lib/rain.datacontract/src/",
        "rain.erc1820/=lib/rain.erc1820/src/",
        "rain.extrospection/=lib/rain.factory/lib/rain.extrospection/",
        "rain.factory/=lib/rain.factory/",
        "rain.interpreter/=lib/rain.interpreter/",
        "rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/",
        "rain.lib.memkv/=lib/rain.lib.memkv/src/",
        "rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/",
        "rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/",
        "rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/",
        "rain.metadata/=lib/rain.metadata/src/",
        "rain.solmem/=lib/rain.solmem/src/",
        "sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/",
        "state/=lib/rain.interpreter/src/lib/state/",
        "sushixswap-v2/=lib/sushixswap-v2/",
        "uniswap/=lib/rain.interpreter/src/lib/uniswap/",
        "v2-core/=lib/rain.interpreter/lib/v2-core/contracts/",
        "v2-periphery/=lib/rain.interpreter/lib/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/concrete/RouteProcessorOrderBookV3ArbOrderTaker.sol": "RouteProcessorOrderBookV3ArbOrderTaker"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80",
        "urls": [
          "bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d",
          "dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/src/interface/ICloneableV2.sol": {
        "keccak256": "0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80",
        "urls": [
          "bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234",
          "dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV3.sol": {
        "keccak256": "0xe333361bf503def41107d2e38acb421f11766e636ffe0728fef933097c66857b",
        "urls": [
          "bzz-raw://43b69e65c41a2cb13304d8d8b7fe31ee8d1cb55708b6cf60b799552bb09b4c1b",
          "dweb:/ipfs/QmXy4CDRjBVMezbH72uTkYJNrt6yQLVnjNkheD5773MKrn"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol": {
        "keccak256": "0xd6f76317b41d50fb6b3fbfcffa5fa8b4a3bb547a17bf52244f67f5c364fcd6bc",
        "urls": [
          "bzz-raw://e7a35981e397564e85c53fab7b46bf8118328cfdb729264f946f7826c205f813",
          "dweb:/ipfs/QmfXnGW5RTDgqoMkp3k4E3eWBBS7hXWzmhw56XcfvB766E"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol": {
        "keccak256": "0x8fe347844f029b84087daae66742fb10aa9e44f94ac90af696318188aa922c19",
        "urls": [
          "bzz-raw://5eea5d2116f643db3ede89fd2dc3a5d293e35aec1d62a9daf6531f88a9656fb3",
          "dweb:/ipfs/Qmdys5MsEjgpXokb5FhMg96SYB6Bmf3frtVRvX74WrbKTc"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV1.sol": {
        "keccak256": "0x5e903fdb445cc16e63bb86d53eeb49172e2472cd7344a762c6d85684aec8251d",
        "urls": [
          "bzz-raw://5dab81bd2f092f392afbb295525c3602246ab5620de7630e84dab37b955f7e4d",
          "dweb:/ipfs/QmaGiCBSf2KjwjpVtJwG4k6iGqPKYs8dq6gkUYo9EFWkTg"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV2.sol": {
        "keccak256": "0xc98ea86cd5d633d01b4136258bc0026b3d4bade652f831b482867e97df0e5365",
        "urls": [
          "bzz-raw://d412df06ddccb1be19f6e962872297395546c591ccd42ccad91559aa0e5ee214",
          "dweb:/ipfs/QmebpvwxNtv9XNoKi9y8Ldqhzy3GWY5kwoSNDQL2vJHrbg"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IInterpreterCallerV1.sol": {
        "keccak256": "0xdfccb8ca0e4673ac476d1ccfcd1ffa69300f910c41352cc51c3408a58bf095b2",
        "urls": [
          "bzz-raw://9a44b64873ed13c9c7d964e1d3b66dc2e80bb457563def325551bf796db8791c",
          "dweb:/ipfs/QmWTfH9qtwki5DFRAri1ouV7NVZ1mQzraz9eRumNEbcSNU"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IInterpreterV1.sol": {
        "keccak256": "0xb58d3b75312da70f4fb7896dc07d8a3d77de0638d169db4acf6c246ddab0f518",
        "urls": [
          "bzz-raw://970029663ca4321640ca0d577213e938046a3fe2995b580f9f7c8f0bfa34a3f3",
          "dweb:/ipfs/QmeZgH1RKqLgDh56FWQATBy8BCt6CyGiCuamrKY22QyCRz"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV3.sol": {
        "keccak256": "0x408f6c6fa3766cf7d24ffe1c98eb57b77af5bfbe946f266fd7a3b800de4ddb79",
        "urls": [
          "bzz-raw://186b12c32030d2b7e4e81f1a11ac7c7a63b0f14b7dc1b6df50cbd2be7459bb69",
          "dweb:/ipfs/QmXRV3DGCoQtVxufMtiuXLvN3GF6YNTLyPLVVeoLL53sMg"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/unstable/IInterpreterV2.sol": {
        "keccak256": "0xcf050192ba12f7eb129e0262cee4920cbd65bb331e7487cfc21151882464be50",
        "urls": [
          "bzz-raw://10ff84f0acf532c5e11e69b7ab41c739ce4ad0f9193d347b5cc4a34f158774a8",
          "dweb:/ipfs/QmRvfB8jCdCwDdLrLHQh8yLLLv2eowpwjfwXgy2u629xew"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol": {
        "keccak256": "0xac53e84486e843acbabd6ba258550ba947c35c33a570e4615e57ff15a77d57e0",
        "urls": [
          "bzz-raw://e07c2907da9323f1d6d5b6557e87a904fdf1be3768ad64bb59655d060128bee4",
          "dweb:/ipfs/QmbukDZevfHYZ27yPqfmG1UFw8TsGbCRyH6Uc536QrtgHK"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibContext.sol": {
        "keccak256": "0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a",
        "urls": [
          "bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05",
          "dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol": {
        "keccak256": "0x3949de1f4537cd262d54a06a64028343793c6110611c7b4967de3153de4b3b55",
        "urls": [
          "bzz-raw://9bdd88ec9a7dc671c33bf73e9fe1801bcf7d4a2eb4e6308186f8a7adc4b712dc",
          "dweb:/ipfs/Qme27jUCKETZ9ASPqVbyiQPGTj7ifgZdmRZcsJqgm5hkEW"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol": {
        "keccak256": "0x4f011d07a8fa4b24efccb02022bff68730d53c852424817a4ca3cfc134bbc455",
        "urls": [
          "bzz-raw://fd0ffd2bdc5e2af1f2f67938d70e2ae694a0285a4fae4818530aa86edce400b1",
          "dweb:/ipfs/QmQAcoLvHatMANZpm5aP1vCaVm3xp1tF5MnZjQiX7AfiRe"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEvaluable.sol": {
        "keccak256": "0xc3e649c4d698822ae81c4ec0814d2dd506e601795914a7af0883c5c40678ab21",
        "urls": [
          "bzz-raw://901d9258689585e338aeb648d77ca083766c423dabc78db46285b3fb69fb12d1",
          "dweb:/ipfs/QmPVw7yuoDuqWorxpM7oWPhjSGRXhcEeu1dXQrjBDvpfrn"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/ns/LibNamespace.sol": {
        "keccak256": "0x29574214b0e499343ea999d676764a18618485dece1cedc732ab73e779302153",
        "urls": [
          "bzz-raw://4de0c0b4d297bbe286bf2e6ec8ba38ef3ea93811826d910c00381df86e54661f",
          "dweb:/ipfs/QmdJv5EgqtuRo2iTdChUE5hjhJgtBhBzztYqPUXevU6J5y"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol": {
        "keccak256": "0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8",
        "urls": [
          "bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24",
          "dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/IMetaV1.sol": {
        "keccak256": "0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843",
        "urls": [
          "bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3",
          "dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/LibMeta.sol": {
        "keccak256": "0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285",
        "urls": [
          "bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d",
          "dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibBytes.sol": {
        "keccak256": "0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625",
        "urls": [
          "bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353",
          "dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibMemCpy.sol": {
        "keccak256": "0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406",
        "urls": [
          "bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102",
          "dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibPointer.sol": {
        "keccak256": "0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7",
        "urls": [
          "bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7",
          "dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibUint256Array.sol": {
        "keccak256": "0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde",
        "urls": [
          "bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6",
          "dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL"
        ],
        "license": "CAL"
      },
      "lib/sushixswap-v2/src/interfaces/IRouteProcessor.sol": {
        "keccak256": "0x5b2289c992f34dd25943db3cbc27ece8b0a1addeb2631f812e7834b7ae3eac37",
        "urls": [
          "bzz-raw://f21522058b7fe3c18d2353b06a5ddbf2b62d2aceebf7dd6dfdc51b081452bb3f",
          "dweb:/ipfs/QmVkicGnNWgnX1RfXJWPpQaAPbiAQfFwGWigbPi1wu2WiT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstract/OrderBookV3ArbCommon.sol": {
        "keccak256": "0xd639006096b170c49ffa6299d47879c244447862478823ca35e2aeb819785860",
        "urls": [
          "bzz-raw://c39adbe01adbb7cc84d6375b70d090c45fc30b6ae9cbc2ecdb1289a33a524acf",
          "dweb:/ipfs/QmZsKJXbSFtdEbnTD4d8c4KJJjurwBectuCKcdiaBsakyW"
        ],
        "license": "CAL"
      },
      "src/abstract/OrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0x44c98f7b979b896b26558e849713a35828f123f78eb420edcc6f4b60e1a584d4",
        "urls": [
          "bzz-raw://73c5dc32c0eb67d5b2423e7f2dbcd59a84667c0f91e2a291e990f5e66e0812e0",
          "dweb:/ipfs/QmcYPxHjoEujNg3NQ4iU5kWWBY5YM262Ja3J4bBxQBRKbX"
        ],
        "license": "CAL"
      },
      "src/concrete/RouteProcessorOrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0xabfeff80ccfbfc0f1926af43161415df8c182de06424287f98c8b1726a64f8ee",
        "urls": [
          "bzz-raw://b49b7348f8dd05bd8495e9b166a6f59d6061eaa138994fd65ed4fdbb765a4277",
          "dweb:/ipfs/QmZEpHasyZuLrNmowDCHpmrxKipXBA1hCfZyBHRxBf1ZXo"
        ],
        "license": "CAL"
      },
      "src/interface/deprecated/IOrderBookV2.sol": {
        "keccak256": "0xc4f99b2e74b48063eb0383184446e5ad65aa158e12519949e28bed62b49d88fb",
        "urls": [
          "bzz-raw://1a2cdc0410026ffc686d4100505564a9dff28b2364cadfeb75b3eea4dde841dc",
          "dweb:/ipfs/QmXC1QtN2Go2RLH8bK9GrtsxfMLY5eKaksW53utMTaNuR8"
        ],
        "license": "CAL"
      },
      "src/interface/ierc3156/IERC3156FlashBorrower.sol": {
        "keccak256": "0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7",
        "urls": [
          "bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c",
          "dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB"
        ],
        "license": "CC0"
      },
      "src/interface/ierc3156/IERC3156FlashLender.sol": {
        "keccak256": "0x1c14bc32c7483a68f5cb3ff65f64a8a32b279472525340033ce8e0b462fd1e72",
        "urls": [
          "bzz-raw://e25cbc0c4512d737fd9fb32f30af0f9bcccd10f28870c927057f6bcaac213dd4",
          "dweb:/ipfs/Qmey7YDkCTMXgoRDVHUbHRH6f4MJz6mBdfucp7v7bVy1ie"
        ],
        "license": "CC0"
      },
      "src/interface/unstable/IOrderBookV3.sol": {
        "keccak256": "0x1aba9fbf5e9c2f410a2c24d56361718ac4ec6d62431ee07107bb83660740b6a1",
        "urls": [
          "bzz-raw://12e803376fce4b36bcb7c228faa2aa5360b85688539485212f129b3467e23852",
          "dweb:/ipfs/QmV7oBCy2idxp8pY9yhGGcqbdpfVcqgpRvpJ1wYDNg7rZT"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IOrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0xcf557395c82abca1d66abf241a8435aeee7ee8d451a08e9a95cbd3d156c19091",
        "urls": [
          "bzz-raw://c08f1c3f6bc2adae54badc1ace1f5d76bf3ebc7f7564cd971ed31f304f569452",
          "dweb:/ipfs/Qmc7CRZ17fzVTorhUbRTxwSGtRrHwFDpBvBuypt46WH8eb"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IOrderBookV3OrderTaker.sol": {
        "keccak256": "0x256cda8259c6c344e80ea5db35c7899e2c6f337ca040653ebdf7527e2e1d776e",
        "urls": [
          "bzz-raw://5b26e4385457c5c18b0c4cb394d00662364912f082510df6015e0127059c05b9",
          "dweb:/ipfs/QmaQmiW8dDDAcfzRJZVavcZo9QLeFrN44obvRydJouJbL1"
        ],
        "license": "CAL"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/concrete/RouteProcessorOrderBookV3ArbOrderTaker.sol",
    "id": 78341,
    "exportedSymbols": {
      "Address": [
        45259
      ],
      "BEFORE_ARB_MAX_OUTPUTS": [
        74241
      ],
      "BEFORE_ARB_MIN_OUTPUTS": [
        74237
      ],
      "BEFORE_ARB_SOURCE_INDEX": [
        74233
      ],
      "BadLender": [
        74156
      ],
      "CALLER_META_HASH": [
        78194
      ],
      "DEFAULT_STATE_NAMESPACE": [
        55887
      ],
      "DeployerDiscoverableMetaV3": [
        54788
      ],
      "DeployerDiscoverableMetaV3ConstructionConfig": [
        54743
      ],
      "ERC165": [
        46054
      ],
      "EncodedDispatch": [
        55875
      ],
      "EvaluableConfigV3": [
        55623
      ],
      "ICLONEABLE_V2_SUCCESS": [
        47145
      ],
      "ICloneableV2": [
        47158
      ],
      "IERC165": [
        46066
      ],
      "IERC20": [
        44376
      ],
      "IInterpreterStoreV1": [
        55698
      ],
      "IInterpreterV2": [
        56032
      ],
      "IOrderBookV3": [
        79289
      ],
      "IOrderBookV3ArbOrderTaker": [
        79306
      ],
      "IOrderBookV3OrderTaker": [
        79323
      ],
      "IRouteProcessor": [
        73861
      ],
      "Initializable": [
        43646
      ],
      "Initializing": [
        74148
      ],
      "LibBytecode": [
        56710
      ],
      "LibContext": [
        57009
      ],
      "LibEncodedDispatch": [
        57164
      ],
      "LibMeta": [
        73191
      ],
      "LibNamespace": [
        57900
      ],
      "MinimumOutput": [
        74145
      ],
      "NoOrders": [
        78997
      ],
      "NonZeroBeforeArbInputs": [
        74217
      ],
      "NonZeroBeforeArbStack": [
        74151
      ],
      "OrderBookV3ArbOrderTaker": [
        74744
      ],
      "OrderBookV3ArbOrderTakerConfigV1": [
        74225
      ],
      "ReentrancyGuard": [
        43711
      ],
      "RouteProcessorOrderBookV3ArbOrderTaker": [
        78340
      ],
      "SafeERC20": [
        44813
      ],
      "SignedContextV1": [
        55640
      ],
      "SourceIndexV2": [
        55998
      ],
      "TakeOrdersConfigV2": [
        79055
      ],
      "console2": [
        30145
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2027:173",
    "nodes": [
      {
        "id": 78180,
        "nodeType": "PragmaDirective",
        "src": "32:24:173",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 78181,
        "nodeType": "ImportDirective",
        "src": "58:58:173",
        "nodes": [],
        "absolutePath": "lib/sushixswap-v2/src/interfaces/IRouteProcessor.sol",
        "file": "sushixswap-v2/src/interfaces/IRouteProcessor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78341,
        "sourceUnit": 73862,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78182,
        "nodeType": "ImportDirective",
        "src": "118:50:173",
        "nodes": [],
        "absolutePath": "src/abstract/OrderBookV3ArbOrderTaker.sol",
        "file": "../abstract/OrderBookV3ArbOrderTaker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78341,
        "sourceUnit": 74745,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78184,
        "nodeType": "ImportDirective",
        "src": "169:83:173",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78341,
        "sourceUnit": 44377,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78183,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44376,
              "src": "177:6:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78186,
        "nodeType": "ImportDirective",
        "src": "253:95:173",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78341,
        "sourceUnit": 44814,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78185,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44813,
              "src": "261:9:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78188,
        "nodeType": "ImportDirective",
        "src": "349:79:173",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78341,
        "sourceUnit": 45260,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78187,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45259,
              "src": "357:7:173",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78194,
        "nodeType": "VariableDeclaration",
        "src": "430:111:173",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "CALLER_META_HASH",
        "nameLocation": "447:16:173",
        "scope": 78341,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 78189,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "430:7:173",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307836623063646438356632333332663438336434636632616438356339353338616637633437363332616264313139613734386433313362333638316638393332",
              "id": 78192,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "474:66:173",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_48420205860309022359971975958692338008984525280952361054338827474810146097458_by_1",
                "typeString": "int_const 4842...(69 digits omitted)...7458"
              },
              "value": "0x6b0cdd85f2332f483d4cf2ad85c9538af7c47632abd119a748d313b3681f8932"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_48420205860309022359971975958692338008984525280952361054338827474810146097458_by_1",
                "typeString": "int_const 4842...(69 digits omitted)...7458"
              }
            ],
            "id": 78191,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "466:7:173",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 78190,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "466:7:173",
              "typeDescriptions": {}
            }
          },
          "id": 78193,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "466:75:173",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 78340,
        "nodeType": "ContractDefinition",
        "src": "544:1514:173",
        "nodes": [
          {
            "id": 78200,
            "nodeType": "UsingForDirective",
            "src": "626:27:173",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 78197,
              "name": "SafeERC20",
              "nameLocations": [
                "632:9:173"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44813,
              "src": "632:9:173"
            },
            "typeName": {
              "id": 78199,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78198,
                "name": "IERC20",
                "nameLocations": [
                  "646:6:173"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44376,
                "src": "646:6:173"
              },
              "referencedDeclaration": 44376,
              "src": "646:6:173",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$44376",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 78203,
            "nodeType": "UsingForDirective",
            "src": "658:26:173",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 78201,
              "name": "Address",
              "nameLocations": [
                "664:7:173"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45259,
              "src": "664:7:173"
            },
            "typeName": {
              "id": 78202,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "676:7:173",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 78206,
            "nodeType": "VariableDeclaration",
            "src": "690:38:173",
            "nodes": [],
            "constant": false,
            "functionSelector": "141ae6e6",
            "mutability": "mutable",
            "name": "sRouteProcessor",
            "nameLocation": "713:15:173",
            "scope": 78340,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
              "typeString": "contract IRouteProcessor"
            },
            "typeName": {
              "id": 78205,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78204,
                "name": "IRouteProcessor",
                "nameLocations": [
                  "690:15:173"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73861,
                "src": "690:15:173"
              },
              "referencedDeclaration": 73861,
              "src": "690:15:173",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
                "typeString": "contract IRouteProcessor"
              }
            },
            "visibility": "public"
          },
          {
            "id": 78217,
            "nodeType": "FunctionDefinition",
            "src": "735:137:173",
            "nodes": [],
            "body": {
              "id": 78216,
              "nodeType": "Block",
              "src": "870:2:173",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 78212,
                    "name": "CALLER_META_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78194,
                    "src": "840:16:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 78213,
                    "name": "config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78209,
                    "src": "858:6:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV3ConstructionConfig_$54743_memory_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV3ConstructionConfig memory"
                    }
                  }
                ],
                "id": 78214,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 78211,
                  "name": "OrderBookV3ArbOrderTaker",
                  "nameLocations": [
                    "815:24:173"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 74744,
                  "src": "815:24:173"
                },
                "nodeType": "ModifierInvocation",
                "src": "815:50:173"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 78210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78209,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "799:6:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 78217,
                  "src": "747:58:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV3ConstructionConfig_$54743_memory_ptr",
                    "typeString": "struct DeployerDiscoverableMetaV3ConstructionConfig"
                  },
                  "typeName": {
                    "id": 78208,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78207,
                      "name": "DeployerDiscoverableMetaV3ConstructionConfig",
                      "nameLocations": [
                        "747:44:173"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54743,
                      "src": "747:44:173"
                    },
                    "referencedDeclaration": 54743,
                    "src": "747:44:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV3ConstructionConfig_$54743_storage_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV3ConstructionConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:60:173"
            },
            "returnParameters": {
              "id": 78215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "870:0:173"
            },
            "scope": 78340,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78241,
            "nodeType": "FunctionDefinition",
            "src": "923:202:173",
            "nodes": [],
            "body": {
              "id": 78240,
              "nodeType": "Block",
              "src": "995:130:173",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78225,
                      "mutability": "mutable",
                      "name": "routeProcessor",
                      "nameLocation": "1014:14:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 78240,
                      "src": "1006:22:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 78224,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1006:7:173",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78233,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78228,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78220,
                        "src": "1043:4:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 78230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1050:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 78229,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1050:7:173",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 78231,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1049:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 78226,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1032:3:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 78227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1036:6:173",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1032:10:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 78232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:27:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1005:54:173"
                },
                {
                  "expression": {
                    "id": 78238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78234,
                      "name": "sRouteProcessor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78206,
                      "src": "1069:15:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
                        "typeString": "contract IRouteProcessor"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 78236,
                          "name": "routeProcessor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78225,
                          "src": "1103:14:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 78235,
                        "name": "IRouteProcessor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73861,
                        "src": "1087:15:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRouteProcessor_$73861_$",
                          "typeString": "type(contract IRouteProcessor)"
                        }
                      },
                      "id": 78237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1087:31:173",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
                        "typeString": "contract IRouteProcessor"
                      }
                    },
                    "src": "1069:49:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
                      "typeString": "contract IRouteProcessor"
                    }
                  },
                  "id": 78239,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:49:173"
                }
              ]
            },
            "baseFunctions": [
              74327
            ],
            "documentation": {
              "id": 78218,
              "nodeType": "StructuredDocumentation",
              "src": "878:40:173",
              "text": "@inheritdoc OrderBookV3ArbOrderTaker"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeInitialize",
            "nameLocation": "932:17:173",
            "overrides": {
              "id": 78222,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "986:8:173"
            },
            "parameters": {
              "id": 78221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78220,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "963:4:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 78241,
                  "src": "950:17:173",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78219,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "950:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "949:19:173"
            },
            "returnParameters": {
              "id": 78223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:0:173"
            },
            "scope": 78340,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 78332,
            "nodeType": "FunctionDefinition",
            "src": "1176:803:173",
            "nodes": [],
            "body": {
              "id": 78331,
              "nodeType": "Block",
              "src": "1392:587:173",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78259,
                        "name": "inputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78244,
                        "src": "1421:10:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78260,
                        "name": "outputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78246,
                        "src": "1433:11:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78261,
                        "name": "inputAmountSent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78248,
                        "src": "1446:15:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 78262,
                        "name": "totalOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78250,
                        "src": "1463:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 78263,
                        "name": "takeOrdersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78252,
                        "src": "1482:14:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 78256,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1402:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RouteProcessorOrderBookV3ArbOrderTaker_$78340_$",
                          "typeString": "type(contract super RouteProcessorOrderBookV3ArbOrderTaker)"
                        }
                      },
                      "id": 78258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1408:12:173",
                      "memberName": "onTakeOrders",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74743,
                      "src": "1402:18:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes calldata)"
                      }
                    },
                    "id": 78264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1402:95:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78265,
                  "nodeType": "ExpressionStatement",
                  "src": "1402:95:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78272,
                            "name": "sRouteProcessor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78206,
                            "src": "1546:15:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
                              "typeString": "contract IRouteProcessor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
                              "typeString": "contract IRouteProcessor"
                            }
                          ],
                          "id": 78271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1538:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78270,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1538:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1538:24:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1564:1:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 78267,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78244,
                            "src": "1514:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 78266,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44376,
                          "src": "1507:6:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44376_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 78268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1507:18:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 78269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1526:11:173",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44541,
                      "src": "1507:30:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44376_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44376_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 78275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:59:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78276,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:59:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78283,
                            "name": "sRouteProcessor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78206,
                            "src": "1615:15:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
                              "typeString": "contract IRouteProcessor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
                              "typeString": "contract IRouteProcessor"
                            }
                          ],
                          "id": 78282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1607:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1607:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1607:24:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 78287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1638:7:173",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 78286,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1638:7:173",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 78285,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1633:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 78288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:13:173",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 78289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1647:3:173",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1633:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 78278,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78244,
                            "src": "1583:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 78277,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44376,
                          "src": "1576:6:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44376_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 78279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1576:18:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 78280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1595:11:173",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44541,
                      "src": "1576:30:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44376_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44376_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 78290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:75:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78291,
                  "nodeType": "ExpressionStatement",
                  "src": "1576:75:173"
                },
                {
                  "assignments": [
                    78293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78293,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "1674:5:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 78331,
                      "src": "1661:18:173",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 78292,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1661:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78301,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78296,
                        "name": "takeOrdersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78252,
                        "src": "1693:14:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 78298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1710:5:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 78297,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1710:5:173",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 78299,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1709:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 78294,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1682:3:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 78295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1686:6:173",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1682:10:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 78300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1682:35:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1661:56:173"
                },
                {
                  "assignments": [
                    78303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78303,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "1736:9:173",
                      "nodeType": "VariableDeclaration",
                      "scope": 78331,
                      "src": "1728:17:173",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78302,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1728:7:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78316,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 78306,
                        "name": "inputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78244,
                        "src": "1791:10:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78307,
                        "name": "inputAmountSent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78248,
                        "src": "1803:15:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 78308,
                        "name": "outputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78246,
                        "src": "1820:11:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78309,
                        "name": "totalOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78250,
                        "src": "1833:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 78312,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1860:4:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RouteProcessorOrderBookV3ArbOrderTaker_$78340",
                              "typeString": "contract RouteProcessorOrderBookV3ArbOrderTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RouteProcessorOrderBookV3ArbOrderTaker_$78340",
                              "typeString": "contract RouteProcessorOrderBookV3ArbOrderTaker"
                            }
                          ],
                          "id": 78311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1852:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78310,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1852:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1852:13:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78314,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78293,
                        "src": "1867:5:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 78304,
                        "name": "sRouteProcessor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78206,
                        "src": "1749:15:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
                          "typeString": "contract IRouteProcessor"
                        }
                      },
                      "id": 78305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1765:12:173",
                      "memberName": "processRoute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73860,
                      "src": "1749:28:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address,uint256,address,bytes memory) payable external returns (uint256)"
                      }
                    },
                    "id": 78315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1749:133:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1727:155:173"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78323,
                            "name": "sRouteProcessor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78206,
                            "src": "1931:15:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
                              "typeString": "contract IRouteProcessor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouteProcessor_$73861",
                              "typeString": "contract IRouteProcessor"
                            }
                          ],
                          "id": 78322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1923:7:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78321,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1923:7:173",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1923:24:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 78325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1949:1:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 78318,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78244,
                            "src": "1899:10:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 78317,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44376,
                          "src": "1892:6:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44376_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 78319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1892:18:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 78320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1911:11:173",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44541,
                      "src": "1892:30:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44376_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44376_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 78326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:59:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78327,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:59:173"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 78328,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78303,
                        "src": "1962:9:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 78329,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1961:11:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78330,
                  "nodeType": "ExpressionStatement",
                  "src": "1961:11:173"
                }
              ]
            },
            "baseFunctions": [
              74743
            ],
            "documentation": {
              "id": 78242,
              "nodeType": "StructuredDocumentation",
              "src": "1131:40:173",
              "text": "@inheritdoc OrderBookV3ArbOrderTaker"
            },
            "functionSelector": "059bebe6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onTakeOrders",
            "nameLocation": "1185:12:173",
            "overrides": {
              "id": 78254,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1383:8:173"
            },
            "parameters": {
              "id": 78253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78244,
                  "mutability": "mutable",
                  "name": "inputToken",
                  "nameLocation": "1215:10:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 78332,
                  "src": "1207:18:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1207:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78246,
                  "mutability": "mutable",
                  "name": "outputToken",
                  "nameLocation": "1243:11:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 78332,
                  "src": "1235:19:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1235:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78248,
                  "mutability": "mutable",
                  "name": "inputAmountSent",
                  "nameLocation": "1272:15:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 78332,
                  "src": "1264:23:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78250,
                  "mutability": "mutable",
                  "name": "totalOutputAmount",
                  "nameLocation": "1305:17:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 78332,
                  "src": "1297:25:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:7:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78252,
                  "mutability": "mutable",
                  "name": "takeOrdersData",
                  "nameLocation": "1347:14:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 78332,
                  "src": "1332:29:173",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 78251,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:5:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:170:173"
            },
            "returnParameters": {
              "id": 78255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1392:0:173"
            },
            "scope": 78340,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 78339,
            "nodeType": "FunctionDefinition",
            "src": "2014:42:173",
            "nodes": [],
            "body": {
              "id": 78338,
              "nodeType": "Block",
              "src": "2054:2:173",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 78333,
              "nodeType": "StructuredDocumentation",
              "src": "1985:24:173",
              "text": "Allow receiving gas."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "id": 78336,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78335,
                  "name": "onlyNotInitializing",
                  "nameLocations": [
                    "2034:19:173"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 74339,
                  "src": "2034:19:173"
                },
                "nodeType": "ModifierInvocation",
                "src": "2034:19:173"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 78334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2022:2:173"
            },
            "returnParameters": {
              "id": 78337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2054:0:173"
            },
            "scope": 78340,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 78195,
              "name": "OrderBookV3ArbOrderTaker",
              "nameLocations": [
                "595:24:173"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 74744,
              "src": "595:24:173"
            },
            "id": 78196,
            "nodeType": "InheritanceSpecifier",
            "src": "595:24:173"
          }
        ],
        "canonicalName": "RouteProcessorOrderBookV3ArbOrderTaker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          78340,
          74744,
          46054,
          46066,
          54788,
          73107,
          47158,
          43646,
          43711,
          79306,
          79323
        ],
        "name": "RouteProcessorOrderBookV3ArbOrderTaker",
        "nameLocation": "553:38:173",
        "scope": 78341,
        "usedErrors": [
          47149,
          56724,
          73087,
          73092,
          74145,
          74148,
          74151,
          74156,
          74217,
          78997
        ]
      }
    ],
    "license": "CAL"
  },
  "id": 173
}