{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes"
            }
          ],
          "internalType": "struct DeployerDiscoverableMetaV3ConstructionConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "badInitiator",
          "type": "address"
        }
      ],
      "name": "BadInitiator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "badLender",
          "type": "address"
        }
      ],
      "name": "BadLender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FlashLoanFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitializeSignatureFn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "MinimumOutput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOrders",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonZeroBeforeArbInputs",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonZeroBeforeArbStack",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "unmeta",
          "type": "bytes"
        }
      ],
      "name": "NotRainMetaV1",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedMetaHash",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV3",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV3",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderBookV3FlashBorrowerConfigV2",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Initialize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "subject",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "MetaV1",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "minimumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumIORatio",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "handleIO",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IInterpreterV2",
                          "name": "interpreter",
                          "type": "address"
                        },
                        {
                          "internalType": "contract IInterpreterStoreV1",
                          "name": "store",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "expression",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct EvaluableV2",
                      "name": "evaluable",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validInputs",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validOutputs",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct OrderV2",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "inputIOIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputIOIndex",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "signer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "context",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct SignedContextV1[]",
                  "name": "signedContext",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct TakeOrderConfigV2[]",
              "name": "orders",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TakeOrdersConfigV2",
          "name": "takeOrders",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "minimumSenderOutput",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "exchangeData",
          "type": "bytes"
        }
      ],
      "name": "arb",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV3",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV3",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderBookV3FlashBorrowerConfigV2",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9r",
      "outputs": [
        {
          "internalType": "contract IInterpreterV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rDispatch",
      "outputs": [
        {
          "internalType": "EncodedDispatch",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rStore",
      "outputs": [
        {
          "internalType": "contract IInterpreterStoreV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sOrderBook",
      "outputs": [
        {
          "internalType": "contract IOrderBookV3",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162003f6f38038062003f6f8339810160408190526200003491620003d2565b600160005560208101517f5307fcdf3fa283e1e7d5d58baaa516cdefb10aba9eb23211d9cfb11afd6e4b4c9082908290829062000073908390620000d7565b60208101516040517fbea766d03fa1efd3f81cc8634d08320bc62bb0ed9234ac59bbaafa5893fb6b1391620000ac9133913091620004a0565b60405180910390a18051620000c1906200011e565b50620000ce9050620001d1565b505050620005c6565b805160208201208281146200010e5760405163074fe10f60e41b815260048101849052602481018290526044015b60405180910390fd5b62000119826200028f565b505050565b60008080806001600160a01b03851663b7f14403826040519080825280602002602001820160405280156200015d578160200160208202803683370190505b506040518263ffffffff1660e01b81526004016200017c9190620004d2565b6000604051808303816000875af11580156200019c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001c6919081019062000529565b505050505050505050565b600154610100900460ff16156200023b5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840162000105565b60015460ff908116146200028d576001805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6200029a81620002bf565b620002bc5780604051630c89984b60e31b8152600401620001059190620005aa565b50565b6000600882511015620002d457506000919050565b50600801516001600160401b031667ff0a89c674ee78741490565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620002bc57600080fd5b60005b83811015620003385781810151838201526020016200031e565b50506000910152565b600082601f8301126200035357600080fd5b81516001600160401b0380821115620003705762000370620002ef565b604051601f8301601f19908116603f011681019082821181831017156200039b576200039b620002ef565b81604052838152866020858801011115620003b557600080fd5b620003c88460208301602089016200031b565b9695505050505050565b600060208284031215620003e557600080fd5b81516001600160401b0380821115620003fd57600080fd5b90830190604082860312156200041257600080fd5b604051604081018181108382111715620004305762000430620002ef565b6040528251620004408162000305565b81526020830151828111156200045557600080fd5b620004638782860162000341565b60208301525095945050505050565b600081518084526200048c8160208601602086016200031b565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000620004c9606083018462000472565b95945050505050565b60408152600060408201526000606082016020606081850152818551808452608086019150828701935060005b818110156200051d57845183529383019391830191600101620004ff565b50909695505050505050565b600080600080608085870312156200054057600080fd5b84516200054d8162000305565b6020860151909450620005608162000305565b6040860151909350620005738162000305565b60608601519092506001600160401b038111156200059057600080fd5b6200059e8782880162000341565b91505092959194509250565b602081526000620005bf602083018462000472565b9392505050565b61399980620005d66000396000f3fe6080604052600436106100965760003560e01c806371c1dea71161006957806389448c3a1161004e57806389448c3a1461021c57806398da8d6a14610232578063ae61ec121461025257610096565b806371c1dea7146101bc578063886d1650146101e957610096565b806301ffc9a7146100e757806323e30c8b1461011c578063439fab911461014a57806361bb39e41461016a575b3480156100a257600080fd5b50600154610100900460ff16156100e5576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b3480156100f357600080fd5b50610107610102366004612051565b610265565b60405190151581526020015b60405180910390f35b34801561012857600080fd5b5061013c6101373660046120fe565b61034a565b604051908152602001610113565b34801561015657600080fd5b5061013c610165366004612303565b610545565b34801561017657600080fd5b506004546101979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610113565b3480156101c857600080fd5b506003546101979073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101f557600080fd5b506001546101979062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561022857600080fd5b5061013c60025481565b34801561023e57600080fd5b5061013c61024d366004612338565b61094c565b6100e5610260366004612373565b610980565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f23e30c8b0000000000000000000000000000000000000000000000000000000014806102f857507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061034457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600154600090610100900460ff161561038f576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff1633146103ed576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff87163014610454576040517f8b1f7c6400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff881660048201526024016103e4565b600080610463848601866126a7565b915091506104718282611167565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c906104d1908790600401612ae2565b60408051808303816000875af11580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105139190612c97565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99c9b505050505050505050505050565b600154600090610100900460ff161580801561056557506001805460ff16105b8061057e5750303b15801561057e57506001805460ff16145b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103e4565b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561066757600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61066f6112a3565b6000838060200190518101906106859190612d5b565b905080516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906107069033908490612e64565b60405180910390a16000610721826020015160200151611319565b11156108b65760208082015180519181015160409182015191517fb7f1440300000000000000000000000000000000000000000000000000000000815260009360609373ffffffffffffffffffffffffffffffffffffffff9091169263b7f14403926107909290600401612f39565b6000604051808303816000875af11580156107af573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107f59190810190612f67565b6004805473ffffffffffffffffffffffffffffffffffffffff9485167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556003805495909416941693909317909155600182015190935090915060ff168015610890576040517f123ffb2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602083901b77ffffffffffffffffffffffffffffffffffffffff00000000166002555050505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506108e46001600055565b801561094657600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109886112a3565b600154610100900460ff16156109ca576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109d76060850185612fdf565b9050600003610a12576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848383604051602001610a299392919061334a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290506000610a686060870187612fdf565b6000818110610a7957610a796135c8565b9050602002810190610a8b91906135f7565b610a959080613635565b610aa39060c0810190613669565b610ab06060890189612fdf565b6000818110610ac157610ac16135c8565b9050602002810190610ad391906135f7565b60400135818110610ae657610ae66135c8565b610afc92602060609092020190810191506136d0565b90506000610b0d6060880188612fdf565b6000818110610b1e57610b1e6135c8565b9050602002810190610b3091906135f7565b610b3a9080613635565b610b489060a0810190613669565b610b5560608a018a612fdf565b6000818110610b6657610b666135c8565b9050602002810190610b7891906135f7565b60200135818110610b8b57610b8b6135c8565b610ba192602060609092020190810191506136d0565b6002549091508735908015610e0b57600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636046c5f99116610bef843060009182526020526040902090565b604080516000808252602082019092528891610c8a9190610c20565b6060815260200190600190039081610c0b5790505b506040805160008082526020820190925290610c84565b610c716040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610c375790505b50611337565b604080516000815260208101918290527fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16909152610cd59493929190602481016136ed565b600060405180830381865afa158015610cf2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d3891908101906137ac565b8151919350915015610d76576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610e0857600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610dd591600091869101613810565b600060405180830381600087803b158015610def57600080fd5b505af1158015610e03573d6000803e3d6000fd5b505050505b50505b600154610e399073ffffffffffffffffffffffffffffffffffffffff85811691620100009004166000611647565b600154610e869073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611647565b6001546040517f5cffe9de0000000000000000000000000000000000000000000000000000000081526201000090910473ffffffffffffffffffffffffffffffffffffffff1690635cffe9de90610ee7903090889087908b90600401613829565b6020604051808303816000875af1158015610f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2a9190613868565b610f60576040517f92111eb200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600154610f8e9073ffffffffffffffffffffffffffffffffffffffff85811691620100009004166000611647565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610ffb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101f9190613885565b905088811015611065576040517f0c08b5bc000000000000000000000000000000000000000000000000000000008152600481018a9052602481018290526044016103e4565b801561108c5761108c73ffffffffffffffffffffffffffffffffffffffff8516338361184c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa1580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111d9190613885565b905080156111465761114673ffffffffffffffffffffffffffffffffffffffff8716338361184c565b61115033476118a2565b505050505050506111616001600055565b50505050565b600080600083806020019051810190611180919061389e565b9250925092506000856060015160008151811061119f5761119f6135c8565b6020026020010151600001516080015186606001516000815181106111c6576111c66135c8565b602002602001015160400151815181106111e2576111e26135c8565b602090810291909101015151905061121273ffffffffffffffffffffffffffffffffffffffff8216856000611647565b61125373ffffffffffffffffffffffffffffffffffffffff8216857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611647565b600061127673ffffffffffffffffffffffffffffffffffffffff851684476119fc565b905061129a73ffffffffffffffffffffffffffffffffffffffff8316866000611647565b50505050505050565b60026000540361130f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103e4565b6002600055565b50565b6000815160000361132c57506000919050565b506020015160001a90565b60606000825167ffffffffffffffff8111156113555761135561217a565b60405190808252806020026020018201604052801561137e578160200160208202803683370190505b509050600080845111611392576000611398565b83516001015b855160010101905060008167ffffffffffffffff8111156113bb576113bb61217a565b6040519080825280602002602001820160405280156113ee57816020015b60608152602001906001900390816113d95790505b5090506000611413604080516002815233602082015230818301526060810190915290565b828281518110611425576114256135c8565b602002602001018190525060005b8751811015611483578180600101925050878181518110611456576114566135c8565b6020026020010151838381518110611470576114706135c8565b6020908102919091010152600101611433565b5085511561163d578080600101915050838282815181106114a6576114a66135c8565b602002602001018190525060005b865181101561163b576115658782815181106114d2576114d26135c8565b60200260200101516000015161154261150f8a85815181106114f6576114f66135c8565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b898481518110611554576115546135c8565b602002602001015160400151611a2a565b61159e576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016103e4565b8681815181106115b0576115b06135c8565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168582815181106115e4576115e46135c8565b602002602001018181525050818060010192505086818151811061160a5761160a6135c8565b602002602001015160200151838381518110611628576116286135c8565b60209081029190910101526001016114b4565b505b5095945050505050565b8015806116e757506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156116c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e59190613885565b155b611773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016103e4565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526118479084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611aa5565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526118479084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016117c5565b8047101561190c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103e4565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611966576040519150601f19603f3d011682016040523d82523d6000602084013e61196b565b606091505b5050905080611847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103e4565b6060611a2284848460405180606001604052806029815260200161397060299139611bb4565b949350505050565b6000806000611a398585611ccd565b90925090506000816004811115611a5257611a52613902565b148015611a8a57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a9b5750611a9b868686611d12565b9695505050505050565b6000611b07826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611e6f9092919063ffffffff16565b9050805160001480611b28575080806020019051810190611b289190613868565b611847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103e4565b606082471015611c46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103e4565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611c6f9190613931565b60006040518083038185875af1925050503d8060008114611cac576040519150601f19603f3d011682016040523d82523d6000602084013e611cb1565b606091505b5091509150611cc287838387611e7e565b979650505050505050565b6000808251604103611d035760208301516040840151606085015160001a611cf787828585611f1e565b94509450505050611d0b565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611d49929190613943565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611dd29190613931565b600060405180830381855afa9150503d8060008114611e0d576040519150601f19603f3d011682016040523d82523d6000602084013e611e12565b606091505b5091509150818015611e2657506020815110155b8015611a9b575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611e649083016020908101908401613885565b149695505050505050565b6060611a228484600085611bb4565b60608315611f14578251600003611f0d5773ffffffffffffffffffffffffffffffffffffffff85163b611f0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e4565b5081611a22565b611a22838361200d565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611f555750600090506003612004565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611fa9573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611ffd57600060019250925050612004565b9150600090505b94509492505050565b81511561201d5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e4919061395c565b60006020828403121561206357600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461209357600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461131657600080fd5b60008083601f8401126120ce57600080fd5b50813567ffffffffffffffff8111156120e657600080fd5b602083019150836020828501011115611d0b57600080fd5b60008060008060008060a0878903121561211757600080fd5b86356121228161209a565b955060208701356121328161209a565b94506040870135935060608701359250608087013567ffffffffffffffff81111561215c57600080fd5b61216889828a016120bc565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156121cc576121cc61217a565b60405290565b60405160a0810167ffffffffffffffff811182821017156121cc576121cc61217a565b6040516080810167ffffffffffffffff811182821017156121cc576121cc61217a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561225f5761225f61217a565b604052919050565b600067ffffffffffffffff8211156122815761228161217a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126122be57600080fd5b81356122d16122cc82612267565b612218565b8181528460208386010111156122e657600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561231557600080fd5b813567ffffffffffffffff81111561232c57600080fd5b611a22848285016122ad565b60006020828403121561234a57600080fd5b813567ffffffffffffffff81111561236157600080fd5b82016060818503121561209357600080fd5b6000806000806060858703121561238957600080fd5b843567ffffffffffffffff808211156123a157600080fd5b9086019060a082890312156123b557600080fd5b90945060208601359350604086013590808211156123d257600080fd5b506123df878288016120bc565b95989497509550505050565b600067ffffffffffffffff8211156124055761240561217a565b5060051b60200190565b801515811461131657600080fd5b80356124288161240f565b919050565b60006060828403121561243f57600080fd5b6124476121a9565b905081356124548161209a565b815260208201356124648161209a565b602082015260408201356124778161209a565b604082015292915050565b803560ff8116811461242857600080fd5b600082601f8301126124a457600080fd5b813560206124b46122cc836123eb565b828152606092830285018201928282019190878511156124d357600080fd5b8387015b8581101561252a5781818a0312156124ef5760008081fd5b6124f76121a9565b81356125028161209a565b815261250f828701612482565b818701526040828101359082015284529284019281016124d7565b5090979650505050505050565b600082601f83011261254857600080fd5b813560206125586122cc836123eb565b82815260059290921b8401810191818101908684111561257757600080fd5b8286015b8481101561269c57803567ffffffffffffffff8082111561259b57600080fd5b908801906060828b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156125d25760008081fd5b6125da6121a9565b868301356125e78161209a565b8152604083810135838111156125fd5760008081fd5b8401603f81018d1361260f5760008081fd5b8881013561261f6122cc826123eb565b81815260059190911b82018301908a8101908f83111561263f5760008081fd5b928401925b8284101561265d5783358252928b0192908b0190612644565b858c01525050506060840135838111156126775760008081fd5b6126858d8a838801016122ad565b91830191909152508552505091830191830161257b565b509695505050505050565b600080604083850312156126ba57600080fd5b67ffffffffffffffff80843511156126d157600080fd5b60a084358501860312156126e457600080fd5b6126ec6121d2565b843585018035825260208082013590830152604080820135908301526060013582101561271857600080fd5b84358501606081013501601f8101871361273157600080fd5b61273e6122cc82356123eb565b81358082526020808301929160051b84010189101561275c57600080fd5b602083015b6020843560051b8501018110156128dd57858135111561278057600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0608081833587018d030112156127b657600080fd5b6127be6121f5565b87602084358801013511156127d257600080fd5b8235860160208101350160e0818e03840112156127ee57600080fd5b6127f66121d2565b9250612805602082013561209a565b602081013583526128186040820161241d565b602084015261282a8d6060830161242d565b60408401528860c0820135111561284057600080fd5b6128538d602060c0840135840101612493565b60608401528860e0820135111561286957600080fd5b61287c8d602060e0840135840101612493565b608084015250818152604083358701013560208201526060833587010135604082015287608084358801013511156128b357600080fd5b6128c98c84358801608081013501602001612537565b606082015284525060209283019201612761565b506060840152505084358501608001358210156128f957600080fd5b61290c86863587016080810135016122ad565b60808201529250602084013581101561292457600080fd5b5061293584602085013585016122ad565b90509250929050565b600081518084526020808501945080840160005b8381101561299d578151805173ffffffffffffffffffffffffffffffffffffffff1688528381015160ff16848901526040908101519088015260609096019590820190600101612952565b509495945050505050565b600081518084526020808501945080840160005b8381101561299d578151875295820195908201906001016129bc565b60005b838110156129f35781810151838201526020016129db565b50506000910152565b60008151808452612a148160208601602086016129d8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015612ad55782840389528151606073ffffffffffffffffffffffffffffffffffffffff8251168652868201518188880152612aa4828801826129a8565b91505060408083015192508682038188015250612ac181836129fc565b9a87019a9550505090840190600101612a64565b5091979650505050505050565b6000602080835260c0830184518285015281850151604081818701528087015191506060828188015280880151925060a0608081818a015285855180885260e09750878b019150878160051b8c0101898801975060005b82811015612c4c578c82037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001845288518051868452805173ffffffffffffffffffffffffffffffffffffffff908116888601528d8201511515898601528a8201518051821660c0870152808f015182168e8701528b0151166101008501528881015161012085018d9052612bd261016086018261293e565b918801518583037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8001610140870152919050612c0e818361293e565b9150508c8201518d850152898201518a85015288820151915083810389850152612c388183612a46565b9a8d019a958d019593505050600101612b39565b50838d015199507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301858d0152612c86818b6129fc565b9d9c50505050505050505050505050565b60008060408385031215612caa57600080fd5b505080516020909101519092909150565b600082601f830112612ccc57600080fd5b8151612cda6122cc82612267565b818152846020838601011115612cef57600080fd5b611a228260208301602087016129d8565b600082601f830112612d1157600080fd5b81516020612d216122cc836123eb565b82815260059290921b84018101918181019086841115612d4057600080fd5b8286015b8481101561269c5780518352918301918301612d44565b600060208284031215612d6d57600080fd5b815167ffffffffffffffff80821115612d8557600080fd5b9083019060608286031215612d9957600080fd5b612da16121a9565b8251612dac8161209a565b8152602083015182811115612dc057600080fd5b830160608188031215612dd257600080fd5b612dda6121a9565b8151612de58161209a565b8152602082015184811115612df957600080fd5b612e0589828501612cbb565b602083015250604082015184811115612e1d57600080fd5b612e2989828501612d00565b6040830152508060208401525050604083015182811115612e4957600080fd5b612e5587828601612cbb565b60408301525095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c0850152612ec06101008501836129fc565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e0850152612efd82826129a8565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a9b82826129fc565b604081526000612f4c60408301856129fc565b8281036020840152612f5e81856129a8565b95945050505050565b60008060008060808587031215612f7d57600080fd5b8451612f888161209a565b6020860151909450612f998161209a565b6040860151909350612faa8161209a565b606086015190925067ffffffffffffffff811115612fc757600080fd5b612fd387828801612cbb565b91505092959194509250565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261301457600080fd5b83018035915067ffffffffffffffff82111561302f57600080fd5b6020019150600581901b3603821315611d0b57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261307c57600080fd5b830160208101925035905067ffffffffffffffff81111561309c57600080fd5b8060051b3603821315611d0b57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126130e357600080fd5b830160208101925035905067ffffffffffffffff81111561310357600080fd5b606081023603821315611d0b57600080fd5b8183526000602080850194508260005b8581101561299d5781356131388161209a565b73ffffffffffffffffffffffffffffffffffffffff16875260ff61315d838501612482565b16878401526040828101359088015260609687019690910190600101613125565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126131b357600080fd5b830160208101925035905067ffffffffffffffff8111156131d357600080fd5b803603821315611d0b57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b8881101561333c578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa189360301811261328557600080fd5b8801606081356132948161209a565b73ffffffffffffffffffffffffffffffffffffffff1685526132b882890183613047565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111156132f357600080fd5b881b80828885013786019050604061330d8482018561317e565b945083888403018289015261332584840186836131e2565b9e8b019e9750505093880193505050600101613246565b509098975050505050505050565b6000604080835260e083018635828501526020606081890135818701526080848a01358188015261337d828b018b613047565b60a0898101529485905261010094858901600582901b8a0187018360005b84811015613565577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008d840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818736030181126133fc57600080fd5b86018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2101811261343157600080fd5b888552810180356134418161209a565b73ffffffffffffffffffffffffffffffffffffffff908116868b0152818c01359061346b8261240f565b90151560a087015260c090828f01356134838161209a565b811687830152828c01356134968161209a565b811660e0880152828b01356134aa8161209a565b16868e01526134bc60a08301836130ae565b60e06101208901526134d361016089018284613115565b9150506134e2828401846130ae565b935091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808782030161014088015261351c818484613115565b925050508a8201358b8601528c8201358d86015261353c8a830183613047565b92508582038b87015261355082848361322b565b968c019695505050918901915060010161339b565b5050613573858f018f61317e565b995097507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b82030160c08c01526135ac818a8a6131e2565b9850505050505050848303818601525050611a9b8185876131e2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261362b57600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261362b57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261369e57600080fd5b83018035915067ffffffffffffffff8211156136b957600080fd5b6020019150606081023603821315611d0b57600080fd5b6000602082840312156136e257600080fd5b81356120938161209a565b600060a0820173ffffffffffffffffffffffffffffffffffffffff881683526020878185015286604085015260a0606085015281865180845260c08601915060c08160051b870101935082880160005b82811015613789577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff408887030184526137778683516129a8565b9550928401929084019060010161373d565b505050505082810360808401526137a081856129a8565b98975050505050505050565b600080604083850312156137bf57600080fd5b825167ffffffffffffffff808211156137d757600080fd5b6137e386838701612d00565b935060208501519150808211156137f957600080fd5b5061380685828601612d00565b9150509250929050565b828152604060208201526000611a2260408301846129a8565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611a9b60808301846129fc565b60006020828403121561387a57600080fd5b81516120938161240f565b60006020828403121561389757600080fd5b5051919050565b6000806000606084860312156138b357600080fd5b83516138be8161209a565b60208501519093506138cf8161209a565b604085015190925067ffffffffffffffff8111156138ec57600080fd5b6138f886828701612cbb565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000825161362b8184602087016129d8565b828152604060208201526000611a2260408301846129fc565b60208152600061209360208301846129fc56fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
    "sourceMap": "1204:1170:171:-:0;;;1347:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:22;448:75:171;1821:22:22;1109:11:71;;;;456:66:171;;1470:6;;456:66;;1470:6;;1075:46:71;;456:66:171;;1075:23:71;:46::i;:::-;1188:11;;;;1136:64;;;;;;1143:10;;1179:4;;1136:64;:::i;:::-;;;;;;;;1250:15;;1210:56;;:39;:56::i;:::-;-1:-1:-1;5710:22:168::1;::::0;-1:-1:-1;5710:20:168::1;:22::i;:::-;5414:325:::0;;1347:137:171;1204:1170;;1424:292:153;1538:16;;;;;;1568:28;;;1564:112;;1619:46;;-1:-1:-1;;;1619:46:153;;;;;3007:25:227;;;3048:18;;;3041:34;;;2980:18;;1619:46:153;;;;;;;;1564:112;1685:24;1703:5;1685:17;:24::i;:::-;1506:210;1424:292;;:::o;1111:293:88:-;1174:26;;;;-1:-1:-1;;;;;1280:49:88;;;1174:26;1334:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1334:16:88;;1280:71;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1280:71:88;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;1111:293:88:o;5917:280:21:-;5985:13;;;;;;;5984:14;5976:66;;;;-1:-1:-1;;;5976:66:21;;4910:2:227;5976:66:21;;;4892:21:227;4949:2;4929:18;;;4922:30;4988:34;4968:18;;;4961:62;-1:-1:-1;;;5039:18:227;;;5032:37;5086:19;;5976:66:21;4708:403:227;5976:66:21;6056:12;;6072:15;6056:12;;;:31;6052:139;;6103:12;:30;;-1:-1:-1;;6103:30:21;6118:15;6103:30;;;;;;6152:28;;5258:36:227;;;6152:28:21;;5246:2:227;5231:18;6152:28:21;;;;;;;6052:139;5917:280::o;1075:155:153:-;1151:19;1164:5;1151:12;:19::i;:::-;1146:78;;1207:5;1193:20;;-1:-1:-1;;;1193:20:153;;;;;;;;:::i;1146:78::-;1075:155;:::o;550:376::-;615:4;650:1;635:5;:12;:16;631:34;;;-1:-1:-1;660:5:153;;550:376;-1:-1:-1;550:376:153:o;631:34::-;-1:-1:-1;846:1:153;835:13;829:20;-1:-1:-1;;;;;825:32:153;667:18:152;883:36:153;;550:376::o;14:127:227:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:131;-1:-1:-1;;;;;221:31:227;;211:42;;201:70;;267:1;264;257:12;282:250;367:1;377:113;391:6;388:1;385:13;377:113;;;467:11;;;461:18;448:11;;;441:39;413:2;406:10;377:113;;;-1:-1:-1;;524:1:227;506:16;;499:27;282:250::o;537:698::-;590:5;643:3;636:4;628:6;624:17;620:27;610:55;;661:1;658;651:12;610:55;684:13;;-1:-1:-1;;;;;746:10:227;;;743:36;;;759:18;;:::i;:::-;834:2;828:9;802:2;888:13;;-1:-1:-1;;884:22:227;;;908:2;880:31;876:40;864:53;;;932:18;;;952:22;;;929:46;926:72;;;978:18;;:::i;:::-;1018:10;1014:2;1007:22;1053:2;1045:6;1038:18;1099:3;1092:4;1087:2;1079:6;1075:15;1071:26;1068:35;1065:55;;;1116:1;1113;1106:12;1065:55;1129:76;1202:2;1195:4;1187:6;1183:17;1176:4;1168:6;1164:17;1129:76;:::i;:::-;1223:6;537:698;-1:-1:-1;;;;;;537:698:227:o;1240:923::-;1373:6;1426:2;1414:9;1405:7;1401:23;1397:32;1394:52;;;1442:1;1439;1432:12;1394:52;1469:16;;-1:-1:-1;;;;;1534:14:227;;;1531:34;;;1561:1;1558;1551:12;1531:34;1584:22;;;;1640:4;1622:16;;;1618:27;1615:47;;;1658:1;1655;1648:12;1615:47;1691:4;1685:11;1735:4;1727:6;1723:17;1790:6;1778:10;1775:22;1770:2;1758:10;1755:18;1752:46;1749:72;;;1801:18;;:::i;:::-;1837:4;1830:24;1876:9;;1894:31;1876:9;1894:31;:::i;:::-;1934:21;;1994:2;1986:11;;1980:18;2010:16;;;2007:36;;;2039:1;2036;2029:12;2007:36;2076:55;2123:7;2112:8;2108:2;2104:17;2076:55;:::i;:::-;2071:2;2059:15;;2052:80;-1:-1:-1;2063:6:227;1240:923;-1:-1:-1;;;;;1240:923:227:o;2168:270::-;2209:3;2247:5;2241:12;2274:6;2269:3;2262:19;2290:76;2359:6;2352:4;2347:3;2343:14;2336:4;2329:5;2325:16;2290:76;:::i;:::-;2420:2;2399:15;-1:-1:-1;;2395:29:227;2386:39;;;;2427:4;2382:50;;2168:270;-1:-1:-1;;2168:270:227:o;2443:385::-;2675:1;2671;2666:3;2662:11;2658:19;2650:6;2646:32;2635:9;2628:51;2715:6;2710:2;2699:9;2695:18;2688:34;2758:2;2753;2742:9;2738:18;2731:30;2609:4;2778:44;2818:2;2807:9;2803:18;2795:6;2778:44;:::i;:::-;2770:52;2443:385;-1:-1:-1;;;;;2443:385:227:o;3086:827::-;3365:2;3354:9;3347:21;3404:1;3399:2;3388:9;3384:18;3377:29;3328:4;3449:2;3438:9;3434:18;3471:4;3511:2;3506;3495:9;3491:18;3484:30;3534:11;3574:6;3568:13;3610:6;3597:11;3590:27;3648:3;3637:9;3633:19;3626:26;;3687:2;3679:6;3675:15;3661:29;;3708:1;3718:169;3732:6;3729:1;3726:13;3718:169;;;3793:13;;3781:26;;3862:15;;;;3827:12;;;;3754:1;3747:9;3718:169;;;-1:-1:-1;3904:3:227;;3086:827;-1:-1:-1;;;;;;3086:827:227:o;3918:785::-;4077:6;4085;4093;4101;4154:3;4142:9;4133:7;4129:23;4125:33;4122:53;;;4171:1;4168;4161:12;4122:53;4203:9;4197:16;4222:31;4247:5;4222:31;:::i;:::-;4322:2;4307:18;;4301:25;4272:5;;-1:-1:-1;4335:33:227;4301:25;4335:33;:::i;:::-;4439:2;4424:18;;4418:25;4387:7;;-1:-1:-1;4452:33:227;4418:25;4452:33;:::i;:::-;4555:2;4540:18;;4534:25;4504:7;;-1:-1:-1;;;;;;4571:30:227;;4568:50;;;4614:1;4611;4604:12;4568:50;4637:60;4689:7;4680:6;4669:9;4665:22;4637:60;:::i;:::-;4627:70;;;3918:785;;;;;;;:::o;5305:217::-;5452:2;5441:9;5434:21;5415:4;5472:44;5512:2;5501:9;5497:18;5489:6;5472:44;:::i;:::-;5464:52;5305:217;-1:-1:-1;;;5305:217:227:o;:::-;1204:1170:171;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100965760003560e01c806371c1dea71161006957806389448c3a1161004e57806389448c3a1461021c57806398da8d6a14610232578063ae61ec121461025257610096565b806371c1dea7146101bc578063886d1650146101e957610096565b806301ffc9a7146100e757806323e30c8b1461011c578063439fab911461014a57806361bb39e41461016a575b3480156100a257600080fd5b50600154610100900460ff16156100e5576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b3480156100f357600080fd5b50610107610102366004612051565b610265565b60405190151581526020015b60405180910390f35b34801561012857600080fd5b5061013c6101373660046120fe565b61034a565b604051908152602001610113565b34801561015657600080fd5b5061013c610165366004612303565b610545565b34801561017657600080fd5b506004546101979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610113565b3480156101c857600080fd5b506003546101979073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101f557600080fd5b506001546101979062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561022857600080fd5b5061013c60025481565b34801561023e57600080fd5b5061013c61024d366004612338565b61094c565b6100e5610260366004612373565b610980565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f23e30c8b0000000000000000000000000000000000000000000000000000000014806102f857507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061034457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600154600090610100900460ff161561038f576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff1633146103ed576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff87163014610454576040517f8b1f7c6400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff881660048201526024016103e4565b600080610463848601866126a7565b915091506104718282611167565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c906104d1908790600401612ae2565b60408051808303816000875af11580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105139190612c97565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99c9b505050505050505050505050565b600154600090610100900460ff161580801561056557506001805460ff16105b8061057e5750303b15801561057e57506001805460ff16145b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103e4565b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561066757600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61066f6112a3565b6000838060200190518101906106859190612d5b565b905080516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906107069033908490612e64565b60405180910390a16000610721826020015160200151611319565b11156108b65760208082015180519181015160409182015191517fb7f1440300000000000000000000000000000000000000000000000000000000815260009360609373ffffffffffffffffffffffffffffffffffffffff9091169263b7f14403926107909290600401612f39565b6000604051808303816000875af11580156107af573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107f59190810190612f67565b6004805473ffffffffffffffffffffffffffffffffffffffff9485167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556003805495909416941693909317909155600182015190935090915060ff168015610890576040517f123ffb2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602083901b77ffffffffffffffffffffffffffffffffffffffff00000000166002555050505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506108e46001600055565b801561094657600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109886112a3565b600154610100900460ff16156109ca576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109d76060850185612fdf565b9050600003610a12576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000848383604051602001610a299392919061334a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290506000610a686060870187612fdf565b6000818110610a7957610a796135c8565b9050602002810190610a8b91906135f7565b610a959080613635565b610aa39060c0810190613669565b610ab06060890189612fdf565b6000818110610ac157610ac16135c8565b9050602002810190610ad391906135f7565b60400135818110610ae657610ae66135c8565b610afc92602060609092020190810191506136d0565b90506000610b0d6060880188612fdf565b6000818110610b1e57610b1e6135c8565b9050602002810190610b3091906135f7565b610b3a9080613635565b610b489060a0810190613669565b610b5560608a018a612fdf565b6000818110610b6657610b666135c8565b9050602002810190610b7891906135f7565b60200135818110610b8b57610b8b6135c8565b610ba192602060609092020190810191506136d0565b6002549091508735908015610e0b57600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636046c5f99116610bef843060009182526020526040902090565b604080516000808252602082019092528891610c8a9190610c20565b6060815260200190600190039081610c0b5790505b506040805160008082526020820190925290610c84565b610c716040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610c375790505b50611337565b604080516000815260208101918290527fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16909152610cd59493929190602481016136ed565b600060405180830381865afa158015610cf2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d3891908101906137ac565b8151919350915015610d76576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610e0857600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610dd591600091869101613810565b600060405180830381600087803b158015610def57600080fd5b505af1158015610e03573d6000803e3d6000fd5b505050505b50505b600154610e399073ffffffffffffffffffffffffffffffffffffffff85811691620100009004166000611647565b600154610e869073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611647565b6001546040517f5cffe9de0000000000000000000000000000000000000000000000000000000081526201000090910473ffffffffffffffffffffffffffffffffffffffff1690635cffe9de90610ee7903090889087908b90600401613829565b6020604051808303816000875af1158015610f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2a9190613868565b610f60576040517f92111eb200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600154610f8e9073ffffffffffffffffffffffffffffffffffffffff85811691620100009004166000611647565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8516906370a0823190602401602060405180830381865afa158015610ffb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101f9190613885565b905088811015611065576040517f0c08b5bc000000000000000000000000000000000000000000000000000000008152600481018a9052602481018290526044016103e4565b801561108c5761108c73ffffffffffffffffffffffffffffffffffffffff8516338361184c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa1580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111d9190613885565b905080156111465761114673ffffffffffffffffffffffffffffffffffffffff8716338361184c565b61115033476118a2565b505050505050506111616001600055565b50505050565b600080600083806020019051810190611180919061389e565b9250925092506000856060015160008151811061119f5761119f6135c8565b6020026020010151600001516080015186606001516000815181106111c6576111c66135c8565b602002602001015160400151815181106111e2576111e26135c8565b602090810291909101015151905061121273ffffffffffffffffffffffffffffffffffffffff8216856000611647565b61125373ffffffffffffffffffffffffffffffffffffffff8216857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611647565b600061127673ffffffffffffffffffffffffffffffffffffffff851684476119fc565b905061129a73ffffffffffffffffffffffffffffffffffffffff8316866000611647565b50505050505050565b60026000540361130f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103e4565b6002600055565b50565b6000815160000361132c57506000919050565b506020015160001a90565b60606000825167ffffffffffffffff8111156113555761135561217a565b60405190808252806020026020018201604052801561137e578160200160208202803683370190505b509050600080845111611392576000611398565b83516001015b855160010101905060008167ffffffffffffffff8111156113bb576113bb61217a565b6040519080825280602002602001820160405280156113ee57816020015b60608152602001906001900390816113d95790505b5090506000611413604080516002815233602082015230818301526060810190915290565b828281518110611425576114256135c8565b602002602001018190525060005b8751811015611483578180600101925050878181518110611456576114566135c8565b6020026020010151838381518110611470576114706135c8565b6020908102919091010152600101611433565b5085511561163d578080600101915050838282815181106114a6576114a66135c8565b602002602001018190525060005b865181101561163b576115658782815181106114d2576114d26135c8565b60200260200101516000015161154261150f8a85815181106114f6576114f66135c8565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b898481518110611554576115546135c8565b602002602001015160400151611a2a565b61159e576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016103e4565b8681815181106115b0576115b06135c8565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168582815181106115e4576115e46135c8565b602002602001018181525050818060010192505086818151811061160a5761160a6135c8565b602002602001015160200151838381518110611628576116286135c8565b60209081029190910101526001016114b4565b505b5095945050505050565b8015806116e757506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156116c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e59190613885565b155b611773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016103e4565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526118479084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611aa5565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526118479084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016117c5565b8047101561190c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103e4565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611966576040519150601f19603f3d011682016040523d82523d6000602084013e61196b565b606091505b5050905080611847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103e4565b6060611a2284848460405180606001604052806029815260200161397060299139611bb4565b949350505050565b6000806000611a398585611ccd565b90925090506000816004811115611a5257611a52613902565b148015611a8a57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a9b5750611a9b868686611d12565b9695505050505050565b6000611b07826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611e6f9092919063ffffffff16565b9050805160001480611b28575080806020019051810190611b289190613868565b611847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103e4565b606082471015611c46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103e4565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611c6f9190613931565b60006040518083038185875af1925050503d8060008114611cac576040519150601f19603f3d011682016040523d82523d6000602084013e611cb1565b606091505b5091509150611cc287838387611e7e565b979650505050505050565b6000808251604103611d035760208301516040840151606085015160001a611cf787828585611f1e565b94509450505050611d0b565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611d49929190613943565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611dd29190613931565b600060405180830381855afa9150503d8060008114611e0d576040519150601f19603f3d011682016040523d82523d6000602084013e611e12565b606091505b5091509150818015611e2657506020815110155b8015611a9b575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611e649083016020908101908401613885565b149695505050505050565b6060611a228484600085611bb4565b60608315611f14578251600003611f0d5773ffffffffffffffffffffffffffffffffffffffff85163b611f0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e4565b5081611a22565b611a22838361200d565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611f555750600090506003612004565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611fa9573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611ffd57600060019250925050612004565b9150600090505b94509492505050565b81511561201d5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e4919061395c565b60006020828403121561206357600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461209357600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461131657600080fd5b60008083601f8401126120ce57600080fd5b50813567ffffffffffffffff8111156120e657600080fd5b602083019150836020828501011115611d0b57600080fd5b60008060008060008060a0878903121561211757600080fd5b86356121228161209a565b955060208701356121328161209a565b94506040870135935060608701359250608087013567ffffffffffffffff81111561215c57600080fd5b61216889828a016120bc565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156121cc576121cc61217a565b60405290565b60405160a0810167ffffffffffffffff811182821017156121cc576121cc61217a565b6040516080810167ffffffffffffffff811182821017156121cc576121cc61217a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561225f5761225f61217a565b604052919050565b600067ffffffffffffffff8211156122815761228161217a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126122be57600080fd5b81356122d16122cc82612267565b612218565b8181528460208386010111156122e657600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561231557600080fd5b813567ffffffffffffffff81111561232c57600080fd5b611a22848285016122ad565b60006020828403121561234a57600080fd5b813567ffffffffffffffff81111561236157600080fd5b82016060818503121561209357600080fd5b6000806000806060858703121561238957600080fd5b843567ffffffffffffffff808211156123a157600080fd5b9086019060a082890312156123b557600080fd5b90945060208601359350604086013590808211156123d257600080fd5b506123df878288016120bc565b95989497509550505050565b600067ffffffffffffffff8211156124055761240561217a565b5060051b60200190565b801515811461131657600080fd5b80356124288161240f565b919050565b60006060828403121561243f57600080fd5b6124476121a9565b905081356124548161209a565b815260208201356124648161209a565b602082015260408201356124778161209a565b604082015292915050565b803560ff8116811461242857600080fd5b600082601f8301126124a457600080fd5b813560206124b46122cc836123eb565b828152606092830285018201928282019190878511156124d357600080fd5b8387015b8581101561252a5781818a0312156124ef5760008081fd5b6124f76121a9565b81356125028161209a565b815261250f828701612482565b818701526040828101359082015284529284019281016124d7565b5090979650505050505050565b600082601f83011261254857600080fd5b813560206125586122cc836123eb565b82815260059290921b8401810191818101908684111561257757600080fd5b8286015b8481101561269c57803567ffffffffffffffff8082111561259b57600080fd5b908801906060828b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00112156125d25760008081fd5b6125da6121a9565b868301356125e78161209a565b8152604083810135838111156125fd5760008081fd5b8401603f81018d1361260f5760008081fd5b8881013561261f6122cc826123eb565b81815260059190911b82018301908a8101908f83111561263f5760008081fd5b928401925b8284101561265d5783358252928b0192908b0190612644565b858c01525050506060840135838111156126775760008081fd5b6126858d8a838801016122ad565b91830191909152508552505091830191830161257b565b509695505050505050565b600080604083850312156126ba57600080fd5b67ffffffffffffffff80843511156126d157600080fd5b60a084358501860312156126e457600080fd5b6126ec6121d2565b843585018035825260208082013590830152604080820135908301526060013582101561271857600080fd5b84358501606081013501601f8101871361273157600080fd5b61273e6122cc82356123eb565b81358082526020808301929160051b84010189101561275c57600080fd5b602083015b6020843560051b8501018110156128dd57858135111561278057600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0608081833587018d030112156127b657600080fd5b6127be6121f5565b87602084358801013511156127d257600080fd5b8235860160208101350160e0818e03840112156127ee57600080fd5b6127f66121d2565b9250612805602082013561209a565b602081013583526128186040820161241d565b602084015261282a8d6060830161242d565b60408401528860c0820135111561284057600080fd5b6128538d602060c0840135840101612493565b60608401528860e0820135111561286957600080fd5b61287c8d602060e0840135840101612493565b608084015250818152604083358701013560208201526060833587010135604082015287608084358801013511156128b357600080fd5b6128c98c84358801608081013501602001612537565b606082015284525060209283019201612761565b506060840152505084358501608001358210156128f957600080fd5b61290c86863587016080810135016122ad565b60808201529250602084013581101561292457600080fd5b5061293584602085013585016122ad565b90509250929050565b600081518084526020808501945080840160005b8381101561299d578151805173ffffffffffffffffffffffffffffffffffffffff1688528381015160ff16848901526040908101519088015260609096019590820190600101612952565b509495945050505050565b600081518084526020808501945080840160005b8381101561299d578151875295820195908201906001016129bc565b60005b838110156129f35781810151838201526020016129db565b50506000910152565b60008151808452612a148160208601602086016129d8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015612ad55782840389528151606073ffffffffffffffffffffffffffffffffffffffff8251168652868201518188880152612aa4828801826129a8565b91505060408083015192508682038188015250612ac181836129fc565b9a87019a9550505090840190600101612a64565b5091979650505050505050565b6000602080835260c0830184518285015281850151604081818701528087015191506060828188015280880151925060a0608081818a015285855180885260e09750878b019150878160051b8c0101898801975060005b82811015612c4c578c82037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2001845288518051868452805173ffffffffffffffffffffffffffffffffffffffff908116888601528d8201511515898601528a8201518051821660c0870152808f015182168e8701528b0151166101008501528881015161012085018d9052612bd261016086018261293e565b918801518583037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8001610140870152919050612c0e818361293e565b9150508c8201518d850152898201518a85015288820151915083810389850152612c388183612a46565b9a8d019a958d019593505050600101612b39565b50838d015199507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301858d0152612c86818b6129fc565b9d9c50505050505050505050505050565b60008060408385031215612caa57600080fd5b505080516020909101519092909150565b600082601f830112612ccc57600080fd5b8151612cda6122cc82612267565b818152846020838601011115612cef57600080fd5b611a228260208301602087016129d8565b600082601f830112612d1157600080fd5b81516020612d216122cc836123eb565b82815260059290921b84018101918181019086841115612d4057600080fd5b8286015b8481101561269c5780518352918301918301612d44565b600060208284031215612d6d57600080fd5b815167ffffffffffffffff80821115612d8557600080fd5b9083019060608286031215612d9957600080fd5b612da16121a9565b8251612dac8161209a565b8152602083015182811115612dc057600080fd5b830160608188031215612dd257600080fd5b612dda6121a9565b8151612de58161209a565b8152602082015184811115612df957600080fd5b612e0589828501612cbb565b602083015250604082015184811115612e1d57600080fd5b612e2989828501612d00565b6040830152508060208401525050604083015182811115612e4957600080fd5b612e5587828601612cbb565b60408301525095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c0850152612ec06101008501836129fc565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e0850152612efd82826129a8565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a9b82826129fc565b604081526000612f4c60408301856129fc565b8281036020840152612f5e81856129a8565b95945050505050565b60008060008060808587031215612f7d57600080fd5b8451612f888161209a565b6020860151909450612f998161209a565b6040860151909350612faa8161209a565b606086015190925067ffffffffffffffff811115612fc757600080fd5b612fd387828801612cbb565b91505092959194509250565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261301457600080fd5b83018035915067ffffffffffffffff82111561302f57600080fd5b6020019150600581901b3603821315611d0b57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261307c57600080fd5b830160208101925035905067ffffffffffffffff81111561309c57600080fd5b8060051b3603821315611d0b57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126130e357600080fd5b830160208101925035905067ffffffffffffffff81111561310357600080fd5b606081023603821315611d0b57600080fd5b8183526000602080850194508260005b8581101561299d5781356131388161209a565b73ffffffffffffffffffffffffffffffffffffffff16875260ff61315d838501612482565b16878401526040828101359088015260609687019690910190600101613125565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126131b357600080fd5b830160208101925035905067ffffffffffffffff8111156131d357600080fd5b803603821315611d0b57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b8881101561333c578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa189360301811261328557600080fd5b8801606081356132948161209a565b73ffffffffffffffffffffffffffffffffffffffff1685526132b882890183613047565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111156132f357600080fd5b881b80828885013786019050604061330d8482018561317e565b945083888403018289015261332584840186836131e2565b9e8b019e9750505093880193505050600101613246565b509098975050505050505050565b6000604080835260e083018635828501526020606081890135818701526080848a01358188015261337d828b018b613047565b60a0898101529485905261010094858901600582901b8a0187018360005b84811015613565577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008d840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818736030181126133fc57600080fd5b86018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2101811261343157600080fd5b888552810180356134418161209a565b73ffffffffffffffffffffffffffffffffffffffff908116868b0152818c01359061346b8261240f565b90151560a087015260c090828f01356134838161209a565b811687830152828c01356134968161209a565b811660e0880152828b01356134aa8161209a565b16868e01526134bc60a08301836130ae565b60e06101208901526134d361016089018284613115565b9150506134e2828401846130ae565b935091507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808782030161014088015261351c818484613115565b925050508a8201358b8601528c8201358d86015261353c8a830183613047565b92508582038b87015261355082848361322b565b968c019695505050918901915060010161339b565b5050613573858f018f61317e565b995097507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08b82030160c08c01526135ac818a8a6131e2565b9850505050505050848303818601525050611a9b8185876131e2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261362b57600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261362b57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261369e57600080fd5b83018035915067ffffffffffffffff8211156136b957600080fd5b6020019150606081023603821315611d0b57600080fd5b6000602082840312156136e257600080fd5b81356120938161209a565b600060a0820173ffffffffffffffffffffffffffffffffffffffff881683526020878185015286604085015260a0606085015281865180845260c08601915060c08160051b870101935082880160005b82811015613789577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff408887030184526137778683516129a8565b9550928401929084019060010161373d565b505050505082810360808401526137a081856129a8565b98975050505050505050565b600080604083850312156137bf57600080fd5b825167ffffffffffffffff808211156137d757600080fd5b6137e386838701612d00565b935060208501519150808211156137f957600080fd5b5061380685828601612d00565b9150509250929050565b828152604060208201526000611a2260408301846129a8565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611a9b60808301846129fc565b60006020828403121561387a57600080fd5b81516120938161240f565b60006020828403121561389757600080fd5b5051919050565b6000806000606084860312156138b357600080fd5b83516138be8161209a565b60208501519093506138cf8161209a565b604085015190925067ffffffffffffffff8111156138ec57600080fd5b6138f886828701612cbb565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000825161362b8184602087016129d8565b828152604060208201526000611a2260408301846129fc565b60208152600061209360208301846129fc56fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
    "sourceMap": "1204:1170:171:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6596:13:21;;;;;;;8639:69:168;;;8683:14;;;;;;;;;;;;;;8639:69;1204:1170:171;5773:270:168;;;;;;;;;;-1:-1:-1;5773:270:168;;;;;:::i;:::-;;:::i;:::-;;;516:14:227;;509:22;491:41;;479:2;464:18;5773:270:168;;;;;;;;9438:1279;;;;;;;;;;-1:-1:-1;9438:1279:168;;;;;:::i;:::-;;:::i;:::-;;;2028:25:227;;;2016:2;2001:18;9438:1279:168;1882:177:227;6718:1825:168;;;;;;;;;;-1:-1:-1;6718:1825:168;;;;;:::i;:::-;;:::i;5371:36::-;;;;;;;;;;-1:-1:-1;5371:36:168;;;;;;;;;;;4613:42:227;4601:55;;;4583:74;;4571:2;4556:18;5371:36:168;4408:255:227;5289:26:168;;;;;;;;;;-1:-1:-1;5289:26:168;;;;;;;;5075:30;;;;;;;;;;-1:-1:-1;5075:30:168;;;;;;;;;;;5184:35;;;;;;;;;;;;;;;;6537:142;;;;;;;;;;-1:-1:-1;6537:142:168;;;;;:::i;:::-;;:::i;12476:3603::-;;;;;;:::i;:::-;;:::i;5773:270::-;5858:4;5881:54;;;5896:39;5881:54;;:103;;-1:-1:-1;5939:45:168;;;5954:30;5939:45;5881:103;:155;;;-1:-1:-1;952:25:35;937:40;;;;6000:36:168;5874:162;5773:270;-1:-1:-1;;5773:270:168:o;9438:1279::-;6596:13:21;;9588:7:168;;6596:13:21;;;;;8639:69:168;;;8683:14;;;;;;;;;;;;;;8639:69;9681:10:::1;::::0;;;::::1;;;9659;:33;9655:92;;9715:21;::::0;::::1;::::0;;9725:10:::1;9715:21;::::0;::::1;4583:74:227::0;4556:18;;9715:21:168::1;;;;;;;;9655:92;9804:26;::::0;::::1;9825:4;9804:26;9800:87;;9853:23;::::0;::::1;::::0;;4613:42:227;4601:55;;9853:23:168::1;::::0;::::1;4583:74:227::0;4556:18;;9853:23:168::1;4408:255:227::0;9800:87:168::1;9898:36;::::0;9977:45:::1;::::0;;::::1;9988:4:::0;9977:45:::1;:::i;:::-;9897:125;;;;10157:35;10167:10;10179:12;10157:9;:35::i;:::-;10594:10;::::0;:33:::1;::::0;;;;10551:18:::1;::::0;;;10594:10;;;::::1;;;::::0;:21:::1;::::0;:33:::1;::::0;10616:10;;10594:33:::1;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;425:45:178::1;::::0;9438:1279:168;-1:-1:-1;;;;;;;;;;;;9438:1279:168:o;6718:1825::-;3291:13:21;;6800:7:168;;3291:13:21;;;;;3290:14;;3336:34;;;;-1:-1:-1;3369:1:21;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:21;1702:19:29;:23;;;3376:55:21;;-1:-1:-1;3414:12:21;;;;;:17;3376:55;3314:190;;;;;;;21614:2:227;3314:190:21;;;21596:21:227;21653:2;21633:18;;;21626:30;21692:34;21672:18;;;21665:62;21763:16;21743:18;;;21736:44;21797:19;;3314:190:21;21412:410:227;3314:190:21;3529:1;3514:16;;;;;;;;3540:65;;;;3590:4;3574:20;;;;;;;;3540:65;2261:21:22::1;:19;:21::i;:::-;6820:46:168::2;6881:4;6870:52;;;;;;;;;;;;:::i;:::-;6819:103:::0;-1:-1:-1;7134:16:168;;7108:10:::2;:43:::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;7226:30:::2;::::0;::::2;::::0;::::2;::::0;7237:10:::2;::::0;7134:6;;7226:30:::2;:::i;:::-;;;;;;;;7475:1;7416:56;7440:6;:22;;;:31;;;7416:23;:56::i;:::-;:60;7412:1086;;;7925:22;::::0;;::::2;::::0;:31;;7992;;::::2;::::0;8025:32:::2;::::0;;::::2;::::0;7925:146;;;;;7492:18:::2;::::0;7525:15:::2;::::0;7925:49:::2;::::0;;::::2;::::0;::::2;::::0;:146:::2;::::0;8025:32;7925:146:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;::::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;7896:9;7889:182:::0;;::::2;::::0;;::::2;::::0;;;::::2;;::::0;;;7890:4:::2;7889:182:::0;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;8247:10;::::2;8241:17:::0;7889:182;;-1:-1:-1;7889:182:168;;-1:-1:-1;8260:4:168::2;8237:28;8296:10:::0;;8292:80:::2;;8333:24;;;;;;;;;;;;;;8292:80;1517:4:89::0;1485:36;;;;;8385:12:168::2;:102:::0;-1:-1:-1;;;7412:1086:168::2;191:36:41;8508:28:168;;;2303:20:22::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;3629:14:21::0;3625:99;;;3659:13;:21;;;;;;3699:14;;27118:36:227;;;3699:14:21;;27106:2:227;27091:18;3699:14:21;;;;;;;3625:99;3258:472;6718:1825:168;;;:::o;6537:142::-;6623:7;6649:23;;;;;;;;;;;;;;12476:3603;2261:21:22;:19;:21::i;:::-;6596:13:21;;;;;;;8639:69:168::1;;;8683:14;;;;;;;;;;;;;;8639:69;12756:17:::2;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;:24;;12784:1;12756:29:::0;12752:77:::2;;12808:10;;;;;;;;;;;;;;12752:77;12914:17;12945:10;12957:12;;12934:36;;;;;;;;;;:::i;:::-;;::::0;;;;;::::2;::::0;;;;;;;-1:-1:-1;13091:25:168::2;13119:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;13137:1;13119:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:39;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;13159:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;13177:1;13159:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:34;;;13119:75;;;;;;;:::i;:::-;:81;::::0;::::2;:75;::::0;;::::2;;:81:::0;;::::2;::::0;-1:-1:-1;13119:81:168::2;:::i;:::-;13091:109:::0;-1:-1:-1;13210:24:168::2;13237:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;13255:1;13237:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:38;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;13276:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;13294:1;13276:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;13237:73;;;;;;;:::i;:::-;:79;::::0;::::2;:73;::::0;;::::2;;:79:::0;;::::2;::::0;-1:-1:-1;13237:79:168::2;:::i;:::-;13605:12;::::0;13210:106;;-1:-1:-1;13487:23:168;::::2;::::0;13631:36;;13627:729:::2;;13732:4;::::0;13760:9:::2;::::0;13684:22:::2;::::0;;;13732:4:::2;::::0;;::::2;::::0;:10:::2;::::0;13760:9:::2;13787:69;13684:22:::0;13850:4:::2;1053:42:93::0;1150:25;;;1195:4;1188:20;1256:4;1243:18;;;933:344;13787:69:168::2;13917:18;::::0;;13933:1:::2;13917:18:::0;;;::::2;::::0;::::2;::::0;;;13874:8;;13900:62:::2;::::0;13917:18;::::2;::::0;::::2;;;;;;;;;;;;;;;;;-1:-1:-1::0;13937:24:168::2;::::0;;13959:1:::2;13937:24:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;13937:24:168::2;;;;;;;;;;;;;;;;;13900:16;:62::i;:::-;13980:16;::::0;;13994:1:::2;13980:16:::0;;::::2;::::0;::::2;::::0;;;;13732:278;::::2;::::0;;;;;;;::::2;::::0;;;;;;;;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;::::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;14094:12:::0;;13683:327;;-1:-1:-1;13683:327:168;-1:-1:-1;14094:16:168;14090:85:::2;;14137:23;;;;;;;;;;;;;;14090:85;14254:10:::0;;:14;14250:96:::2;;14288:9;::::0;;:43:::2;::::0;;;;:9:::2;::::0;;::::2;::::0;:13:::2;::::0;:43:::2;::::0;:9:::2;::::0;14327:3;;14288:43:::2;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;14250:96;13669:687;;13627:729;14633:10;::::0;14588:60:::2;::::0;14633:10:::2;14588:36:::0;;::::2;::::0;14633:10;;::::2;;14646:1;14588:36;:60::i;:::-;14703:10;::::0;14658:76:::2;::::0;14703:10:::2;14658:36:::0;;::::2;::::0;14703:10;;::::2;;14716:17;14658:36;:76::i;:::-;14749:10;::::0;:68:::2;::::0;;;;:10;;;::::2;;;::::0;:20:::2;::::0;:68:::2;::::0;14770:4:::2;::::0;14776:17;;14795:15;;14812:4;;14749:68:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14744:124;;14840:17;;;;;;;;;;;;;;14744:124;14922:10;::::0;14877:60:::2;::::0;14922:10:::2;14877:36:::0;;::::2;::::0;14922:10;;::::2;;14935:1;14877:36;:60::i;:::-;15027:49;::::0;;;;15070:4:::2;15027:49;::::0;::::2;4583:74:227::0;15004:20:168::2;::::0;15027:34:::2;::::0;::::2;::::0;::::2;::::0;4556:18:227;;15027:49:168::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15004:72;;15105:19;15090:12;:34;15086:120;;;15147:48;::::0;::::2;::::0;;::::2;::::0;::::2;42369:25:227::0;;;42410:18;;;42403:34;;;42342:18;;15147:48:168::2;42195:248:227::0;15086:120:168::2;15219:16:::0;;15215:110:::2;;15251:63;:37;::::0;::::2;15289:10;15301:12:::0;15251:37:::2;:63::i;:::-;15415:50;::::0;;;;15459:4:::2;15415:50;::::0;::::2;4583:74:227::0;15391:21:168::2;::::0;15415:35:::2;::::0;::::2;::::0;::::2;::::0;4556:18:227;;15415:50:168::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15391:74:::0;-1:-1:-1;15479:17:168;;15475:113:::2;;15512:65;:38;::::0;::::2;15551:10;15563:13:::0;15512:38:::2;:65::i;:::-;16011:61;16037:10;16050:21;16011:17;:61::i;:::-;12673:3406;;;;;;;2303:20:22::0;1716:1;2809:7;:22;2629:209;2303:20;12476:3603:168;;;;:::o;1535:760:171:-;1656:15;1673:12;1687:32;1746:12;1735:51;;;;;;;;;;;;:::i;:::-;1655:131;;;;;;1797:21;1821:10;:17;;;1839:1;1821:20;;;;;;;;:::i;:::-;;;;;;;:26;;;:39;;;1861:10;:17;;;1879:1;1861:20;;;;;;;;:::i;:::-;;;;;;;:34;;;1821:75;;;;;;;;:::i;:::-;;;;;;;;;;;:81;;-1:-1:-1;1913:45:171;:33;;;1947:7;1821:81;1913:33;:45::i;:::-;1968:61;:33;;;2002:7;2011:17;1968:33;:61::i;:::-;2039:23;2065:70;:26;;;2092:19;2113:21;2065:26;:70::i;:::-;2039:96;-1:-1:-1;2243:45:171;:33;;;2277:7;2286:1;2243:33;:45::i;:::-;1645:650;;;;;1535:760;;:::o;2336:287:22:-;1759:1;2468:7;;:19;2460:63;;;;;;;43268:2:227;2460:63:22;;;43250:21:227;43307:2;43287:18;;;43280:30;43346:33;43326:18;;;43319:61;43397:18;;2460:63:22;43066:355:227;2460:63:22;1759:1;2598:7;:18;2336:287::o;6320:65:168:-;;:::o;3332:365:86:-;3399:13;3428:8;:15;3447:1;3428:20;3424:59;;-1:-1:-1;3471:1:86;;3332:365;-1:-1:-1;3332:365:86:o;3424:59::-;-1:-1:-1;3674:4:86;3660:19;3654:26;3651:1;3646:35;;3332:365::o;7166:2290:87:-;7301:18;7359:24;7400:14;:21;7386:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7386:36:87;;7359:63;;7571:21;7645:1;7621:14;:21;:25;:57;;7677:1;7621:57;;;7649:14;:21;7673:1;7649:25;7621:57;7599:11;:18;7595:1;:22;:84;7571:108;;7694:26;7739:13;7723:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7694:59;;7767:14;7817:17;3283:4:159;3277:11;;3315:1;3301:16;;2288:10:87;3348:4:159;3337:16;;3330:27;2326:4:87;3377:16:159;;;3370:27;2211:16:87;3423::159;;3410:30;;;3277:11;2172:169:87;7817:17;7799:7;7807:6;7799:15;;;;;;;;:::i;:::-;;;;;;:35;;;;7854:9;7849:140;7873:11;:18;7869:1;:22;7849:140;;;7916:8;;;;;;;7960:11;7972:1;7960:14;;;;;;;;:::i;:::-;;;;;;;7942:7;7950:6;7942:15;;;;;;;;:::i;:::-;;;;;;;;;;:32;7893:3;;7849:140;;;-1:-1:-1;8007:21:87;;:25;8003:1408;;8052:8;;;;;;;8096:7;8078;8086:6;8078:15;;;;;;;;:::i;:::-;;;;;;:25;;;;8127:9;8122:1275;8146:14;:21;8142:1;:25;8122:1275;;;8824:284;8890:14;8905:1;8890:17;;;;;;;;:::i;:::-;;;;;;;:24;;;8944:81;8973:51;8998:14;9013:1;8998:17;;;;;;;;:::i;:::-;;;;;;;:25;;;4081:13:146;;4096:4;4077:24;;;4058:17;;4048:54;;3908:210;8973:51:87;7389:34:33;7189:15;7376:48;;;7444:4;7437:18;;;;7495:4;7479:21;;;7120:396;8944:81:87;9055:14;9070:1;9055:17;;;;;;;;:::i;:::-;;;;;;;:27;;;8824:36;:284::i;:::-;8196:1010;;9164:19;;;;;;;;2028:25:227;;;2001:18;;9164:19:87;1882:177:227;8196:1010:87;9257:14;9272:1;9257:17;;;;;;;;:::i;:::-;;;;;;;:24;;;9241:42;;9228:7;9236:1;9228:10;;;;;;;;:::i;:::-;;;;;;:55;;;;;9305:8;;;;;;;9353:14;9368:1;9353:17;;;;;;;;:::i;:::-;;;;;;;:25;;;9335:7;9343:6;9335:15;;;;;;;;:::i;:::-;;;;;;;;;;:43;8169:3;;8122:1275;;;;8003:1408;-1:-1:-1;9432:7:87;7166:2290;-1:-1:-1;;;;;7166:2290:87:o;1818:573:27:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:27;;;;;2183:4;2159:39;;;43843:34:227;2159:15:27;43913::227;;;43893:18;;;43886:43;2159:15:27;;;;;43755:18:227;;2159:39:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;;;;44142:2:227;2121:163:27;;;44124:21:227;44181:2;44161:18;;;44154:30;44220:34;44200:18;;;44193:62;44291:24;44271:18;;;44264:52;44333:19;;2121:163:27;43940:418:227;2121:163:27;2321:62;;44567:42:227;44555:55;;2321:62:27;;;44537:74:227;44627:18;;;44620:34;;;2294:90:27;;2314:5;;2344:22;;44510:18:227;;2321:62:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:19;:90::i;:::-;1818:573;;;:::o;941:175::-;1050:58;;44567:42:227;44555:55;;1050:58:27;;;44537:74:227;44627:18;;;44620:34;;;1023:86:27;;1043:5;;1073:23;;44510:18:227;;1050:58:27;44363:297:227;2647:312:29;2761:6;2736:21;:31;;2728:73;;;;;;;44867:2:227;2728:73:29;;;44849:21:227;44906:2;44886:18;;;44879:30;44945:31;44925:18;;;44918:59;44994:18;;2728:73:29;44665:353:227;2728:73:29;2813:12;2831:9;:14;;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;;;;45435:2:227;2874:78:29;;;45417:21:227;45474:2;45454:18;;;45447:30;45513:34;45493:18;;;45486:62;45584:28;45564:18;;;45557:56;45630:19;;2874:78:29;45233:422:227;4693:224:29;4792:12;4823:87;4845:6;4853:4;4859:5;4823:87;;;;;;;;;;;;;;;;;:21;:87::i;:::-;4816:94;4693:224;-1:-1:-1;;;;4693:224:29:o;1014:366:34:-;1120:4;1137:17;1156:24;1184:33;1201:4;1207:9;1184:16;:33::i;:::-;1136:81;;-1:-1:-1;1136:81:34;-1:-1:-1;1256:26:34;1247:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1299:6;1286:19;;:9;:19;;;1247:58;1246:127;;;;1322:51;1349:6;1357:4;1363:9;1322:26;:51::i;:::-;1227:146;1014:366;-1:-1:-1;;;;;;1014:366:34:o;5196:642:27:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;;;;46051:2:227;5720:111:27;;;46033:21:227;46090:2;46070:18;;;46063:30;46129:34;46109:18;;;46102:62;46200:12;46180:18;;;46173:40;46230:19;;5720:111:27;45849:406:227;5165:446:29;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;46462:2:227;5354:81:29;;;46444:21:227;46501:2;46481:18;;;46474:30;46540:34;46520:18;;;46513:62;46611:8;46591:18;;;46584:36;46637:19;;5354:81:29;46260:402:227;5354:81:29;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:29:o;2145:730:33:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:33;;-1:-1:-1;2822:35:33;2259:610;2145:730;;;;;:::o;1786:473:34:-;1929:4;1946:12;1960:19;1983:6;:17;;2037:34;;;2073:4;2079:9;2014:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:116;;;;2014:75;1983:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:154;;;;2117:7;:42;;;;;2157:2;2140:6;:13;:19;;2117:42;:134;;;;-1:-1:-1;2175:29:34;;2216:34;;2175:29;;;;;;;;;;;;:::i;:::-;:76;;1786:473;-1:-1:-1;;;;;;1786:473:34:o;4108:223:29:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;1702:19;;;;8113:60;;;;;;;47643:2:227;8113:60:29;;;47625:21:227;47682:2;47662:18;;;47655:30;47721:31;47701:18;;;47694:59;47770:18;;8113:60:29;47441:353:227;8113:60:29;-1:-1:-1;8208:10:29;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;5009:1456:33:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:33;;-1:-1:-1;6123:30:33;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;48026:25:227;;;48099:4;48087:17;;48067:18;;;48060:45;;;;48121:18;;;48114:34;;;48164:18;;;48157:34;;;6276:24:33;;47998:19:227;;6276:24:33;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:33;;;;;;-1:-1:-1;;6314:20:33;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:33;;-1:-1:-1;5009:1456:33;;;;;;;;:::o;8821:540:29:-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;14:332:227:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:227:o;543:154::-;629:42;622:5;618:54;611:5;608:65;598:93;;687:1;684;677:12;702:347;753:8;763:6;817:3;810:4;802:6;798:17;794:27;784:55;;835:1;832;825:12;784:55;-1:-1:-1;858:20:227;;901:18;890:30;;887:50;;;933:1;930;923:12;887:50;970:4;962:6;958:17;946:29;;1022:3;1015:4;1006:6;998;994:19;990:30;987:39;984:59;;;1039:1;1036;1029:12;1054:823;1160:6;1168;1176;1184;1192;1200;1253:3;1241:9;1232:7;1228:23;1224:33;1221:53;;;1270:1;1267;1260:12;1221:53;1309:9;1296:23;1328:31;1353:5;1328:31;:::i;:::-;1378:5;-1:-1:-1;1435:2:227;1420:18;;1407:32;1448:33;1407:32;1448:33;:::i;:::-;1500:7;-1:-1:-1;1554:2:227;1539:18;;1526:32;;-1:-1:-1;1605:2:227;1590:18;;1577:32;;-1:-1:-1;1660:3:227;1645:19;;1632:33;1688:18;1677:30;;1674:50;;;1720:1;1717;1710:12;1674:50;1759:58;1809:7;1800:6;1789:9;1785:22;1759:58;:::i;:::-;1054:823;;;;-1:-1:-1;1054:823:227;;-1:-1:-1;1054:823:227;;1836:8;;1054:823;-1:-1:-1;;;1054:823:227:o;2064:184::-;2116:77;2113:1;2106:88;2213:4;2210:1;2203:15;2237:4;2234:1;2227:15;2253:253;2325:2;2319:9;2367:4;2355:17;;2402:18;2387:34;;2423:22;;;2384:62;2381:88;;;2449:18;;:::i;:::-;2485:2;2478:22;2253:253;:::o;2511:::-;2583:2;2577:9;2625:4;2613:17;;2660:18;2645:34;;2681:22;;;2642:62;2639:88;;;2707:18;;:::i;2769:253::-;2841:2;2835:9;2883:4;2871:17;;2918:18;2903:34;;2939:22;;;2900:62;2897:88;;;2965:18;;:::i;3027:334::-;3098:2;3092:9;3154:2;3144:13;;3159:66;3140:86;3128:99;;3257:18;3242:34;;3278:22;;;3239:62;3236:88;;;3304:18;;:::i;:::-;3340:2;3333:22;3027:334;;-1:-1:-1;3027:334:227:o;3366:245::-;3414:4;3447:18;3439:6;3436:30;3433:56;;;3469:18;;:::i;:::-;-1:-1:-1;3526:2:227;3514:15;3531:66;3510:88;3600:4;3506:99;;3366:245::o;3616:462::-;3658:5;3711:3;3704:4;3696:6;3692:17;3688:27;3678:55;;3729:1;3726;3719:12;3678:55;3765:6;3752:20;3796:48;3812:31;3840:2;3812:31;:::i;:::-;3796:48;:::i;:::-;3869:2;3860:7;3853:19;3915:3;3908:4;3903:2;3895:6;3891:15;3887:26;3884:35;3881:55;;;3932:1;3929;3922:12;3881:55;3997:2;3990:4;3982:6;3978:17;3971:4;3962:7;3958:18;3945:55;4045:1;4020:16;;;4038:4;4016:27;4009:38;;;;4024:7;3616:462;-1:-1:-1;;;3616:462:227:o;4083:320::-;4151:6;4204:2;4192:9;4183:7;4179:23;4175:32;4172:52;;;4220:1;4217;4210:12;4172:52;4260:9;4247:23;4293:18;4285:6;4282:30;4279:50;;;4325:1;4322;4315:12;4279:50;4348:49;4389:7;4380:6;4369:9;4365:22;4348:49;:::i;5395:412::-;5507:6;5560:2;5548:9;5539:7;5535:23;5531:32;5528:52;;;5576:1;5573;5566:12;5528:52;5616:9;5603:23;5649:18;5641:6;5638:30;5635:50;;;5681:1;5678;5671:12;5635:50;5704:22;;5760:2;5742:16;;;5738:25;5735:45;;;5776:1;5773;5766:12;5812:775;5939:6;5947;5955;5963;6016:2;6004:9;5995:7;5991:23;5987:32;5984:52;;;6032:1;6029;6022:12;5984:52;6072:9;6059:23;6101:18;6142:2;6134:6;6131:14;6128:34;;;6158:1;6155;6148:12;6128:34;6181:22;;;;6237:3;6219:16;;;6215:26;6212:46;;;6254:1;6251;6244:12;6212:46;6277:2;;-1:-1:-1;6326:2:227;6311:18;;6298:32;;-1:-1:-1;6383:2:227;6368:18;;6355:32;;6399:16;;;6396:36;;;6428:1;6425;6418:12;6396:36;;6467:60;6519:7;6508:8;6497:9;6493:24;6467:60;:::i;:::-;5812:775;;;;-1:-1:-1;6546:8:227;-1:-1:-1;;;;5812:775:227:o;6823:200::-;6900:4;6933:18;6925:6;6922:30;6919:56;;;6955:18;;:::i;:::-;-1:-1:-1;7000:1:227;6996:14;7012:4;6992:25;;6823:200::o;7028:118::-;7114:5;7107:13;7100:21;7093:5;7090:32;7080:60;;7136:1;7133;7126:12;7151:128;7216:20;;7245:28;7216:20;7245:28;:::i;:::-;7151:128;;;:::o;7284:570::-;7342:5;7390:4;7378:9;7373:3;7369:19;7365:30;7362:50;;;7408:1;7405;7398:12;7362:50;7430:22;;:::i;:::-;7421:31;;7489:9;7476:23;7508:33;7533:7;7508:33;:::i;:::-;7550:22;;7624:2;7609:18;;7596:32;7637:33;7596:32;7637:33;:::i;:::-;7697:2;7686:14;;7679:31;7762:2;7747:18;;7734:32;7775:33;7734:32;7775:33;:::i;:::-;7835:2;7824:14;;7817:31;7828:5;7284:570;-1:-1:-1;;7284:570:227:o;7859:156::-;7925:20;;7985:4;7974:16;;7964:27;;7954:55;;8005:1;8002;7995:12;8020:1147;8076:5;8129:3;8122:4;8114:6;8110:17;8106:27;8096:55;;8147:1;8144;8137:12;8096:55;8183:6;8170:20;8209:4;8233:77;8249:60;8306:2;8249:60;:::i;8233:77::-;8344:15;;;8406:4;8449:11;;;8437:24;;8433:33;;;8375:12;;;;8332:3;8478:15;;;8475:35;;;8506:1;8503;8496:12;8475:35;8542:2;8534:6;8530:15;8554:584;8570:6;8565:3;8562:15;8554:584;;;8646:2;8640:3;8635;8631:13;8627:22;8624:112;;;8690:1;8719:2;8715;8708:14;8624:112;8762:22;;:::i;:::-;8825:3;8812:17;8842:33;8867:7;8842:33;:::i;:::-;8888:22;;8946:30;8963:12;;;8946:30;:::i;:::-;8930:14;;;8923:54;9000:2;9051:12;;;9038:26;9022:14;;;9015:50;9078:18;;9116:12;;;;8587;;8554:584;;;-1:-1:-1;9156:5:227;;8020:1147;-1:-1:-1;;;;;;;8020:1147:227:o;9172:2584::-;9241:5;9294:3;9287:4;9279:6;9275:17;9271:27;9261:55;;9312:1;9309;9302:12;9261:55;9348:6;9335:20;9374:4;9398:77;9414:60;9471:2;9414:60;:::i;9398:77::-;9509:15;;;9595:1;9591:10;;;;9579:23;;9575:32;;;9540:12;;;;9619:15;;;9616:35;;;9647:1;9644;9637:12;9616:35;9683:2;9675:6;9671:15;9695:2032;9711:6;9706:3;9703:15;9695:2032;;;9797:3;9784:17;9824:18;9874:2;9861:11;9858:19;9855:39;;;9890:1;9887;9880:12;9855:39;9917:24;;;;10048:4;9965:12;;;9979:66;9961:85;9957:96;9954:186;;;10094:1;10123:2;10119;10112:14;9954:186;10166:22;;:::i;:::-;10237:2;10233;10229:11;10216:25;10254:33;10279:7;10254:33;:::i;:::-;10300:22;;10345:2;10389:11;;;10376:25;10417:16;;;10414:106;;;10474:1;10503:2;10499;10492:14;10414:106;10543:17;;10595:2;10587:11;;10583:21;-1:-1:-1;10573:119:227;;10646:1;10675:2;10671;10664:14;10573:119;10737:2;10733;10729:11;10716:25;10767:78;10783:61;10840:3;10783:61;:::i;10767:78::-;10889:18;;;10988:1;10984:11;;;;10976:20;;10972:29;;;10929:14;;;;11017:17;;;11014:110;;;11076:1;11106:3;11101;11094:16;11014:110;11150:11;;;;11174:174;11192:8;11185:5;11182:19;11174:174;;;11274:19;;11260:34;;11213:14;;;;11320;;;;11174:174;;;11368:14;;;11361:29;-1:-1:-1;;;11440:4:227;11432:13;;11419:27;11462:16;;;11459:109;;;11520:1;11550:3;11545;11538:16;11459:109;11604:49;11649:3;11644:2;11633:8;11629:2;11625:17;11621:26;11604:49;:::i;:::-;11588:14;;;11581:73;;;;-1:-1:-1;11667:18:227;;-1:-1:-1;;11705:12:227;;;;9728;;9695:2032;;;-1:-1:-1;11745:5:227;9172:2584;-1:-1:-1;;;;;;9172:2584:227:o;11761:3757::-;11875:6;11883;11936:2;11924:9;11915:7;11911:23;11907:32;11904:52;;;11952:1;11949;11942:12;11904:52;11975:18;12033:2;12021:9;12008:23;12005:31;12002:51;;;12049:1;12046;12039:12;12002:51;12124:4;12110:9;12097:23;12086:9;12082:39;12073:7;12069:53;12065:64;12062:84;;;12142:1;12139;12132:12;12062:84;12168:22;;:::i;:::-;12241:23;;12226:39;;12213:53;;12199:68;;12357:2;12312:48;;;12299:62;12283:14;;;12276:86;12452:2;12407:48;;;12394:62;12378:14;;;12371:86;12530:2;12485:48;12472:62;12469:70;-1:-1:-1;12466:90:227;;;12552:1;12549;12542:12;12466:90;12652:23;;12637:39;;12678:2;12633:48;;12620:62;12575:108;12714:4;12706:13;;12702:27;-1:-1:-1;12692:55:227;;12743:1;12740;12733:12;12692:55;12767:91;12783:74;12853:2;12840:16;12783:74;:::i;12767:91::-;12904:16;;12892:29;;;12946:2;12937:12;;;;12880:3;12980:1;12976:24;12968:33;;12964:42;12961:55;-1:-1:-1;12958:75:227;;;13029:1;13026;13019:12;12958:75;13061:2;13057;13053:11;13073:1941;13136:2;13129;13116:16;13113:1;13109:24;13105:2;13101:33;13097:42;13092:3;13089:51;13073:1941;;;13220:2;13214:3;13201:17;13198:25;13195:45;;;13236:1;13233;13226:12;13195:45;13263:66;13400:4;13395:2;13387:3;13374:17;13370:2;13366:26;13357:7;13353:40;13349:49;13345:60;13342:80;;;13418:1;13415;13408:12;13342:80;13450:22;;:::i;:::-;13542:2;13536;13529:3;13516:17;13512:2;13508:26;13504:35;13491:49;13488:57;13485:77;;;13558:1;13555;13548:12;13485:77;13642:17;;13634:26;;13662:2;13630:35;;13617:49;13585:82;13714:4;13691:16;;;13687:25;;13683:36;13680:56;;;13732:1;13729;13722:12;13680:56;13764:22;;:::i;:::-;13749:37;;13799:51;13845:2;13841;13837:11;13824:25;13799:51;:::i;:::-;13900:2;13896;13892:11;13879:25;13870:7;13863:42;13943:28;13967:2;13963;13959:11;13943:28;:::i;:::-;13938:2;13929:7;13925:16;13918:54;14010:51;14053:7;14048:2;14044;14040:11;14010:51;:::i;:::-;14005:2;13996:7;13992:16;13985:77;14109:2;14102:3;14098:2;14094:12;14081:26;14078:34;14075:54;;;14125:1;14122;14115:12;14075:54;14167:85;14244:7;14239:2;14231:3;14227:2;14223:12;14210:26;14206:2;14202:35;14198:44;14167:85;:::i;:::-;14162:2;14153:7;14149:16;14142:111;14301:2;14293:4;14289:2;14285:13;14272:27;14269:35;14266:55;;;14317:1;14314;14307:12;14266:55;14361:86;14439:7;14434:2;14425:4;14421:2;14417:13;14404:27;14400:2;14396:36;14392:45;14361:86;:::i;:::-;14354:4;14345:7;14341:18;14334:114;;14477:7;14468;14461:24;14568:2;14561:3;14548:17;14544:2;14540:26;14536:35;14523:49;14518:2;14509:7;14505:16;14498:75;14656:2;14649:3;14636:17;14632:2;14628:26;14624:35;14611:49;14606:2;14597:7;14593:16;14586:75;14733:2;14725:4;14718:3;14705:17;14701:2;14697:26;14693:37;14680:51;14677:59;14674:79;;;14749:1;14746;14739:12;14674:79;14791:147;14930:7;14896:17;;14888:26;;14916:4;14884:37;;14871:51;14839:84;14925:2;14835:93;14791:147;:::i;:::-;14786:2;14773:16;;14766:173;14952:20;;-1:-1:-1;15001:2:227;14992:12;;;;13158;13073:1941;;;-1:-1:-1;15041:2:227;15030:14;;15023:29;-1:-1:-1;;15099:23:227;;15084:39;;15125:4;15080:50;15067:64;15064:72;-1:-1:-1;15061:92:227;;;15149:1;15146;15139:12;15061:92;15187:137;15316:7;15281:23;;15266:39;;15307:4;15262:50;;15249:64;15204:110;15187:137;:::i;:::-;15180:4;15169:16;;15162:163;15173:5;-1:-1:-1;15392:2:227;15377:18;;15364:32;15361:40;-1:-1:-1;15358:60:227;;;15414:1;15411;15404:12;15358:60;;15437:75;15504:7;15497:2;15486:9;15482:18;15469:32;15458:9;15454:48;15437:75;:::i;:::-;15427:85;;11761:3757;;;;;:::o;15523:664::-;15578:3;15616:5;15610:12;15643:6;15638:3;15631:19;15669:4;15698:2;15693:3;15689:12;15682:19;;15735:2;15728:5;15724:14;15756:1;15766:396;15780:6;15777:1;15774:13;15766:396;;;15839:13;;15881:9;;15892:42;15877:58;15865:71;;15980:11;;;15974:18;15994:4;15970:29;15956:12;;;15949:51;16023:4;16067:11;;;16061:18;16047:12;;;16040:40;16109:4;16100:14;;;;16137:15;;;;15802:1;15795:9;15766:396;;;-1:-1:-1;16178:3:227;;15523:664;-1:-1:-1;;;;;15523:664:227:o;16192:435::-;16245:3;16283:5;16277:12;16310:6;16305:3;16298:19;16336:4;16365:2;16360:3;16356:12;16349:19;;16402:2;16395:5;16391:14;16423:1;16433:169;16447:6;16444:1;16441:13;16433:169;;;16508:13;;16496:26;;16542:12;;;;16577:15;;;;16469:1;16462:9;16433:169;;16632:250;16717:1;16727:113;16741:6;16738:1;16735:13;16727:113;;;16817:11;;;16811:18;16798:11;;;16791:39;16763:2;16756:10;16727:113;;;-1:-1:-1;;16874:1:227;16856:16;;16849:27;16632:250::o;16887:329::-;16928:3;16966:5;16960:12;16993:6;16988:3;16981:19;17009:76;17078:6;17071:4;17066:3;17062:14;17055:4;17048:5;17044:16;17009:76;:::i;:::-;17130:2;17118:15;17135:66;17114:88;17105:98;;;;17205:4;17101:109;;16887:329;-1:-1:-1;;16887:329:227:o;17221:1088::-;17289:3;17327:5;17321:12;17354:6;17349:3;17342:19;17380:4;17421:2;17416:3;17412:12;17446:11;17473;17466:18;;17523:6;17520:1;17516:14;17509:5;17505:26;17493:38;;17565:2;17558:5;17554:14;17586:1;17596:687;17610:6;17607:1;17604:13;17596:687;;;17681:5;17675:4;17671:16;17666:3;17659:29;17717:6;17711:13;17747:4;17792:42;17787:2;17781:9;17777:58;17771:4;17764:72;17883:2;17879;17875:11;17869:18;17922:2;17917;17911:4;17907:13;17900:25;17952:57;18005:2;17999:4;17995:13;17981:12;17952:57;:::i;:::-;17938:71;;;18032:4;18085:2;18081;18077:11;18071:18;18049:40;;18136:4;18128:6;18124:17;18119:2;18113:4;18109:13;18102:40;;18163;18196:6;18180:14;18163:40;:::i;:::-;18261:12;;;;18155:48;-1:-1:-1;;;18226:15:227;;;;17632:1;17625:9;17596:687;;;-1:-1:-1;18299:4:227;;17221:1088;-1:-1:-1;;;;;;;17221:1088:227:o;18314:2843::-;18480:4;18509:2;18538;18527:9;18520:21;18579:3;18568:9;18564:19;18625:6;18619:13;18614:2;18603:9;18599:18;18592:41;18670:2;18662:6;18658:15;18652:22;18693:2;18731;18726;18715:9;18711:18;18704:30;18771:2;18763:6;18759:15;18753:22;18743:32;;18794:2;18832;18827;18816:9;18812:18;18805:30;18882:2;18874:6;18870:15;18864:22;18844:42;;18905:4;18928:3;18967:2;18962;18951:9;18947:18;18940:30;18990:6;19025:12;19019:19;19062:6;19054;19047:22;19088:3;19078:13;;19122:2;19111:9;19107:18;19100:25;;19184:2;19174:6;19171:1;19167:14;19156:9;19152:30;19148:39;19228:2;19214:12;19210:21;19196:35;;19249:1;19259:1650;19273:6;19270:1;19267:13;19259:1650;;;19338:22;;;19362:66;19334:95;19322:108;;19453:13;;19501:9;;19523:18;;;19648:21;;19565:42;19644:31;;;19627:15;;;19620:56;19733:23;;;19727:30;19720:38;19713:46;19696:15;;;19689:71;19801:23;;;19795:30;19867:21;;19863:31;;19857:3;19845:16;;19838:57;19942:23;;;19936:30;19932:40;;19915:15;;;19908:65;20021:23;;20015:30;20011:40;20005:3;19993:16;;19986:66;20093:23;;;20087:30;20149:3;20137:16;;20130:28;;;20185:64;20244:3;20232:16;;20087:30;20185:64;:::i;:::-;20290:23;;;20284:30;20356:19;;;20377:66;20352:92;20346:3;20334:16;;20327:118;20284:30;20171:78;-1:-1:-1;20469:54:227;20171:78;20284:30;20469:54;:::i;:::-;20458:65;;;20574:2;20570;20566:11;20560:18;20555:2;20547:6;20543:15;20536:43;20630:2;20626;20622:11;20616:18;20611:2;20603:6;20599:15;20592:43;20684:2;20680;20676:11;20670:18;20648:40;;20734:6;20729:3;20725:16;20720:2;20712:6;20708:15;20701:41;20765:64;20825:3;20809:14;20765:64;:::i;:::-;20852:15;;;;20887:12;;;;20755:74;-1:-1:-1;;;19295:1:227;19288:9;19259:1650;;;19263:3;20958:2;20950:6;20946:15;20940:22;20918:44;;21026:66;21014:9;21006:6;21002:22;20998:95;20993:2;20982:9;20978:18;20971:123;21111:40;21144:6;21128:14;21111:40;:::i;:::-;21103:48;18314:2843;-1:-1:-1;;;;;;;;;;;;;18314:2843:227:o;21162:245::-;21241:6;21249;21302:2;21290:9;21281:7;21277:23;21273:32;21270:52;;;21318:1;21315;21308:12;21270:52;-1:-1:-1;;21341:16:227;;21397:2;21382:18;;;21376:25;21341:16;;21376:25;;-1:-1:-1;21162:245:227:o;21827:441::-;21880:5;21933:3;21926:4;21918:6;21914:17;21910:27;21900:55;;21951:1;21948;21941:12;21900:55;21980:6;21974:13;22011:48;22027:31;22055:2;22027:31;:::i;22011:48::-;22084:2;22075:7;22068:19;22130:3;22123:4;22118:2;22110:6;22106:15;22102:26;22099:35;22096:55;;;22147:1;22144;22137:12;22096:55;22160:77;22234:2;22227:4;22218:7;22214:18;22207:4;22199:6;22195:17;22160:77;:::i;22273:676::-;22338:5;22391:3;22384:4;22376:6;22372:17;22368:27;22358:55;;22409:1;22406;22399:12;22358:55;22438:6;22432:13;22464:4;22488:77;22504:60;22561:2;22504:60;:::i;22488:77::-;22599:15;;;22685:1;22681:10;;;;22669:23;;22665:32;;;22630:12;;;;22709:15;;;22706:35;;;22737:1;22734;22727:12;22706:35;22773:2;22765:6;22761:15;22785:135;22801:6;22796:3;22793:15;22785:135;;;22867:10;;22855:23;;22898:12;;;;22818;;22785:135;;22954:1508;23075:6;23128:2;23116:9;23107:7;23103:23;23099:32;23096:52;;;23144:1;23141;23134:12;23096:52;23177:9;23171:16;23206:18;23247:2;23239:6;23236:14;23233:34;;;23263:1;23260;23253:12;23233:34;23286:22;;;;23342:4;23324:16;;;23320:27;23317:47;;;23360:1;23357;23350:12;23317:47;23386:22;;:::i;:::-;23438:2;23432:9;23450:33;23475:7;23450:33;:::i;:::-;23492:22;;23553:2;23545:11;;23539:18;23569:16;;;23566:36;;;23598:1;23595;23588:12;23566:36;23621:17;;23672:4;23654:16;;;23650:27;23647:47;;;23690:1;23687;23680:12;23647:47;23718:22;;:::i;:::-;23770:2;23764:9;23782:33;23807:7;23782:33;:::i;:::-;23824:24;;23887:2;23879:11;;23873:18;23903:16;;;23900:36;;;23932:1;23929;23922:12;23900:36;23970:55;24017:7;24006:8;24002:2;23998:17;23970:55;:::i;:::-;23965:2;23956:7;23952:16;23945:81;;24065:2;24061;24057:11;24051:18;24094:2;24084:8;24081:16;24078:36;;;24110:1;24107;24100:12;24078:36;24148:67;24207:7;24196:8;24192:2;24188:17;24148:67;:::i;:::-;24143:2;24134:7;24130:16;24123:93;;24248:7;24243:2;24236:5;24232:14;24225:31;;;24295:2;24291;24287:11;24281:18;24324:2;24314:8;24311:16;24308:36;;;24340:1;24337;24330:12;24308:36;24376:55;24423:7;24412:8;24408:2;24404:17;24376:55;:::i;:::-;24371:2;24360:14;;24353:79;-1:-1:-1;24364:5:227;22954:1508;-1:-1:-1;;;;;22954:1508:227:o;24467:1278::-;24689:4;24718:42;24799:2;24791:6;24787:15;24776:9;24769:34;24839:2;24834;24823:9;24819:18;24812:30;24897:2;24888:6;24882:13;24878:22;24873:2;24862:9;24858:18;24851:50;24948:2;24940:6;24936:15;24930:22;24990:4;24983;24972:9;24968:20;24961:34;25057:2;25042:12;25036:19;25032:28;25026:3;25015:9;25011:19;25004:57;25116:2;25102:12;25098:21;25092:28;25070:50;;25157:4;25151:3;25140:9;25136:19;25129:33;25185:53;25233:3;25222:9;25218:19;25202:14;25185:53;:::i;:::-;25171:67;;25293:2;25279:12;25275:21;25269:28;25247:50;;25362:66;25350:9;25342:6;25338:22;25334:95;25328:3;25317:9;25313:19;25306:124;25450:52;25495:6;25479:14;25450:52;:::i;:::-;25439:63;;;25551:2;25543:6;25539:15;25533:22;25617:66;25605:9;25600:3;25596:19;25592:92;25586:3;25575:9;25571:19;25564:121;25702:37;25735:3;25719:14;25702:37;:::i;25750:421::-;25975:2;25964:9;25957:21;25938:4;26001:44;26041:2;26030:9;26026:18;26018:6;26001:44;:::i;:::-;26093:9;26085:6;26081:22;26076:2;26065:9;26061:18;26054:50;26121:44;26158:6;26150;26121:44;:::i;:::-;26113:52;25750:421;-1:-1:-1;;;;;25750:421:227:o;26176:785::-;26335:6;26343;26351;26359;26412:3;26400:9;26391:7;26387:23;26383:33;26380:53;;;26429:1;26426;26419:12;26380:53;26461:9;26455:16;26480:31;26505:5;26480:31;:::i;:::-;26580:2;26565:18;;26559:25;26530:5;;-1:-1:-1;26593:33:227;26559:25;26593:33;:::i;:::-;26697:2;26682:18;;26676:25;26645:7;;-1:-1:-1;26710:33:227;26676:25;26710:33;:::i;:::-;26813:2;26798:18;;26792:25;26762:7;;-1:-1:-1;26840:18:227;26829:30;;26826:50;;;26872:1;26869;26862:12;26826:50;26895:60;26947:7;26938:6;26927:9;26923:22;26895:60;:::i;:::-;26885:70;;;26176:785;;;;;;;:::o;27165:642::-;27296:4;27302:6;27362:11;27349:25;27452:66;27441:8;27425:14;27421:29;27417:102;27397:18;27393:127;27383:155;;27534:1;27531;27524:12;27383:155;27561:33;;27613:20;;;-1:-1:-1;27656:18:227;27645:30;;27642:50;;;27688:1;27685;27678:12;27642:50;27721:4;27709:17;;-1:-1:-1;27772:1:227;27768:14;;;27752;27748:35;27738:46;;27735:66;;;27797:1;27794;27787:12;27812:605;27908:5;27915:6;27975:3;27962:17;28057:66;28046:8;28030:14;28026:29;28022:102;28002:18;27998:127;27988:155;;28139:1;28136;28129:12;27988:155;28167:33;;28271:4;28258:18;;;-1:-1:-1;28219:21:227;;-1:-1:-1;28299:18:227;28288:30;;28285:50;;;28331:1;28328;28321:12;28285:50;28385:6;28382:1;28378:14;28362;28358:35;28351:5;28347:47;28344:67;;;28407:1;28404;28397:12;28422:593;28503:5;28510:6;28570:3;28557:17;28652:66;28641:8;28625:14;28621:29;28617:102;28597:18;28593:127;28583:155;;28734:1;28731;28724:12;28583:155;28762:33;;28866:4;28853:18;;;-1:-1:-1;28814:21:227;;-1:-1:-1;28894:18:227;28883:30;;28880:50;;;28926:1;28923;28916:12;28880:50;28985:4;28977:6;28973:17;28957:14;28953:38;28946:5;28942:50;28939:70;;;29005:1;29002;28995:12;29020:753;29131:6;29126:3;29119:19;29101:3;29157:4;29186:2;29181:3;29177:12;29170:19;;29212:5;29235:1;29245:503;29259:6;29256:1;29253:13;29245:503;;;29336:6;29323:20;29356:33;29381:7;29356:33;:::i;:::-;29427:42;29414:56;29402:69;;29544:4;29509:33;29526:15;;;29509:33;:::i;:::-;29505:44;29491:12;;;29484:66;29573:4;29624:15;;;29611:29;29597:12;;;29590:51;29664:4;29688:12;;;;29723:15;;;;29281:1;29274:9;29245:503;;29778:559;29836:5;29843:6;29903:3;29890:17;29985:66;29974:8;29958:14;29954:29;29950:102;29930:18;29926:127;29916:155;;30067:1;30064;30057:12;29916:155;30095:33;;30199:4;30186:18;;;-1:-1:-1;30147:21:227;;-1:-1:-1;30227:18:227;30216:30;;30213:50;;;30259:1;30256;30249:12;30213:50;30306:6;30290:14;30286:27;30279:5;30275:39;30272:59;;;30327:1;30324;30317:12;30342:325;30430:6;30425:3;30418:19;30482:6;30475:5;30468:4;30463:3;30459:14;30446:43;;30534:1;30527:4;30518:6;30513:3;30509:16;30505:27;30498:38;30400:3;30656:4;30586:66;30581:2;30573:6;30569:15;30565:88;30560:3;30556:98;30552:109;30545:116;;30342:325;;;;:::o;30672:1874::-;30796:6;30791:3;30784:19;30766:3;30822:4;30863:2;30858:3;30854:12;30888:11;30915;30908:18;;30945:1;30935:11;;30986:6;30982:2;30978:15;30971:5;30967:27;31017:5;31040:1;31050:1470;31064:6;31061:1;31058:13;31050:1470;;;31135:5;31129:4;31125:16;31120:3;31113:29;31194:6;31181:20;31280:66;31272:5;31256:14;31252:26;31248:99;31228:18;31224:124;31214:152;;31362:1;31359;31352:12;31214:152;31394:30;;31447:4;31479:21;;31513:33;31479:21;31513:33;:::i;:::-;31585:42;31572:56;31559:70;;31676:95;31754:16;;;31758:7;31676:95;:::i;:::-;31806:2;31801;31795:4;31791:13;31784:25;31844:12;31839:2;31833:4;31829:13;31822:35;31880:3;31870:13;;31916:66;31902:12;31899:84;31896:104;;;31996:1;31993;31986:12;31896:104;32029:21;;;32091:12;32076:13;;;32063:51;32137:19;;;-1:-1:-1;32179:4:227;32234:57;32274:16;;;32278:7;32234:57;:::i;:::-;32196:95;;32345:2;32338:4;32334:2;32330:13;32326:22;32321:2;32315:4;32311:13;32304:45;32370:70;32436:2;32432;32428:11;32412:14;32396;32370:70;:::i;:::-;32498:12;;;;32362:78;-1:-1:-1;;;32463:15:227;;;;-1:-1:-1;;;31086:1:227;31079:9;31050:1470;;;-1:-1:-1;32536:4:227;;30672:1874;-1:-1:-1;;;;;;;;30672:1874:227:o;32551:4333::-;32775:4;32804:2;32833;32822:9;32815:21;32874:3;32863:9;32859:19;32927:6;32914:20;32909:2;32898:9;32894:18;32887:48;32954:4;32977:2;33040;33032:6;33028:15;33015:29;33010:2;32999:9;32995:18;32988:57;33064:3;33128:2;33120:6;33116:15;33103:29;33098:2;33087:9;33083:18;33076:57;33176:93;33265:2;33257:6;33253:15;33245:6;33176:93;:::i;:::-;33307:4;33285:20;;;33278:34;33347:28;;;;33394:3;;33413:18;;;33477:1;33473:20;;;33458:36;;33454:45;;33522:12;33552:1;33562:2871;33576:12;33573:1;33570:19;33562:2871;;;33671:66;33659:9;33651:6;33647:22;33643:95;33638:3;33631:108;33791:6;33778:20;33884:66;33869:12;33853:14;33849:33;33845:106;33825:18;33821:131;33811:159;;33966:1;33963;33956:12;33811:159;33996:37;;34074:19;;34150:14;34146:26;;;34174:66;34142:99;34116:126;;34106:154;;34256:1;34253;34246:12;34106:154;34333:18;;;34288:32;;34379:21;;34413:33;34379:21;34413:33;:::i;:::-;34469:42;34548:16;;;34531:15;;;34524:41;34606:16;;;34593:30;;34636;34593;34636;:::i;:::-;34712:15;;34705:23;34698:4;34686:17;;34679:50;34752:3;;34796:16;;;34783:30;34826:33;34783:30;34826:33;:::i;:::-;34896:16;;34879:15;;;34872:41;34954:16;;;34941:30;34984:33;34941:30;34984:33;:::i;:::-;35055:16;;35049:3;35037:16;;35030:42;35113:16;;;35100:30;35143:33;35100:30;35143:33;:::i;:::-;35213:16;35196:15;;;35189:41;35281:82;35357:4;35344:18;;35348:7;35281:82;:::i;:::-;35401:3;35395;35387:6;35383:16;35376:29;35432:98;35525:3;35517:6;35513:16;35497:14;35481;35432:98;:::i;:::-;35418:112;;;35581:80;35657:2;35648:7;35644:16;35635:7;35581:80;:::i;:::-;35543:118;;;;35724:66;35715:6;35707;35703:19;35699:92;35693:3;35685:6;35681:16;35674:118;35816:88;35897:6;35881:14;35865;35816:88;:::i;:::-;35805:99;;;;35965:2;35958:5;35954:14;35941:28;35936:2;35928:6;35924:15;35917:53;36031:2;36024:5;36020:14;36007:28;36002:2;35994:6;35990:15;35983:53;36087:91;36174:2;36167:5;36163:14;36156:5;36087:91;:::i;:::-;36049:129;;36224:6;36219:3;36215:16;36210:2;36202:6;36198:15;36191:41;36255:98;36349:3;36333:14;36317;36255:98;:::i;:::-;36411:12;;;;36245:108;-1:-1:-1;;;36376:15:227;;;;-1:-1:-1;33604:1:227;33597:9;33562:2871;;;33566:3;;36480:55;36531:2;36523:6;36519:15;36511:6;36480:55;:::i;:::-;36442:93;;;;36600:66;36588:9;36580:6;36576:22;36572:95;36566:3;36555:9;36551:19;36544:124;36690:65;36748:6;36732:14;36716;36690:65;:::i;:::-;36677:78;;;;;;;;36802:9;36795:5;36791:21;36786:2;36775:9;36771:18;36764:49;;;36830:48;36872:5;36864:6;36856;36830:48;:::i;36889:184::-;36941:77;36938:1;36931:88;37038:4;37035:1;37028:15;37062:4;37059:1;37052:15;37078:394;37182:4;37240:11;37227:25;37330:66;37319:8;37303:14;37299:29;37295:102;37275:18;37271:127;37261:155;;37412:1;37409;37402:12;37261:155;37433:33;;;;;37078:394;-1:-1:-1;;37078:394:227:o;37477:384::-;37571:4;37629:11;37616:25;37719:66;37708:8;37692:14;37688:29;37684:102;37664:18;37660:127;37650:155;;37801:1;37798;37791:12;37866:630;37982:4;37988:6;38048:11;38035:25;38138:66;38127:8;38111:14;38107:29;38103:102;38083:18;38079:127;38069:155;;38220:1;38217;38210:12;38069:155;38247:33;;38299:20;;;-1:-1:-1;38342:18:227;38331:30;;38328:50;;;38374:1;38371;38364:12;38328:50;38407:4;38395:17;;-1:-1:-1;38466:4:227;38454:17;;38438:14;38434:38;38424:49;;38421:69;;;38486:1;38483;38476:12;38501:247;38560:6;38613:2;38601:9;38592:7;38588:23;38584:32;38581:52;;;38629:1;38626;38619:12;38581:52;38668:9;38655:23;38687:31;38712:5;38687:31;:::i;38753:1456::-;39218:4;39266:3;39255:9;39251:19;39309:42;39301:6;39297:55;39286:9;39279:74;39372:2;39410:6;39405:2;39394:9;39390:18;39383:34;39453:6;39448:2;39437:9;39433:18;39426:34;39496:3;39491:2;39480:9;39476:18;39469:31;39520:6;39555;39549:13;39586:6;39578;39571:22;39624:3;39613:9;39609:19;39602:26;;39687:3;39677:6;39674:1;39670:14;39659:9;39655:30;39651:40;39637:54;;39726:2;39718:6;39714:15;39747:1;39757:325;39771:6;39768:1;39765:13;39757:325;;;39860:66;39848:9;39840:6;39836:22;39832:95;39827:3;39820:108;39951:51;39995:6;39986;39980:13;39951:51;:::i;:::-;39941:61;-1:-1:-1;40060:12:227;;;;40025:15;;;;39793:1;39786:9;39757:325;;;39761:3;;;;;40131:9;40123:6;40119:22;40113:3;40102:9;40098:19;40091:51;40159:44;40196:6;40188;40159:44;:::i;:::-;40151:52;38753:1456;-1:-1:-1;;;;;;;;38753:1456:227:o;40214:614::-;40343:6;40351;40404:2;40392:9;40383:7;40379:23;40375:32;40372:52;;;40420:1;40417;40410:12;40372:52;40453:9;40447:16;40482:18;40523:2;40515:6;40512:14;40509:34;;;40539:1;40536;40529:12;40509:34;40562:72;40626:7;40617:6;40606:9;40602:22;40562:72;:::i;:::-;40552:82;;40680:2;40669:9;40665:18;40659:25;40643:41;;40709:2;40699:8;40696:16;40693:36;;;40725:1;40722;40715:12;40693:36;;40748:74;40814:7;40803:8;40792:9;40788:24;40748:74;:::i;:::-;40738:84;;;40214:614;;;;;:::o;40833:368::-;41076:6;41065:9;41058:25;41119:2;41114;41103:9;41099:18;41092:30;41039:4;41139:56;41191:2;41180:9;41176:18;41168:6;41139:56;:::i;41206:545::-;41434:4;41463:42;41544:2;41536:6;41532:15;41521:9;41514:34;41596:2;41588:6;41584:15;41579:2;41568:9;41564:18;41557:43;;41636:6;41631:2;41620:9;41616:18;41609:34;41679:3;41674:2;41663:9;41659:18;41652:31;41700:45;41740:3;41729:9;41725:19;41717:6;41700:45;:::i;41756:245::-;41823:6;41876:2;41864:9;41855:7;41851:23;41847:32;41844:52;;;41892:1;41889;41882:12;41844:52;41924:9;41918:16;41943:28;41965:5;41943:28;:::i;42006:184::-;42076:6;42129:2;42117:9;42108:7;42104:23;42100:32;42097:52;;;42145:1;42142;42135:12;42097:52;-1:-1:-1;42168:16:227;;42006:184;-1:-1:-1;42006:184:227:o;42448:613::-;42561:6;42569;42577;42630:2;42618:9;42609:7;42605:23;42601:32;42598:52;;;42646:1;42643;42636:12;42598:52;42678:9;42672:16;42697:31;42722:5;42697:31;:::i;:::-;42797:2;42782:18;;42776:25;42747:5;;-1:-1:-1;42810:33:227;42776:25;42810:33;:::i;:::-;42913:2;42898:18;;42892:25;42862:7;;-1:-1:-1;42940:18:227;42929:30;;42926:50;;;42972:1;42969;42962:12;42926:50;42995:60;43047:7;43038:6;43027:9;43023:22;42995:60;:::i;:::-;42985:70;;;42448:613;;;;;:::o;45660:184::-;45712:77;45709:1;45702:88;45809:4;45806:1;45799:15;45833:4;45830:1;45823:15;46667:287;46796:3;46834:6;46828:13;46850:66;46909:6;46904:3;46897:4;46889:6;46885:17;46850:66;:::i;46959:288::-;47134:6;47123:9;47116:25;47177:2;47172;47161:9;47157:18;47150:30;47097:4;47197:44;47237:2;47226:9;47222:18;47214:6;47197:44;:::i;48202:219::-;48351:2;48340:9;48333:21;48314:4;48371:44;48411:2;48400:9;48396:18;48388:6;48371:44;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256,bytes)": "ae61ec12",
    "initialize((address,(address,bytes,uint256[]),bytes))": "98da8d6a",
    "initialize(bytes)": "439fab91",
    "onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b",
    "sI9r()": "71c1dea7",
    "sI9rDispatch()": "89448c3a",
    "sI9rStore()": "61bb39e4",
    "sOrderBook()": "886d1650",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"internalType\":\"struct DeployerDiscoverableMetaV3ConstructionConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"badInitiator\",\"type\":\"address\"}],\"name\":\"BadInitiator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"badLender\",\"type\":\"address\"}],\"name\":\"BadLender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FlashLoanFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializeSignatureFn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"MinimumOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOrders\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonZeroBeforeArbInputs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonZeroBeforeArbStack\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"unmeta\",\"type\":\"bytes\"}],\"name\":\"NotRainMetaV1\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedMetaHash\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV3\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV3\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct OrderBookV3FlashBorrowerConfigV2\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subject\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"MetaV1\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minimumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumIORatio\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"handleIO\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"contract IInterpreterV2\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"internalType\":\"struct EvaluableV2\",\"name\":\"evaluable\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validInputs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validOutputs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderV2\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"inputIOIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputIOIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"context\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedContextV1[]\",\"name\":\"signedContext\",\"type\":\"tuple[]\"}],\"internalType\":\"struct TakeOrderConfigV2[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeOrdersConfigV2\",\"name\":\"takeOrders\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"minimumSenderOutput\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"exchangeData\",\"type\":\"bytes\"}],\"name\":\"arb\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV3\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV3\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderBookV3FlashBorrowerConfigV2\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9r\",\"outputs\":[{\"internalType\":\"contract IInterpreterV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rDispatch\",\"outputs\":[{\"internalType\":\"EncodedDispatch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rStore\",\"outputs\":[{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sOrderBook\",\"outputs\":[{\"internalType\":\"contract IOrderBookV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BadInitiator(address)\":[{\"params\":{\"badInitiator\":\"The untrusted initiator of the flash loan.\"}}],\"BadLender(address)\":[{\"params\":{\"badLender\":\"The untrusted lender calling `onFlashLoan`.\"}}],\"MinimumOutput(uint256,uint256)\":[{\"params\":{\"actual\":\"The actual output that would be received by the sender.\",\"minimum\":\"The minimum output expected by the sender.\"}}],\"NotRainMetaV1(bytes)\":[{\"params\":{\"unmeta\":\"the bytes that are not meta.\"}}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"params\":{\"actualHash\":\"The hash of the metadata seen by the `IMetaV1` contract.\",\"expectedHash\":\"The hash expected by the `IMetaV1` contract.\"}}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetaV1(address,uint256,bytes)\":{\"params\":{\"meta\":\"Rain metadata V1 compliant metadata bytes. https://github.com/rainprotocol/specs/blob/main/metadata-v1.md\",\"sender\":\"The msg.sender.\",\"subject\":\"The entity that the metadata is about. MAY be the address of the emitting contract (as `uint256`) OR anything else. The interpretation of the subject is context specific, so will often be a hash of some data/thing that this metadata is about.\"}}},\"kind\":\"dev\",\"methods\":{\"arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256,bytes)\":{\"params\":{\"exchangeData\":\"Arbitrary bytes that will be passed to `_exchange` after the flash loan is taken. The inheriting contract is responsible for decoding this data and defining how it controls interactions with the external liquidity. For example, `GenericPoolOrderBookV3FlashBorrower` uses this data as a literal encoded external call.\",\"minimumSenderOutput\":\"The minimum output that must be sent to the sender by the end of the arb call. This, in combination with the orderbook's own asset handling, is expected to REPLACE the standard slippage protection that would be provided by a DEX. The sender is expected to calculate absolute values based on prevailing conditions such as gas price and the risk of holding the assets any arb profit is denominated in.\",\"takeOrders\":\"As per `IOrderBookV3.takeOrders`.\"}},\"initialize(bytes)\":{\"details\":\"The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.\",\"params\":{\"data\":\"The initialization data.\"},\"returns\":{\"_0\":\"keccak256(\\\"ICloneableV2.initialize\\\") if successful.\"}},\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"GenericPoolOrderBookV3FlashBorrower Implements the OrderBookV3FlashBorrower interface for a external liquidity source that behaves vaguely like a standard AMM. The `exchangeData` from `arb` is decoded into a spender, pool and callData. The `callData` is literally the encoded function call to the pool. This allows the `arb` caller to process a trade against any liquidity source that can swap tokens within a single function call. The `spender` is the address that will be approved to spend the input token on `takeOrders`, which is almost always going to be the pool itself. If you are unsure, simply set it to the pool address.\",\"version\":1},\"userdoc\":{\"errors\":{\"BadInitiator(address)\":[{\"notice\":\"Thrown when the initiator is not the order book.\"}],\"BadLender(address)\":[{\"notice\":\"Thrown when the lender is not the trusted `OrderBook`.\"}],\"FlashLoanFailed()\":[{\"notice\":\"Thrown when the flash loan fails somehow.\"}],\"InitializeSignatureFn()\":[{\"notice\":\"Overloaded initialize function MUST revert with this error.\"}],\"Initializing()\":[{\"notice\":\"Thrown when calling functions while the contract is still initializing.\"}],\"InvalidSignature(uint256)\":[{\"notice\":\"Thrown when the ith signature from a list of signed contexts is invalid.\"}],\"MinimumOutput(uint256,uint256)\":[{\"notice\":\"Thrown when the minimum output for the sender is not met after the arb.\"}],\"NoOrders()\":[{\"notice\":\"Thrown when take orders is called with no orders.\"}],\"NonZeroBeforeArbInputs()\":[{\"notice\":\"Thrown when \\\"Before arb\\\" expects inputs.\"}],\"NonZeroBeforeArbStack()\":[{\"notice\":\"Thrown when the stack is not empty after the access control dispatch.\"}],\"NotRainMetaV1(bytes)\":[{\"notice\":\"Thrown when some bytes are expected to be rain meta and are not.\"}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when hashed metadata does NOT match the expected hash.\"}]},\"events\":{\"Initialize(address,(address,(address,bytes,uint256[]),bytes))\":{\"notice\":\"Emitted when the contract is initialized. Contains the OrderBookFlashBorrowerConfig struct to ensure the type appears in the ABI.\"},\"MetaV1(address,uint256,bytes)\":{\"notice\":\"An onchain wrapper to carry arbitrary Rain metadata. Assigns the sender to the metadata so that tooling can easily drop/ignore data from unknown sources. As metadata is about something, the subject MUST be provided.\"}},\"kind\":\"user\",\"methods\":{\"arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256,bytes)\":{\"notice\":\"Primary function to process arbitrage opportunities. Firstly the access gate is evaluated to ensure the sender is allowed to submit arbitrage. If there is no access control the sender should expect to be front run on the arb for any sufficiently profitable opportunity. This may be desirable in some cases, as the sender may simply want to be clearing the orderbook and they are expecting profit/utility from the orderbook strategies themselves somehow. Secondly the flash loan is taken and the `_exchange` hook is called to allow the inheriting contract to convert the flash loaned assets into the assets required to fill the orders. Finally the orders are taken and the remaining assets are sent to the sender.\"},\"initialize((address,(address,bytes,uint256[]),bytes))\":{\"notice\":\"Type hints for the input encoding for the `initialize` function. Reverts ALWAYS with `InitializeSignatureFn` as per ICloneableV2.\"},\"initialize(bytes)\":{\"notice\":\"Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \\\"ICloneableV2.initialize\\\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`.\"},\"sI9r()\":{\"notice\":\"The interpreter that will eval access control to `arb`.\"},\"sI9rDispatch()\":{\"notice\":\"The encoded dispatch that will run for access control to `arb`.\"},\"sI9rStore()\":{\"notice\":\"The associated store for the interpreter.\"},\"sOrderBook()\":{\"notice\":\"`OrderBook` contract to lend and arb against.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/concrete/GenericPoolOrderBookV3FlashBorrower.sol\":\"GenericPoolOrderBookV3FlashBorrower\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":axelar-gmp-sdk-solidity/=lib/sushixswap-v2/lib/axelar-gmp-sdk-solidity/\",\":bitwise/=lib/rain.interpreter/src/lib/bitwise/\",\":bytecode/=lib/rain.interpreter/src/lib/bytecode/\",\":caller/=lib/rain.interpreter/src/lib/caller/\",\":compile/=lib/rain.interpreter/src/lib/compile/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eval/=lib/rain.interpreter/src/lib/eval/\",\":extern/=lib/rain.interpreter/src/lib/extern/\",\":forge-gas-snapshot/=lib/sushixswap-v2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":integrity/=lib/rain.interpreter/src/lib/integrity/\",\":ns/=lib/rain.interpreter/src/lib/ns/\",\":op/=lib/rain.interpreter/src/lib/op/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":parse/=lib/rain.interpreter/src/lib/parse/\",\":prb-math/=lib/rain.interpreter/lib/prb-math/src/\",\":prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/\",\":rain.datacontract/=lib/rain.interpreter/lib/rain.datacontract/src/\",\":rain.erc1820/=lib/rain.erc1820/src/\",\":rain.extrospection/=lib/rain.factory/lib/rain.extrospection/\",\":rain.factory/=lib/rain.factory/\",\":rain.interpreter/=lib/rain.interpreter/\",\":rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/\",\":rain.lib.memkv/=lib/rain.lib.memkv/src/\",\":rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/\",\":rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/\",\":rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.metadata/=lib/rain.metadata/src/\",\":rain.solmem/=lib/rain.solmem/src/\",\":sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/\",\":state/=lib/rain.interpreter/src/lib/state/\",\":sushixswap-v2/=lib/sushixswap-v2/\",\":uniswap/=lib/rain.interpreter/src/lib/uniswap/\",\":v2-core/=lib/rain.interpreter/lib/v2-core/contracts/\",\":v2-periphery/=lib/rain.interpreter/lib/v2-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/rain.factory/src/interface/ICloneableV2.sol\":{\"keccak256\":\"0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234\",\"dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP\"]},\"lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV3.sol\":{\"keccak256\":\"0xe333361bf503def41107d2e38acb421f11766e636ffe0728fef933097c66857b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://43b69e65c41a2cb13304d8d8b7fe31ee8d1cb55708b6cf60b799552bb09b4c1b\",\"dweb:/ipfs/QmXy4CDRjBVMezbH72uTkYJNrt6yQLVnjNkheD5773MKrn\"]},\"lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol\":{\"keccak256\":\"0xd6f76317b41d50fb6b3fbfcffa5fa8b4a3bb547a17bf52244f67f5c364fcd6bc\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://e7a35981e397564e85c53fab7b46bf8118328cfdb729264f946f7826c205f813\",\"dweb:/ipfs/QmfXnGW5RTDgqoMkp3k4E3eWBBS7hXWzmhw56XcfvB766E\"]},\"lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol\":{\"keccak256\":\"0x8fe347844f029b84087daae66742fb10aa9e44f94ac90af696318188aa922c19\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5eea5d2116f643db3ede89fd2dc3a5d293e35aec1d62a9daf6531f88a9656fb3\",\"dweb:/ipfs/Qmdys5MsEjgpXokb5FhMg96SYB6Bmf3frtVRvX74WrbKTc\"]},\"lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV1.sol\":{\"keccak256\":\"0x5e903fdb445cc16e63bb86d53eeb49172e2472cd7344a762c6d85684aec8251d\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5dab81bd2f092f392afbb295525c3602246ab5620de7630e84dab37b955f7e4d\",\"dweb:/ipfs/QmaGiCBSf2KjwjpVtJwG4k6iGqPKYs8dq6gkUYo9EFWkTg\"]},\"lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV2.sol\":{\"keccak256\":\"0xc98ea86cd5d633d01b4136258bc0026b3d4bade652f831b482867e97df0e5365\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d412df06ddccb1be19f6e962872297395546c591ccd42ccad91559aa0e5ee214\",\"dweb:/ipfs/QmebpvwxNtv9XNoKi9y8Ldqhzy3GWY5kwoSNDQL2vJHrbg\"]},\"lib/rain.interpreter/src/interface/deprecated/IInterpreterCallerV1.sol\":{\"keccak256\":\"0xdfccb8ca0e4673ac476d1ccfcd1ffa69300f910c41352cc51c3408a58bf095b2\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9a44b64873ed13c9c7d964e1d3b66dc2e80bb457563def325551bf796db8791c\",\"dweb:/ipfs/QmWTfH9qtwki5DFRAri1ouV7NVZ1mQzraz9eRumNEbcSNU\"]},\"lib/rain.interpreter/src/interface/deprecated/IInterpreterV1.sol\":{\"keccak256\":\"0xb58d3b75312da70f4fb7896dc07d8a3d77de0638d169db4acf6c246ddab0f518\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://970029663ca4321640ca0d577213e938046a3fe2995b580f9f7c8f0bfa34a3f3\",\"dweb:/ipfs/QmeZgH1RKqLgDh56FWQATBy8BCt6CyGiCuamrKY22QyCRz\"]},\"lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV3.sol\":{\"keccak256\":\"0x408f6c6fa3766cf7d24ffe1c98eb57b77af5bfbe946f266fd7a3b800de4ddb79\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://186b12c32030d2b7e4e81f1a11ac7c7a63b0f14b7dc1b6df50cbd2be7459bb69\",\"dweb:/ipfs/QmXRV3DGCoQtVxufMtiuXLvN3GF6YNTLyPLVVeoLL53sMg\"]},\"lib/rain.interpreter/src/interface/unstable/IInterpreterV2.sol\":{\"keccak256\":\"0xcf050192ba12f7eb129e0262cee4920cbd65bb331e7487cfc21151882464be50\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://10ff84f0acf532c5e11e69b7ab41c739ce4ad0f9193d347b5cc4a34f158774a8\",\"dweb:/ipfs/QmRvfB8jCdCwDdLrLHQh8yLLLv2eowpwjfwXgy2u629xew\"]},\"lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol\":{\"keccak256\":\"0xac53e84486e843acbabd6ba258550ba947c35c33a570e4615e57ff15a77d57e0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://e07c2907da9323f1d6d5b6557e87a904fdf1be3768ad64bb59655d060128bee4\",\"dweb:/ipfs/QmbukDZevfHYZ27yPqfmG1UFw8TsGbCRyH6Uc536QrtgHK\"]},\"lib/rain.interpreter/src/lib/caller/LibContext.sol\":{\"keccak256\":\"0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05\",\"dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF\"]},\"lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol\":{\"keccak256\":\"0x3949de1f4537cd262d54a06a64028343793c6110611c7b4967de3153de4b3b55\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9bdd88ec9a7dc671c33bf73e9fe1801bcf7d4a2eb4e6308186f8a7adc4b712dc\",\"dweb:/ipfs/Qme27jUCKETZ9ASPqVbyiQPGTj7ifgZdmRZcsJqgm5hkEW\"]},\"lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol\":{\"keccak256\":\"0x4f011d07a8fa4b24efccb02022bff68730d53c852424817a4ca3cfc134bbc455\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd0ffd2bdc5e2af1f2f67938d70e2ae694a0285a4fae4818530aa86edce400b1\",\"dweb:/ipfs/QmQAcoLvHatMANZpm5aP1vCaVm3xp1tF5MnZjQiX7AfiRe\"]},\"lib/rain.interpreter/src/lib/caller/LibEvaluable.sol\":{\"keccak256\":\"0xc3e649c4d698822ae81c4ec0814d2dd506e601795914a7af0883c5c40678ab21\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://901d9258689585e338aeb648d77ca083766c423dabc78db46285b3fb69fb12d1\",\"dweb:/ipfs/QmPVw7yuoDuqWorxpM7oWPhjSGRXhcEeu1dXQrjBDvpfrn\"]},\"lib/rain.interpreter/src/lib/ns/LibNamespace.sol\":{\"keccak256\":\"0x29574214b0e499343ea999d676764a18618485dece1cedc732ab73e779302153\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4de0c0b4d297bbe286bf2e6ec8ba38ef3ea93811826d910c00381df86e54661f\",\"dweb:/ipfs/QmdJv5EgqtuRo2iTdChUE5hjhJgtBhBzztYqPUXevU6J5y\"]},\"lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol\":{\"keccak256\":\"0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24\",\"dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35\"]},\"lib/rain.metadata/src/IMetaV1.sol\":{\"keccak256\":\"0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3\",\"dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs\"]},\"lib/rain.metadata/src/LibMeta.sol\":{\"keccak256\":\"0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d\",\"dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU\"]},\"lib/rain.solmem/src/lib/LibBytes.sol\":{\"keccak256\":\"0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353\",\"dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk\"]},\"lib/rain.solmem/src/lib/LibMemCpy.sol\":{\"keccak256\":\"0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102\",\"dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe\"]},\"lib/rain.solmem/src/lib/LibPointer.sol\":{\"keccak256\":\"0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7\",\"dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG\"]},\"lib/rain.solmem/src/lib/LibUint256Array.sol\":{\"keccak256\":\"0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6\",\"dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL\"]},\"src/abstract/OrderBookV3ArbCommon.sol\":{\"keccak256\":\"0xd639006096b170c49ffa6299d47879c244447862478823ca35e2aeb819785860\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://c39adbe01adbb7cc84d6375b70d090c45fc30b6ae9cbc2ecdb1289a33a524acf\",\"dweb:/ipfs/QmZsKJXbSFtdEbnTD4d8c4KJJjurwBectuCKcdiaBsakyW\"]},\"src/abstract/OrderBookV3FlashBorrower.sol\":{\"keccak256\":\"0x479a472835b7d6a72eec7c3d6186b899e2b13274e4082068a67489b720cc8072\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://031b91b3bd2cc425deee80a08e1ee735a973f05fd90e9856ce846c9cf74d6981\",\"dweb:/ipfs/QmQxwjUbaWsD5N382YyADoV5vYFAgC82mbKwytMqKJBQr3\"]},\"src/concrete/GenericPoolOrderBookV3FlashBorrower.sol\":{\"keccak256\":\"0xdf7685d6de0d9da62ef9db604b6748bd7b786a2a1537d0a5fca08073e99168a9\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://870d3ee99eaa46391db95fe51a3c5130c67a22be2dbf2ccdc8ef673de6cb8f14\",\"dweb:/ipfs/QmWXDZ6QNaxcZdDv2jQ5B2qUcL1DSmJGJgtU7fBcrkSZM6\"]},\"src/interface/deprecated/IOrderBookV2.sol\":{\"keccak256\":\"0xc4f99b2e74b48063eb0383184446e5ad65aa158e12519949e28bed62b49d88fb\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://1a2cdc0410026ffc686d4100505564a9dff28b2364cadfeb75b3eea4dde841dc\",\"dweb:/ipfs/QmXC1QtN2Go2RLH8bK9GrtsxfMLY5eKaksW53utMTaNuR8\"]},\"src/interface/ierc3156/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c\",\"dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB\"]},\"src/interface/ierc3156/IERC3156FlashLender.sol\":{\"keccak256\":\"0x1c14bc32c7483a68f5cb3ff65f64a8a32b279472525340033ce8e0b462fd1e72\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://e25cbc0c4512d737fd9fb32f30af0f9bcccd10f28870c927057f6bcaac213dd4\",\"dweb:/ipfs/Qmey7YDkCTMXgoRDVHUbHRH6f4MJz6mBdfucp7v7bVy1ie\"]},\"src/interface/unstable/IOrderBookV3.sol\":{\"keccak256\":\"0x1aba9fbf5e9c2f410a2c24d56361718ac4ec6d62431ee07107bb83660740b6a1\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://12e803376fce4b36bcb7c228faa2aa5360b85688539485212f129b3467e23852\",\"dweb:/ipfs/QmV7oBCy2idxp8pY9yhGGcqbdpfVcqgpRvpJ1wYDNg7rZT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct DeployerDiscoverableMetaV3ConstructionConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "meta",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "badInitiator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BadInitiator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "badLender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BadLender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FlashLoanFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializeSignatureFn"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializing"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minimum",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MinimumOutput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoOrders"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonZeroBeforeArbInputs"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonZeroBeforeArbStack"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "unmeta",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "NotRainMetaV1"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetaHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OrderBookV3FlashBorrowerConfigV2",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV3",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV3",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "subject",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaV1",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct TakeOrdersConfigV2",
              "name": "takeOrders",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "minimumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumIORatio",
                  "type": "uint256"
                },
                {
                  "internalType": "struct TakeOrderConfigV2[]",
                  "name": "orders",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct OrderV2",
                      "name": "order",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "owner",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "handleIO",
                          "type": "bool"
                        },
                        {
                          "internalType": "struct EvaluableV2",
                          "name": "evaluable",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "contract IInterpreterV2",
                              "name": "interpreter",
                              "type": "address"
                            },
                            {
                              "internalType": "contract IInterpreterStoreV1",
                              "name": "store",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "expression",
                              "type": "address"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validInputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validOutputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SignedContextV1[]",
                      "name": "signedContext",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "signer",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "context",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "bytes",
                          "name": "signature",
                          "type": "bytes"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "minimumSenderOutput",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "exchangeData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "arb"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderBookV3FlashBorrowerConfigV2",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV3",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV3",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onFlashLoan",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9r",
          "outputs": [
            {
              "internalType": "contract IInterpreterV2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rDispatch",
          "outputs": [
            {
              "internalType": "EncodedDispatch",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rStore",
          "outputs": [
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sOrderBook",
          "outputs": [
            {
              "internalType": "contract IOrderBookV3",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256,bytes)": {
            "params": {
              "exchangeData": "Arbitrary bytes that will be passed to `_exchange` after the flash loan is taken. The inheriting contract is responsible for decoding this data and defining how it controls interactions with the external liquidity. For example, `GenericPoolOrderBookV3FlashBorrower` uses this data as a literal encoded external call.",
              "minimumSenderOutput": "The minimum output that must be sent to the sender by the end of the arb call. This, in combination with the orderbook's own asset handling, is expected to REPLACE the standard slippage protection that would be provided by a DEX. The sender is expected to calculate absolute values based on prevailing conditions such as gas price and the risk of holding the assets any arb profit is denominated in.",
              "takeOrders": "As per `IOrderBookV3.takeOrders`."
            }
          },
          "initialize(bytes)": {
            "details": "The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.",
            "params": {
              "data": "The initialization data."
            },
            "returns": {
              "_0": "keccak256(\"ICloneableV2.initialize\") if successful."
            }
          },
          "onFlashLoan(address,address,uint256,uint256,bytes)": {
            "details": "Receive a flash loan.",
            "params": {
              "amount": "The amount of tokens lent.",
              "data": "Arbitrary data structure, intended to contain user-defined parameters.",
              "fee": "The additional amount of tokens to repay.",
              "initiator": "The initiator of the loan.",
              "token": "The loan currency."
            },
            "returns": {
              "_0": "The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256,bytes)": {
            "notice": "Primary function to process arbitrage opportunities. Firstly the access gate is evaluated to ensure the sender is allowed to submit arbitrage. If there is no access control the sender should expect to be front run on the arb for any sufficiently profitable opportunity. This may be desirable in some cases, as the sender may simply want to be clearing the orderbook and they are expecting profit/utility from the orderbook strategies themselves somehow. Secondly the flash loan is taken and the `_exchange` hook is called to allow the inheriting contract to convert the flash loaned assets into the assets required to fill the orders. Finally the orders are taken and the remaining assets are sent to the sender."
          },
          "initialize((address,(address,bytes,uint256[]),bytes))": {
            "notice": "Type hints for the input encoding for the `initialize` function. Reverts ALWAYS with `InitializeSignatureFn` as per ICloneableV2."
          },
          "initialize(bytes)": {
            "notice": "Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \"ICloneableV2.initialize\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`."
          },
          "sI9r()": {
            "notice": "The interpreter that will eval access control to `arb`."
          },
          "sI9rDispatch()": {
            "notice": "The encoded dispatch that will run for access control to `arb`."
          },
          "sI9rStore()": {
            "notice": "The associated store for the interpreter."
          },
          "sOrderBook()": {
            "notice": "`OrderBook` contract to lend and arb against."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "axelar-gmp-sdk-solidity/=lib/sushixswap-v2/lib/axelar-gmp-sdk-solidity/",
        "bitwise/=lib/rain.interpreter/src/lib/bitwise/",
        "bytecode/=lib/rain.interpreter/src/lib/bytecode/",
        "caller/=lib/rain.interpreter/src/lib/caller/",
        "compile/=lib/rain.interpreter/src/lib/compile/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "eval/=lib/rain.interpreter/src/lib/eval/",
        "extern/=lib/rain.interpreter/src/lib/extern/",
        "forge-gas-snapshot/=lib/sushixswap-v2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "integrity/=lib/rain.interpreter/src/lib/integrity/",
        "ns/=lib/rain.interpreter/src/lib/ns/",
        "op/=lib/rain.interpreter/src/lib/op/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "parse/=lib/rain.interpreter/src/lib/parse/",
        "prb-math/=lib/rain.interpreter/lib/prb-math/src/",
        "prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/",
        "rain.datacontract/=lib/rain.interpreter/lib/rain.datacontract/src/",
        "rain.erc1820/=lib/rain.erc1820/src/",
        "rain.extrospection/=lib/rain.factory/lib/rain.extrospection/",
        "rain.factory/=lib/rain.factory/",
        "rain.interpreter/=lib/rain.interpreter/",
        "rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/",
        "rain.lib.memkv/=lib/rain.lib.memkv/src/",
        "rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/",
        "rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/",
        "rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/",
        "rain.metadata/=lib/rain.metadata/src/",
        "rain.solmem/=lib/rain.solmem/src/",
        "sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/",
        "state/=lib/rain.interpreter/src/lib/state/",
        "sushixswap-v2/=lib/sushixswap-v2/",
        "uniswap/=lib/rain.interpreter/src/lib/uniswap/",
        "v2-core/=lib/rain.interpreter/lib/v2-core/contracts/",
        "v2-periphery/=lib/rain.interpreter/lib/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/concrete/GenericPoolOrderBookV3FlashBorrower.sol": "GenericPoolOrderBookV3FlashBorrower"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80",
        "urls": [
          "bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d",
          "dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/src/interface/ICloneableV2.sol": {
        "keccak256": "0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80",
        "urls": [
          "bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234",
          "dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV3.sol": {
        "keccak256": "0xe333361bf503def41107d2e38acb421f11766e636ffe0728fef933097c66857b",
        "urls": [
          "bzz-raw://43b69e65c41a2cb13304d8d8b7fe31ee8d1cb55708b6cf60b799552bb09b4c1b",
          "dweb:/ipfs/QmXy4CDRjBVMezbH72uTkYJNrt6yQLVnjNkheD5773MKrn"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol": {
        "keccak256": "0xd6f76317b41d50fb6b3fbfcffa5fa8b4a3bb547a17bf52244f67f5c364fcd6bc",
        "urls": [
          "bzz-raw://e7a35981e397564e85c53fab7b46bf8118328cfdb729264f946f7826c205f813",
          "dweb:/ipfs/QmfXnGW5RTDgqoMkp3k4E3eWBBS7hXWzmhw56XcfvB766E"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol": {
        "keccak256": "0x8fe347844f029b84087daae66742fb10aa9e44f94ac90af696318188aa922c19",
        "urls": [
          "bzz-raw://5eea5d2116f643db3ede89fd2dc3a5d293e35aec1d62a9daf6531f88a9656fb3",
          "dweb:/ipfs/Qmdys5MsEjgpXokb5FhMg96SYB6Bmf3frtVRvX74WrbKTc"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV1.sol": {
        "keccak256": "0x5e903fdb445cc16e63bb86d53eeb49172e2472cd7344a762c6d85684aec8251d",
        "urls": [
          "bzz-raw://5dab81bd2f092f392afbb295525c3602246ab5620de7630e84dab37b955f7e4d",
          "dweb:/ipfs/QmaGiCBSf2KjwjpVtJwG4k6iGqPKYs8dq6gkUYo9EFWkTg"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV2.sol": {
        "keccak256": "0xc98ea86cd5d633d01b4136258bc0026b3d4bade652f831b482867e97df0e5365",
        "urls": [
          "bzz-raw://d412df06ddccb1be19f6e962872297395546c591ccd42ccad91559aa0e5ee214",
          "dweb:/ipfs/QmebpvwxNtv9XNoKi9y8Ldqhzy3GWY5kwoSNDQL2vJHrbg"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IInterpreterCallerV1.sol": {
        "keccak256": "0xdfccb8ca0e4673ac476d1ccfcd1ffa69300f910c41352cc51c3408a58bf095b2",
        "urls": [
          "bzz-raw://9a44b64873ed13c9c7d964e1d3b66dc2e80bb457563def325551bf796db8791c",
          "dweb:/ipfs/QmWTfH9qtwki5DFRAri1ouV7NVZ1mQzraz9eRumNEbcSNU"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IInterpreterV1.sol": {
        "keccak256": "0xb58d3b75312da70f4fb7896dc07d8a3d77de0638d169db4acf6c246ddab0f518",
        "urls": [
          "bzz-raw://970029663ca4321640ca0d577213e938046a3fe2995b580f9f7c8f0bfa34a3f3",
          "dweb:/ipfs/QmeZgH1RKqLgDh56FWQATBy8BCt6CyGiCuamrKY22QyCRz"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV3.sol": {
        "keccak256": "0x408f6c6fa3766cf7d24ffe1c98eb57b77af5bfbe946f266fd7a3b800de4ddb79",
        "urls": [
          "bzz-raw://186b12c32030d2b7e4e81f1a11ac7c7a63b0f14b7dc1b6df50cbd2be7459bb69",
          "dweb:/ipfs/QmXRV3DGCoQtVxufMtiuXLvN3GF6YNTLyPLVVeoLL53sMg"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/unstable/IInterpreterV2.sol": {
        "keccak256": "0xcf050192ba12f7eb129e0262cee4920cbd65bb331e7487cfc21151882464be50",
        "urls": [
          "bzz-raw://10ff84f0acf532c5e11e69b7ab41c739ce4ad0f9193d347b5cc4a34f158774a8",
          "dweb:/ipfs/QmRvfB8jCdCwDdLrLHQh8yLLLv2eowpwjfwXgy2u629xew"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol": {
        "keccak256": "0xac53e84486e843acbabd6ba258550ba947c35c33a570e4615e57ff15a77d57e0",
        "urls": [
          "bzz-raw://e07c2907da9323f1d6d5b6557e87a904fdf1be3768ad64bb59655d060128bee4",
          "dweb:/ipfs/QmbukDZevfHYZ27yPqfmG1UFw8TsGbCRyH6Uc536QrtgHK"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibContext.sol": {
        "keccak256": "0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a",
        "urls": [
          "bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05",
          "dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol": {
        "keccak256": "0x3949de1f4537cd262d54a06a64028343793c6110611c7b4967de3153de4b3b55",
        "urls": [
          "bzz-raw://9bdd88ec9a7dc671c33bf73e9fe1801bcf7d4a2eb4e6308186f8a7adc4b712dc",
          "dweb:/ipfs/Qme27jUCKETZ9ASPqVbyiQPGTj7ifgZdmRZcsJqgm5hkEW"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol": {
        "keccak256": "0x4f011d07a8fa4b24efccb02022bff68730d53c852424817a4ca3cfc134bbc455",
        "urls": [
          "bzz-raw://fd0ffd2bdc5e2af1f2f67938d70e2ae694a0285a4fae4818530aa86edce400b1",
          "dweb:/ipfs/QmQAcoLvHatMANZpm5aP1vCaVm3xp1tF5MnZjQiX7AfiRe"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEvaluable.sol": {
        "keccak256": "0xc3e649c4d698822ae81c4ec0814d2dd506e601795914a7af0883c5c40678ab21",
        "urls": [
          "bzz-raw://901d9258689585e338aeb648d77ca083766c423dabc78db46285b3fb69fb12d1",
          "dweb:/ipfs/QmPVw7yuoDuqWorxpM7oWPhjSGRXhcEeu1dXQrjBDvpfrn"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/ns/LibNamespace.sol": {
        "keccak256": "0x29574214b0e499343ea999d676764a18618485dece1cedc732ab73e779302153",
        "urls": [
          "bzz-raw://4de0c0b4d297bbe286bf2e6ec8ba38ef3ea93811826d910c00381df86e54661f",
          "dweb:/ipfs/QmdJv5EgqtuRo2iTdChUE5hjhJgtBhBzztYqPUXevU6J5y"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol": {
        "keccak256": "0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8",
        "urls": [
          "bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24",
          "dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/IMetaV1.sol": {
        "keccak256": "0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843",
        "urls": [
          "bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3",
          "dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/LibMeta.sol": {
        "keccak256": "0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285",
        "urls": [
          "bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d",
          "dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibBytes.sol": {
        "keccak256": "0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625",
        "urls": [
          "bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353",
          "dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibMemCpy.sol": {
        "keccak256": "0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406",
        "urls": [
          "bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102",
          "dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibPointer.sol": {
        "keccak256": "0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7",
        "urls": [
          "bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7",
          "dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibUint256Array.sol": {
        "keccak256": "0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde",
        "urls": [
          "bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6",
          "dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL"
        ],
        "license": "CAL"
      },
      "src/abstract/OrderBookV3ArbCommon.sol": {
        "keccak256": "0xd639006096b170c49ffa6299d47879c244447862478823ca35e2aeb819785860",
        "urls": [
          "bzz-raw://c39adbe01adbb7cc84d6375b70d090c45fc30b6ae9cbc2ecdb1289a33a524acf",
          "dweb:/ipfs/QmZsKJXbSFtdEbnTD4d8c4KJJjurwBectuCKcdiaBsakyW"
        ],
        "license": "CAL"
      },
      "src/abstract/OrderBookV3FlashBorrower.sol": {
        "keccak256": "0x479a472835b7d6a72eec7c3d6186b899e2b13274e4082068a67489b720cc8072",
        "urls": [
          "bzz-raw://031b91b3bd2cc425deee80a08e1ee735a973f05fd90e9856ce846c9cf74d6981",
          "dweb:/ipfs/QmQxwjUbaWsD5N382YyADoV5vYFAgC82mbKwytMqKJBQr3"
        ],
        "license": "CAL"
      },
      "src/concrete/GenericPoolOrderBookV3FlashBorrower.sol": {
        "keccak256": "0xdf7685d6de0d9da62ef9db604b6748bd7b786a2a1537d0a5fca08073e99168a9",
        "urls": [
          "bzz-raw://870d3ee99eaa46391db95fe51a3c5130c67a22be2dbf2ccdc8ef673de6cb8f14",
          "dweb:/ipfs/QmWXDZ6QNaxcZdDv2jQ5B2qUcL1DSmJGJgtU7fBcrkSZM6"
        ],
        "license": "CAL"
      },
      "src/interface/deprecated/IOrderBookV2.sol": {
        "keccak256": "0xc4f99b2e74b48063eb0383184446e5ad65aa158e12519949e28bed62b49d88fb",
        "urls": [
          "bzz-raw://1a2cdc0410026ffc686d4100505564a9dff28b2364cadfeb75b3eea4dde841dc",
          "dweb:/ipfs/QmXC1QtN2Go2RLH8bK9GrtsxfMLY5eKaksW53utMTaNuR8"
        ],
        "license": "CAL"
      },
      "src/interface/ierc3156/IERC3156FlashBorrower.sol": {
        "keccak256": "0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7",
        "urls": [
          "bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c",
          "dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB"
        ],
        "license": "CC0"
      },
      "src/interface/ierc3156/IERC3156FlashLender.sol": {
        "keccak256": "0x1c14bc32c7483a68f5cb3ff65f64a8a32b279472525340033ce8e0b462fd1e72",
        "urls": [
          "bzz-raw://e25cbc0c4512d737fd9fb32f30af0f9bcccd10f28870c927057f6bcaac213dd4",
          "dweb:/ipfs/Qmey7YDkCTMXgoRDVHUbHRH6f4MJz6mBdfucp7v7bVy1ie"
        ],
        "license": "CC0"
      },
      "src/interface/unstable/IOrderBookV3.sol": {
        "keccak256": "0x1aba9fbf5e9c2f410a2c24d56361718ac4ec6d62431ee07107bb83660740b6a1",
        "urls": [
          "bzz-raw://12e803376fce4b36bcb7c228faa2aa5360b85688539485212f129b3467e23852",
          "dweb:/ipfs/QmV7oBCy2idxp8pY9yhGGcqbdpfVcqgpRvpJ1wYDNg7rZT"
        ],
        "license": "CAL"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/concrete/GenericPoolOrderBookV3FlashBorrower.sol",
    "id": 75813,
    "exportedSymbols": {
      "Address": [
        45259
      ],
      "BEFORE_ARB_MAX_OUTPUTS": [
        74839
      ],
      "BEFORE_ARB_MIN_INPUTS": [
        74831
      ],
      "BEFORE_ARB_MIN_OUTPUTS": [
        74835
      ],
      "BEFORE_ARB_SOURCE_INDEX": [
        74827
      ],
      "BadInitiator": [
        74802
      ],
      "BadLender": [
        74156
      ],
      "CALLER_META_HASH": [
        75695
      ],
      "DEFAULT_STATE_NAMESPACE": [
        55887
      ],
      "DeployerDiscoverableMetaV3": [
        54788
      ],
      "DeployerDiscoverableMetaV3ConstructionConfig": [
        54743
      ],
      "ERC165": [
        46054
      ],
      "EncodedDispatch": [
        55875
      ],
      "EvaluableConfigV3": [
        55623
      ],
      "FlashLoanFailed": [
        74805
      ],
      "GenericPoolOrderBookV3FlashBorrower": [
        75812
      ],
      "ICLONEABLE_V2_SUCCESS": [
        47145
      ],
      "ICloneableV2": [
        47158
      ],
      "IERC165": [
        46066
      ],
      "IERC20": [
        44376
      ],
      "IERC3156FlashBorrower": [
        78942
      ],
      "IERC3156FlashLender": [
        78980
      ],
      "IInterpreterStoreV1": [
        55698
      ],
      "IInterpreterV2": [
        56032
      ],
      "IOrderBookV3": [
        79289
      ],
      "Initializable": [
        43646
      ],
      "Initializing": [
        74148
      ],
      "LibBytecode": [
        56710
      ],
      "LibContext": [
        57009
      ],
      "LibEncodedDispatch": [
        57164
      ],
      "LibMeta": [
        73191
      ],
      "LibNamespace": [
        57900
      ],
      "MinimumOutput": [
        74145
      ],
      "NoOrders": [
        78997
      ],
      "NonZeroBeforeArbInputs": [
        74811
      ],
      "NonZeroBeforeArbStack": [
        74151
      ],
      "ON_FLASH_LOAN_CALLBACK_SUCCESS": [
        78925
      ],
      "OrderBookV3FlashBorrower": [
        75423
      ],
      "OrderBookV3FlashBorrowerConfigV2": [
        74819
      ],
      "ReentrancyGuard": [
        43711
      ],
      "SafeERC20": [
        44813
      ],
      "SignedContextV1": [
        55640
      ],
      "SourceIndexV2": [
        55998
      ],
      "SwapFailed": [
        74808
      ],
      "TakeOrdersConfigV2": [
        79055
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2343:171",
    "nodes": [
      {
        "id": 75685,
        "nodeType": "PragmaDirective",
        "src": "32:24:171",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 75686,
        "nodeType": "ImportDirective",
        "src": "58:56:171",
        "nodes": [],
        "absolutePath": "src/interface/ierc3156/IERC3156FlashLender.sol",
        "file": "src/interface/ierc3156/IERC3156FlashLender.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75813,
        "sourceUnit": 78981,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75687,
        "nodeType": "ImportDirective",
        "src": "115:58:171",
        "nodes": [],
        "absolutePath": "src/interface/ierc3156/IERC3156FlashBorrower.sol",
        "file": "src/interface/ierc3156/IERC3156FlashBorrower.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75813,
        "sourceUnit": 78943,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75688,
        "nodeType": "ImportDirective",
        "src": "175:51:171",
        "nodes": [],
        "absolutePath": "src/abstract/OrderBookV3FlashBorrower.sol",
        "file": "src/abstract/OrderBookV3FlashBorrower.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75813,
        "sourceUnit": 75424,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75695,
        "nodeType": "VariableDeclaration",
        "src": "412:111:171",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "CALLER_META_HASH",
        "nameLocation": "429:16:171",
        "scope": 75813,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 75690,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "412:7:171",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307835333037666364663366613238336531653764356435386261616135313663646566623130616261396562323332313164396366623131616664366534623463",
              "id": 75693,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "456:66:171",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_37556079620713586158566980906730091500690121256790774265492474129751097625420_by_1",
                "typeString": "int_const 3755...(69 digits omitted)...5420"
              },
              "value": "0x5307fcdf3fa283e1e7d5d58baaa516cdefb10aba9eb23211d9cfb11afd6e4b4c"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_37556079620713586158566980906730091500690121256790774265492474129751097625420_by_1",
                "typeString": "int_const 3755...(69 digits omitted)...5420"
              }
            ],
            "id": 75692,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "448:7:171",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 75691,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "448:7:171",
              "typeDescriptions": {}
            }
          },
          "id": 75694,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "448:75:171",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 75812,
        "nodeType": "ContractDefinition",
        "src": "1204:1170:171",
        "nodes": [
          {
            "id": 75702,
            "nodeType": "UsingForDirective",
            "src": "1283:27:171",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 75699,
              "name": "SafeERC20",
              "nameLocations": [
                "1289:9:171"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44813,
              "src": "1289:9:171"
            },
            "typeName": {
              "id": 75701,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 75700,
                "name": "IERC20",
                "nameLocations": [
                  "1303:6:171"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44376,
                "src": "1303:6:171"
              },
              "referencedDeclaration": 44376,
              "src": "1303:6:171",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$44376",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 75705,
            "nodeType": "UsingForDirective",
            "src": "1315:26:171",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 75703,
              "name": "Address",
              "nameLocations": [
                "1321:7:171"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45259,
              "src": "1321:7:171"
            },
            "typeName": {
              "id": 75704,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1333:7:171",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 75716,
            "nodeType": "FunctionDefinition",
            "src": "1347:137:171",
            "nodes": [],
            "body": {
              "id": 75715,
              "nodeType": "Block",
              "src": "1482:2:171",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75711,
                    "name": "CALLER_META_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75695,
                    "src": "1452:16:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 75712,
                    "name": "config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75708,
                    "src": "1470:6:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV3ConstructionConfig_$54743_memory_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV3ConstructionConfig memory"
                    }
                  }
                ],
                "id": 75713,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 75710,
                  "name": "OrderBookV3FlashBorrower",
                  "nameLocations": [
                    "1427:24:171"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75423,
                  "src": "1427:24:171"
                },
                "nodeType": "ModifierInvocation",
                "src": "1427:50:171"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 75709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75708,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "1411:6:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 75716,
                  "src": "1359:58:171",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV3ConstructionConfig_$54743_memory_ptr",
                    "typeString": "struct DeployerDiscoverableMetaV3ConstructionConfig"
                  },
                  "typeName": {
                    "id": 75707,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 75706,
                      "name": "DeployerDiscoverableMetaV3ConstructionConfig",
                      "nameLocations": [
                        "1359:44:171"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54743,
                      "src": "1359:44:171"
                    },
                    "referencedDeclaration": 54743,
                    "src": "1359:44:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV3ConstructionConfig_$54743_storage_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV3ConstructionConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1358:60:171"
            },
            "returnParameters": {
              "id": 75714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:171"
            },
            "scope": 75812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75804,
            "nodeType": "FunctionDefinition",
            "src": "1535:760:171",
            "nodes": [],
            "body": {
              "id": 75803,
              "nodeType": "Block",
              "src": "1645:650:171",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    75727,
                    75729,
                    75731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75727,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1664:7:171",
                      "nodeType": "VariableDeclaration",
                      "scope": 75803,
                      "src": "1656:15:171",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 75726,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1656:7:171",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 75729,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "1681:4:171",
                      "nodeType": "VariableDeclaration",
                      "scope": 75803,
                      "src": "1673:12:171",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 75728,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1673:7:171",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 75731,
                      "mutability": "mutable",
                      "name": "encodedFunctionCall",
                      "nameLocation": "1700:19:171",
                      "nodeType": "VariableDeclaration",
                      "scope": 75803,
                      "src": "1687:32:171",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 75730,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1687:5:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75743,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 75734,
                        "name": "exchangeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75722,
                        "src": "1746:12:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 75736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1761:7:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 75735,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1761:7:171",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 75738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1770:7:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 75737,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1770:7:171",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 75740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1779:5:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 75739,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1779:5:171",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 75741,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1760:25:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(bytes storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(bytes storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 75732,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1735:3:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 75733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1739:6:171",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1735:10:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 75742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1735:51:171",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(address payable,address payable,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1655:131:171"
                },
                {
                  "assignments": [
                    75745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75745,
                      "mutability": "mutable",
                      "name": "borrowedToken",
                      "nameLocation": "1805:13:171",
                      "nodeType": "VariableDeclaration",
                      "scope": 75803,
                      "src": "1797:21:171",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 75744,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1797:7:171",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75759,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "id": 75746,
                                "name": "takeOrders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75720,
                                "src": "1821:10:171",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TakeOrdersConfigV2_$79055_memory_ptr",
                                  "typeString": "struct TakeOrdersConfigV2 memory"
                                }
                              },
                              "id": 75747,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1832:6:171",
                              "memberName": "orders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 79052,
                              "src": "1821:17:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_TakeOrderConfigV2_$79026_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct TakeOrderConfigV2 memory[] memory"
                              }
                            },
                            "id": 75749,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 75748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1839:1:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1821:20:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakeOrderConfigV2_$79026_memory_ptr",
                              "typeString": "struct TakeOrderConfigV2 memory"
                            }
                          },
                          "id": 75750,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1842:5:171",
                          "memberName": "order",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79017,
                          "src": "1821:26:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderV2_$79042_memory_ptr",
                            "typeString": "struct OrderV2 memory"
                          }
                        },
                        "id": 75751,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1848:12:171",
                        "memberName": "validOutputs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79041,
                        "src": "1821:39:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_IO_$78658_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IO memory[] memory"
                        }
                      },
                      "id": 75757,
                      "indexExpression": {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 75752,
                              "name": "takeOrders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75720,
                              "src": "1861:10:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakeOrdersConfigV2_$79055_memory_ptr",
                                "typeString": "struct TakeOrdersConfigV2 memory"
                              }
                            },
                            "id": 75753,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1872:6:171",
                            "memberName": "orders",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79052,
                            "src": "1861:17:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TakeOrderConfigV2_$79026_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TakeOrderConfigV2 memory[] memory"
                            }
                          },
                          "id": 75755,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 75754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1879:1:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1861:20:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakeOrderConfigV2_$79026_memory_ptr",
                            "typeString": "struct TakeOrderConfigV2 memory"
                          }
                        },
                        "id": 75756,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1882:13:171",
                        "memberName": "outputIOIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79021,
                        "src": "1861:34:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1821:75:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IO_$78658_memory_ptr",
                        "typeString": "struct IO memory"
                      }
                    },
                    "id": 75758,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1897:5:171",
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 78653,
                    "src": "1821:81:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1797:105:171"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75764,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75727,
                        "src": "1947:7:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 75765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1956:1:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 75761,
                            "name": "borrowedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75745,
                            "src": "1920:13:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 75760,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44376,
                          "src": "1913:6:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44376_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 75762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1913:21:171",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 75763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1935:11:171",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44541,
                      "src": "1913:33:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44376_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44376_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 75766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1913:45:171",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75767,
                  "nodeType": "ExpressionStatement",
                  "src": "1913:45:171"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75772,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75727,
                        "src": "2002:7:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 75775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2016:7:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 75774,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2016:7:171",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 75773,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2011:4:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 75776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2011:13:171",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 75777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2025:3:171",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2011:17:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 75769,
                            "name": "borrowedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75745,
                            "src": "1975:13:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 75768,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44376,
                          "src": "1968:6:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44376_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 75770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1968:21:171",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 75771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1990:11:171",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44541,
                      "src": "1968:33:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44376_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44376_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 75778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1968:61:171",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75779,
                  "nodeType": "ExpressionStatement",
                  "src": "1968:61:171"
                },
                {
                  "assignments": [
                    75781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75781,
                      "mutability": "mutable",
                      "name": "returnData",
                      "nameLocation": "2052:10:171",
                      "nodeType": "VariableDeclaration",
                      "scope": 75803,
                      "src": "2039:23:171",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 75780,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2039:5:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75791,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 75784,
                        "name": "encodedFunctionCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75731,
                        "src": "2092:19:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 75787,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2121:4:171",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenericPoolOrderBookV3FlashBorrower_$75812",
                                "typeString": "contract GenericPoolOrderBookV3FlashBorrower"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GenericPoolOrderBookV3FlashBorrower_$75812",
                                "typeString": "contract GenericPoolOrderBookV3FlashBorrower"
                              }
                            ],
                            "id": 75786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2113:7:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 75785,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2113:7:171",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 75788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2113:13:171",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 75789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2127:7:171",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2113:21:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 75782,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75729,
                        "src": "2065:4:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 75783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2070:21:171",
                      "memberName": "functionCallWithValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45039,
                      "src": "2065:26:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
                        "typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
                      }
                    },
                    "id": 75790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:70:171",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2039:96:171"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 75792,
                        "name": "returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75781,
                        "src": "2222:10:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 75793,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2221:12:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 75794,
                  "nodeType": "ExpressionStatement",
                  "src": "2221:12:171"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75799,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75727,
                        "src": "2277:7:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 75800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2286:1:171",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 75796,
                            "name": "borrowedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75745,
                            "src": "2250:13:171",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 75795,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44376,
                          "src": "2243:6:171",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44376_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 75797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2243:21:171",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 75798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2265:11:171",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44541,
                      "src": "2243:33:171",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44376_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44376_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 75801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2243:45:171",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75802,
                  "nodeType": "ExpressionStatement",
                  "src": "2243:45:171"
                }
              ]
            },
            "baseFunctions": [
              75068
            ],
            "documentation": {
              "id": 75717,
              "nodeType": "StructuredDocumentation",
              "src": "1490:40:171",
              "text": "@inheritdoc OrderBookV3FlashBorrower"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exchange",
            "nameLocation": "1544:9:171",
            "overrides": {
              "id": 75724,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1636:8:171"
            },
            "parameters": {
              "id": 75723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75720,
                  "mutability": "mutable",
                  "name": "takeOrders",
                  "nameLocation": "1580:10:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 75804,
                  "src": "1554:36:171",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakeOrdersConfigV2_$79055_memory_ptr",
                    "typeString": "struct TakeOrdersConfigV2"
                  },
                  "typeName": {
                    "id": 75719,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 75718,
                      "name": "TakeOrdersConfigV2",
                      "nameLocations": [
                        "1554:18:171"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 79055,
                      "src": "1554:18:171"
                    },
                    "referencedDeclaration": 79055,
                    "src": "1554:18:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakeOrdersConfigV2_$79055_storage_ptr",
                      "typeString": "struct TakeOrdersConfigV2"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75722,
                  "mutability": "mutable",
                  "name": "exchangeData",
                  "nameLocation": "1605:12:171",
                  "nodeType": "VariableDeclaration",
                  "scope": 75804,
                  "src": "1592:25:171",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 75721,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:5:171",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1553:65:171"
            },
            "returnParameters": {
              "id": 75725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1645:0:171"
            },
            "scope": 75812,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 75811,
            "nodeType": "FunctionDefinition",
            "src": "2330:42:171",
            "nodes": [],
            "body": {
              "id": 75810,
              "nodeType": "Block",
              "src": "2370:2:171",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 75805,
              "nodeType": "StructuredDocumentation",
              "src": "2301:24:171",
              "text": "Allow receiving gas."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "id": 75808,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75807,
                  "name": "onlyNotInitializing",
                  "nameLocations": [
                    "2350:19:171"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75058,
                  "src": "2350:19:171"
                },
                "nodeType": "ModifierInvocation",
                "src": "2350:19:171"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 75806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2338:2:171"
            },
            "returnParameters": {
              "id": 75809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2370:0:171"
            },
            "scope": 75812,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 75697,
              "name": "OrderBookV3FlashBorrower",
              "nameLocations": [
                "1252:24:171"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75423,
              "src": "1252:24:171"
            },
            "id": 75698,
            "nodeType": "InheritanceSpecifier",
            "src": "1252:24:171"
          }
        ],
        "canonicalName": "GenericPoolOrderBookV3FlashBorrower",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 75696,
          "nodeType": "StructuredDocumentation",
          "src": "526:678:171",
          "text": "@title GenericPoolOrderBookV3FlashBorrower\n Implements the OrderBookV3FlashBorrower interface for a external liquidity\n source that behaves vaguely like a standard AMM. The `exchangeData` from\n `arb` is decoded into a spender, pool and callData. The `callData` is\n literally the encoded function call to the pool. This allows the `arb`\n caller to process a trade against any liquidity source that can swap tokens\n within a single function call.\n The `spender` is the address that will be approved to spend the input token\n on `takeOrders`, which is almost always going to be the pool itself. If you\n are unsure, simply set it to the pool address."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          75812,
          75423,
          46054,
          46066,
          54788,
          73107,
          43646,
          43711,
          47158,
          78942
        ],
        "name": "GenericPoolOrderBookV3FlashBorrower",
        "nameLocation": "1213:35:171",
        "scope": 75813,
        "usedErrors": [
          47149,
          56724,
          73087,
          73092,
          74145,
          74148,
          74151,
          74156,
          74802,
          74805,
          74811,
          78997
        ]
      }
    ],
    "license": "CAL"
  },
  "id": 171
}