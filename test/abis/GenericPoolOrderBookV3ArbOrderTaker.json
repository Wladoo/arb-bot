{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes"
            }
          ],
          "internalType": "struct DeployerDiscoverableMetaV3ConstructionConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "badLender",
          "type": "address"
        }
      ],
      "name": "BadLender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitializeSignatureFn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "MinimumOutput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoOrders",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inputs",
          "type": "uint256"
        }
      ],
      "name": "NonZeroBeforeArbInputs",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonZeroBeforeArbStack",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "unmeta",
          "type": "bytes"
        }
      ],
      "name": "NotRainMetaV1",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expectedHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actualHash",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedMetaHash",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV3",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV3",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "indexed": false,
          "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "Initialize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "subject",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "meta",
          "type": "bytes"
        }
      ],
      "name": "MetaV1",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "minimumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumInput",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maximumIORatio",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "handleIO",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IInterpreterV2",
                          "name": "interpreter",
                          "type": "address"
                        },
                        {
                          "internalType": "contract IInterpreterStoreV1",
                          "name": "store",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "expression",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct EvaluableV2",
                      "name": "evaluable",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validInputs",
                      "type": "tuple[]"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint8",
                          "name": "decimals",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "vaultId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IO[]",
                      "name": "validOutputs",
                      "type": "tuple[]"
                    }
                  ],
                  "internalType": "struct OrderV2",
                  "name": "order",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "inputIOIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "outputIOIndex",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "signer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "context",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct SignedContextV1[]",
                  "name": "signedContext",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct TakeOrderConfigV2[]",
              "name": "orders",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TakeOrdersConfigV2",
          "name": "takeOrders",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "minimumSenderOutput",
          "type": "uint256"
        }
      ],
      "name": "arb",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "orderBook",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV3",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct EvaluableConfigV3",
              "name": "evaluableConfig",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "implementationData",
              "type": "bytes"
            }
          ],
          "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "inputToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "outputToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inputAmountSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalOutputAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "takeOrdersData",
          "type": "bytes"
        }
      ],
      "name": "onTakeOrders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9r",
      "outputs": [
        {
          "internalType": "contract IInterpreterV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rDispatch",
      "outputs": [
        {
          "internalType": "EncodedDispatch",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sI9rStore",
      "outputs": [
        {
          "internalType": "contract IInterpreterStoreV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sOrderBook",
      "outputs": [
        {
          "internalType": "contract IOrderBookV3",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620034a3380380620034a38339810160408190526200003491620003d2565b600160005560208101517fa519e069ba4e0d8fdcd8feb0a65292ee147333ffe032fa8341e427db6d78ed1c9082908290829062000073908390620000d7565b60208101516040517fbea766d03fa1efd3f81cc8634d08320bc62bb0ed9234ac59bbaafa5893fb6b1391620000ac9133913091620004a0565b60405180910390a18051620000c1906200011e565b50620000ce9050620001d1565b505050620005c6565b805160208201208281146200010e5760405163074fe10f60e41b815260048101849052602481018290526044015b60405180910390fd5b62000119826200028f565b505050565b60008080806001600160a01b03851663b7f14403826040519080825280602002602001820160405280156200015d578160200160208202803683370190505b506040518263ffffffff1660e01b81526004016200017c9190620004d2565b6000604051808303816000875af11580156200019c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001c6919081019062000529565b505050505050505050565b600154610100900460ff16156200023b5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840162000105565b60015460ff908116146200028d576001805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6200029a81620002bf565b620002bc5780604051630c89984b60e31b8152600401620001059190620005aa565b50565b6000600882511015620002d457506000919050565b50600801516001600160401b031667ff0a89c674ee78741490565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620002bc57600080fd5b60005b83811015620003385781810151838201526020016200031e565b50506000910152565b600082601f8301126200035357600080fd5b81516001600160401b0380821115620003705762000370620002ef565b604051601f8301601f19908116603f011681019082821181831017156200039b576200039b620002ef565b81604052838152866020858801011115620003b557600080fd5b620003c88460208301602089016200031b565b9695505050505050565b600060208284031215620003e557600080fd5b81516001600160401b0380821115620003fd57600080fd5b90830190604082860312156200041257600080fd5b604051604081018181108382111715620004305762000430620002ef565b6040528251620004408162000305565b81526020830151828111156200045557600080fd5b620004638782860162000341565b60208301525095945050505050565b600081518084526200048c8160208601602086016200031b565b601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000620004c9606083018462000472565b95945050505050565b60408152600060408201526000606082016020606081850152818551808452608086019150828701935060005b818110156200051d57845183529383019391830191600101620004ff565b50909695505050505050565b600080600080608085870312156200054057600080fd5b84516200054d8162000305565b6020860151909450620005608162000305565b6040860151909350620005738162000305565b60608601519092506001600160401b038111156200059057600080fd5b6200059e8782880162000341565b91505092959194509250565b602081526000620005bf602083018462000472565b9392505050565b612ecd80620005d66000396000f3fe6080604052600436106100965760003560e01c806371c1dea71161006957806389448c3a1161004e57806389448c3a1461021c57806398da8d6a14610232578063c3b7c7c31461025257610096565b806371c1dea7146101bc578063886d1650146101e957610096565b806301ffc9a7146100e7578063059bebe61461011c578063439fab911461013c57806361bb39e41461016a575b3480156100a257600080fd5b50600154610100900460ff16156100e5576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b3480156100f357600080fd5b50610107610102366004611e21565b610265565b60405190151581526020015b60405180910390f35b34801561012857600080fd5b506100e5610137366004611e8c565b61034a565b34801561014857600080fd5b5061015c610157366004612079565b610425565b604051908152602001610113565b34801561017657600080fd5b506004546101979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610113565b3480156101c857600080fd5b506003546101979073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101f557600080fd5b506001546101979062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561022857600080fd5b5061015c60025481565b34801561023e57600080fd5b5061015c61024d3660046120ae565b610834565b6100e56102603660046120e9565b610868565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f059bebe60000000000000000000000000000000000000000000000000000000014806102f857507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061034457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b610358868686868686610fd0565b6000808061036884860186612133565b9194509250905061039173ffffffffffffffffffffffffffffffffffffffff8a16846000611073565b6103d273ffffffffffffffffffffffffffffffffffffffff8a16847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611073565b60006103f573ffffffffffffffffffffffffffffffffffffffff84168347611278565b905061041973ffffffffffffffffffffffffffffffffffffffff8b16856000611073565b50505050505050505050565b600154600090610100900460ff161580801561044557506001805460ff16105b8061045e5750303b15801561045e57506001805460ff16145b6104ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561054c57600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6105546112a6565b60008380602001905181019061056a9190612273565b905080516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906105eb9033908490612401565b60405180910390a1600061060682602001516020015161131c565b111561079e5760208082015180519181015160409182015191517fb7f1440300000000000000000000000000000000000000000000000000000000815260009360609373ffffffffffffffffffffffffffffffffffffffff9091169263b7f144039261067592906004016124d6565b6000604051808303816000875af1158015610694573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106da9190810190612504565b6004805473ffffffffffffffffffffffffffffffffffffffff9485167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556003805495909416941693909317909155600182015190935090915060ff168015610778576040517f1751534b000000000000000000000000000000000000000000000000000000008152600481018290526024016104e6565b50602082901b77ffffffffffffffffffffffffffffffffffffffff000000001660025550505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506107cc6001600055565b801561082e57600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108706112a6565b600154610100900460ff16156108b2576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108bf606083018361257c565b90506000036108fa576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610909606084018461257c565b600081811061091a5761091a6125e4565b905060200281019061092c9190612613565b6109369080612651565b6109449060a0810190612685565b610951606086018661257c565b6000818110610962576109626125e4565b90506020028101906109749190612613565b60200135818110610987576109876125e4565b61099d92602060609092020190810191506126ec565b905060006109ae606085018561257c565b60008181106109bf576109bf6125e4565b90506020028101906109d19190612613565b6109db9080612651565b6109e99060c0810190612685565b6109f6606087018761257c565b6000818110610a0757610a076125e4565b9050602002810190610a199190612613565b60400135818110610a2c57610a2c6125e4565b610a4292602060609092020190810191506126ec565b6002549091508015610ca957600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636046c5f99116610a8d843060009182526020526040902090565b604080516000808252602082019092528891610b289190610abe565b6060815260200190600190039081610aa95790505b506040805160008082526020820190925290610b22565b610b0f6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610ad55790505b5061133a565b604080516000815260208101918290527fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16909152610b73949392919060248101612709565b600060405180830381865afa158015610b90573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610bd691908101906127c8565b8151919350915015610c14576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610ca657600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610c739160009186910161282c565b600060405180830381600087803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b505050505b50505b600154610cd79073ffffffffffffffffffffffffffffffffffffffff85811691620100009004166000611073565b600154610d249073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611073565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c90610d84908a90600401612b69565b60408051808303816000875af1158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc69190612ddc565b6001549193509150610df99073ffffffffffffffffffffffffffffffffffffffff87811691620100009004166000611073565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610e66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8a9190612e00565b905086811015610ed0576040517f0c08b5bc00000000000000000000000000000000000000000000000000000000815260048101889052602481018290526044016104e6565b8015610ef757610ef773ffffffffffffffffffffffffffffffffffffffff8716338361164a565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610f64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f889190612e00565b90508015610fb157610fb173ffffffffffffffffffffffffffffffffffffffff8716338361164a565b610fbb33476116a0565b50505050505050610fcc6001600055565b5050565b600154610100900460ff1615611012576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff16331461106b576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024016104e6565b505050505050565b80158061111357506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111119190612e00565b155b61119f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016104e6565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112739084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526117fa565b505050565b606061129e848484604051806060016040528060298152602001612ea460299139611909565b949350505050565b600260005403611312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104e6565b6002600055565b50565b6000815160000361132f57506000919050565b506020015160001a90565b60606000825167ffffffffffffffff81111561135857611358611f36565b604051908082528060200260200182016040528015611381578160200160208202803683370190505b50905060008084511161139557600061139b565b83516001015b855160010101905060008167ffffffffffffffff8111156113be576113be611f36565b6040519080825280602002602001820160405280156113f157816020015b60608152602001906001900390816113dc5790505b5090506000611416604080516002815233602082015230818301526060810190915290565b828281518110611428576114286125e4565b602002602001018190525060005b8751811015611486578180600101925050878181518110611459576114596125e4565b6020026020010151838381518110611473576114736125e4565b6020908102919091010152600101611436565b50855115611640578080600101915050838282815181106114a9576114a96125e4565b602002602001018190525060005b865181101561163e576115688782815181106114d5576114d56125e4565b6020026020010151600001516115456115128a85815181106114f9576114f96125e4565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b898481518110611557576115576125e4565b602002602001015160400151611a22565b6115a1576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016104e6565b8681815181106115b3576115b36125e4565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168582815181106115e7576115e76125e4565b602002602001018181525050818060010192505086818151811061160d5761160d6125e4565b60200260200101516020015183838151811061162b5761162b6125e4565b60209081029190910101526001016114b7565b505b5095945050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112739084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016111f1565b8047101561170a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016104e6565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611764576040519150601f19603f3d011682016040523d82523d6000602084013e611769565b606091505b5050905080611273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016104e6565b600061185c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a9d9092919063ffffffff16565b905080516000148061187d57508080602001905181019061187d9190612e19565b611273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104e6565b60608247101561199b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016104e6565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516119c49190612e36565b60006040518083038185875af1925050503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b5091509150611a1787838387611aac565b979650505050505050565b6000806000611a318585611b4c565b90925090506000816004811115611a4a57611a4a612e48565b148015611a8257508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a935750611a93868686611b91565b9695505050505050565b606061129e8484600085611909565b60608315611b42578251600003611b3b5773ffffffffffffffffffffffffffffffffffffffff85163b611b3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104e6565b508161129e565b61129e8383611cee565b6000808251604103611b825760208301516040840151606085015160001a611b7687828585611d32565b94509450505050611b8a565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611bc8929190612e77565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611c519190612e36565b600060405180830381855afa9150503d8060008114611c8c576040519150601f19603f3d011682016040523d82523d6000602084013e611c91565b606091505b5091509150818015611ca557506020815110155b8015611a93575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611ce39083016020908101908401612e00565b149695505050505050565b815115611cfe5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e69190612e90565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d695750600090506003611e18565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611dbd573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611e1157600060019250925050611e18565b9150600090505b94509492505050565b600060208284031215611e3357600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611e6357600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461131957600080fd5b60008060008060008060a08789031215611ea557600080fd5b8635611eb081611e6a565b95506020870135611ec081611e6a565b94506040870135935060608701359250608087013567ffffffffffffffff80821115611eeb57600080fd5b818901915089601f830112611eff57600080fd5b813581811115611f0e57600080fd5b8a6020828501011115611f2057600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611f8857611f88611f36565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611fd557611fd5611f36565b604052919050565b600067ffffffffffffffff821115611ff757611ff7611f36565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261203457600080fd5b813561204761204282611fdd565b611f8e565b81815284602083860101111561205c57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561208b57600080fd5b813567ffffffffffffffff8111156120a257600080fd5b61129e84828501612023565b6000602082840312156120c057600080fd5b813567ffffffffffffffff8111156120d757600080fd5b820160608185031215611e6357600080fd5b600080604083850312156120fc57600080fd5b823567ffffffffffffffff81111561211357600080fd5b830160a0818603121561212557600080fd5b946020939093013593505050565b60008060006060848603121561214857600080fd5b833561215381611e6a565b9250602084013561216381611e6a565b9150604084013567ffffffffffffffff81111561217f57600080fd5b61218b86828701612023565b9150509250925092565b60005b838110156121b0578181015183820152602001612198565b50506000910152565b600082601f8301126121ca57600080fd5b81516121d861204282611fdd565b8181528460208386010111156121ed57600080fd5b61129e826020830160208701612195565b600082601f83011261220f57600080fd5b8151602067ffffffffffffffff82111561222b5761222b611f36565b8160051b61223a828201611f8e565b928352848101820192828101908785111561225457600080fd5b83870192505b84831015611a175782518252918301919083019061225a565b60006020828403121561228557600080fd5b815167ffffffffffffffff8082111561229d57600080fd5b90830190606082860312156122b157600080fd5b6122b9611f65565b82516122c481611e6a565b81526020830151828111156122d857600080fd5b8301606081880312156122ea57600080fd5b6122f2611f65565b81516122fd81611e6a565b815260208201518481111561231157600080fd5b61231d898285016121b9565b60208301525060408201518481111561233557600080fd5b612341898285016121fe565b604083015250806020840152505060408301518281111561236157600080fd5b61236d878286016121b9565b60408301525095945050505050565b60008151808452612394816020860160208601612195565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156123f6578151875295820195908201906001016123da565b509495945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c085015261245d61010085018361237c565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e085015261249a82826123c6565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a93828261237c565b6040815260006124e9604083018561237c565b82810360208401526124fb81856123c6565b95945050505050565b6000806000806080858703121561251a57600080fd5b845161252581611e6a565b602086015190945061253681611e6a565b604086015190935061254781611e6a565b606086015190925067ffffffffffffffff81111561256457600080fd5b612570878288016121b9565b91505092959194509250565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126125b157600080fd5b83018035915067ffffffffffffffff8211156125cc57600080fd5b6020019150600581901b3603821315611b8a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261264757600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261264757600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126126ba57600080fd5b83018035915067ffffffffffffffff8211156126d557600080fd5b6020019150606081023603821315611b8a57600080fd5b6000602082840312156126fe57600080fd5b8135611e6381611e6a565b600060a0820173ffffffffffffffffffffffffffffffffffffffff881683526020878185015286604085015260a0606085015281865180845260c08601915060c08160051b870101935082880160005b828110156127a5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff408887030184526127938683516123c6565b95509284019290840190600101612759565b505050505082810360808401526127bc81856123c6565b98975050505050505050565b600080604083850312156127db57600080fd5b825167ffffffffffffffff808211156127f357600080fd5b6127ff868387016121fe565b9350602085015191508082111561281557600080fd5b50612822858286016121fe565b9150509250929050565b82815260406020820152600061129e60408301846123c6565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261287a57600080fd5b830160208101925035905067ffffffffffffffff81111561289a57600080fd5b8060051b3603821315611b8a57600080fd5b801515811461131957600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126128ef57600080fd5b830160208101925035905067ffffffffffffffff81111561290f57600080fd5b606081023603821315611b8a57600080fd5b818352600060208085019450826000805b8681101561299157823561294581611e6a565b73ffffffffffffffffffffffffffffffffffffffff1688528284013560ff8116808214612970578384fd5b89860152506040838101359089015260609788019790920191600101612932565b50959695505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126129d257600080fd5b830160208101925035905067ffffffffffffffff8111156129f257600080fd5b803603821315611b8a57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b88811015612b5b578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612aa457600080fd5b880160608135612ab381611e6a565b73ffffffffffffffffffffffffffffffffffffffff168552612ad782890183612845565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811115612b1257600080fd5b881b808288850137860190506040612b2c8482018561299d565b9450838884030182890152612b448484018683612a01565b9e8b019e9750505093880193505050600101612a65565b509098975050505050505050565b6000602080835260c083018435828501526040828601358186015260608187013581870152612b9a81880188612845565b60a060808981018290529582905260e095868a01600584901b8b0188018560005b86811015612d85577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff208e840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81893603018112612c1c57600080fd5b88018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21018112612c5157600080fd5b86855281018035612c6181611e6a565b73ffffffffffffffffffffffffffffffffffffffff90811686890152818f013590612c8b826128ac565b901515868a0152818d013590612ca082611e6a565b90811660c0870152818c013590612cb682611e6a565b908116868f01528188013590612ccb82611e6a565b16610100860152612cde818901826128ba565b8e610120880152612cf461016088018284612921565b915050612d0460c08301836128ba565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087830301610140880152612d3c828483612921565b925050508d8201358e8601528b8201358c860152612d5c8b830183612845565b92508582038c870152612d70828483612a4a565b968f019695505050918c019150600101612bbb565b5050612d93838e018e61299d565b9a5098507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301848d0152612dcb818b8b612a01565b9d9c50505050505050505050505050565b60008060408385031215612def57600080fd5b505080516020909101519092909150565b600060208284031215612e1257600080fd5b5051919050565b600060208284031215612e2b57600080fd5b8151611e63816128ac565b60008251612647818460208701612195565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82815260406020820152600061129e604083018461237c565b602081526000611e63602083018461237c56fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
    "sourceMap": "484:1277:170:-:0;;;627:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:22;406:75:170;1821:22:22;1109:11:71;;;;414:66:170;;750:6;;414:66;;750:6;;1075:46:71;;414:66:170;;1075:23:71;:46::i;:::-;1188:11;;;;1136:64;;;;;;1143:10;;1179:4;;1136:64;:::i;:::-;;;;;;;;1250:15;;1210:56;;:39;:56::i;:::-;-1:-1:-1;3611:22:167::1;::::0;-1:-1:-1;3611:20:167::1;:22::i;:::-;3454:186:::0;;627:137:170;484:1277;;1424:292:153;1538:16;;;;;;1568:28;;;1564:112;;1619:46;;-1:-1:-1;;;1619:46:153;;;;;3007:25:227;;;3048:18;;;3041:34;;;2980:18;;1619:46:153;;;;;;;;1564:112;1685:24;1703:5;1685:17;:24::i;:::-;1506:210;1424:292;;:::o;1111:293:88:-;1174:26;;;;-1:-1:-1;;;;;1280:49:88;;;1174:26;1334:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1334:16:88;;1280:71;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1280:71:88;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;1111:293:88:o;5917:280:21:-;5985:13;;;;;;;5984:14;5976:66;;;;-1:-1:-1;;;5976:66:21;;4910:2:227;5976:66:21;;;4892:21:227;4949:2;4929:18;;;4922:30;4988:34;4968:18;;;4961:62;-1:-1:-1;;;5039:18:227;;;5032:37;5086:19;;5976:66:21;4708:403:227;5976:66:21;6056:12;;6072:15;6056:12;;;:31;6052:139;;6103:12;:30;;-1:-1:-1;;6103:30:21;6118:15;6103:30;;;;;;6152:28;;5258:36:227;;;6152:28:21;;5246:2:227;5231:18;6152:28:21;;;;;;;6052:139;5917:280::o;1075:155:153:-;1151:19;1164:5;1151:12;:19::i;:::-;1146:78;;1207:5;1193:20;;-1:-1:-1;;;1193:20:153;;;;;;;;:::i;1146:78::-;1075:155;:::o;550:376::-;615:4;650:1;635:5;:12;:16;631:34;;;-1:-1:-1;660:5:153;;550:376;-1:-1:-1;550:376:153:o;631:34::-;-1:-1:-1;846:1:153;835:13;829:20;-1:-1:-1;;;;;825:32:153;667:18:152;883:36:153;;550:376::o;14:127:227:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:131;-1:-1:-1;;;;;221:31:227;;211:42;;201:70;;267:1;264;257:12;282:250;367:1;377:113;391:6;388:1;385:13;377:113;;;467:11;;;461:18;448:11;;;441:39;413:2;406:10;377:113;;;-1:-1:-1;;524:1:227;506:16;;499:27;282:250::o;537:698::-;590:5;643:3;636:4;628:6;624:17;620:27;610:55;;661:1;658;651:12;610:55;684:13;;-1:-1:-1;;;;;746:10:227;;;743:36;;;759:18;;:::i;:::-;834:2;828:9;802:2;888:13;;-1:-1:-1;;884:22:227;;;908:2;880:31;876:40;864:53;;;932:18;;;952:22;;;929:46;926:72;;;978:18;;:::i;:::-;1018:10;1014:2;1007:22;1053:2;1045:6;1038:18;1099:3;1092:4;1087:2;1079:6;1075:15;1071:26;1068:35;1065:55;;;1116:1;1113;1106:12;1065:55;1129:76;1202:2;1195:4;1187:6;1183:17;1176:4;1168:6;1164:17;1129:76;:::i;:::-;1223:6;537:698;-1:-1:-1;;;;;;537:698:227:o;1240:923::-;1373:6;1426:2;1414:9;1405:7;1401:23;1397:32;1394:52;;;1442:1;1439;1432:12;1394:52;1469:16;;-1:-1:-1;;;;;1534:14:227;;;1531:34;;;1561:1;1558;1551:12;1531:34;1584:22;;;;1640:4;1622:16;;;1618:27;1615:47;;;1658:1;1655;1648:12;1615:47;1691:4;1685:11;1735:4;1727:6;1723:17;1790:6;1778:10;1775:22;1770:2;1758:10;1755:18;1752:46;1749:72;;;1801:18;;:::i;:::-;1837:4;1830:24;1876:9;;1894:31;1876:9;1894:31;:::i;:::-;1934:21;;1994:2;1986:11;;1980:18;2010:16;;;2007:36;;;2039:1;2036;2029:12;2007:36;2076:55;2123:7;2112:8;2108:2;2104:17;2076:55;:::i;:::-;2071:2;2059:15;;2052:80;-1:-1:-1;2063:6:227;1240:923;-1:-1:-1;;;;;1240:923:227:o;2168:270::-;2209:3;2247:5;2241:12;2274:6;2269:3;2262:19;2290:76;2359:6;2352:4;2347:3;2343:14;2336:4;2329:5;2325:16;2290:76;:::i;:::-;2420:2;2399:15;-1:-1:-1;;2395:29:227;2386:39;;;;2427:4;2382:50;;2168:270;-1:-1:-1;;2168:270:227:o;2443:385::-;2675:1;2671;2666:3;2662:11;2658:19;2650:6;2646:32;2635:9;2628:51;2715:6;2710:2;2699:9;2695:18;2688:34;2758:2;2753;2742:9;2738:18;2731:30;2609:4;2778:44;2818:2;2807:9;2803:18;2795:6;2778:44;:::i;:::-;2770:52;2443:385;-1:-1:-1;;;;;2443:385:227:o;3086:827::-;3365:2;3354:9;3347:21;3404:1;3399:2;3388:9;3384:18;3377:29;3328:4;3449:2;3438:9;3434:18;3471:4;3511:2;3506;3495:9;3491:18;3484:30;3534:11;3574:6;3568:13;3610:6;3597:11;3590:27;3648:3;3637:9;3633:19;3626:26;;3687:2;3679:6;3675:15;3661:29;;3708:1;3718:169;3732:6;3729:1;3726:13;3718:169;;;3793:13;;3781:26;;3862:15;;;;3827:12;;;;3754:1;3747:9;3718:169;;;-1:-1:-1;3904:3:227;;3086:827;-1:-1:-1;;;;;;3086:827:227:o;3918:785::-;4077:6;4085;4093;4101;4154:3;4142:9;4133:7;4129:23;4125:33;4122:53;;;4171:1;4168;4161:12;4122:53;4203:9;4197:16;4222:31;4247:5;4222:31;:::i;:::-;4322:2;4307:18;;4301:25;4272:5;;-1:-1:-1;4335:33:227;4301:25;4335:33;:::i;:::-;4439:2;4424:18;;4418:25;4387:7;;-1:-1:-1;4452:33:227;4418:25;4452:33;:::i;:::-;4555:2;4540:18;;4534:25;4504:7;;-1:-1:-1;;;;;;4571:30:227;;4568:50;;;4614:1;4611;4604:12;4568:50;4637:60;4689:7;4680:6;4669:9;4665:22;4637:60;:::i;:::-;4627:70;;;3918:785;;;;;;;:::o;5305:217::-;5452:2;5441:9;5434:21;5415:4;5472:44;5512:2;5501:9;5497:18;5489:6;5472:44;:::i;:::-;5464:52;5305:217;-1:-1:-1;;;5305:217:227:o;:::-;484:1277:170;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100965760003560e01c806371c1dea71161006957806389448c3a1161004e57806389448c3a1461021c57806398da8d6a14610232578063c3b7c7c31461025257610096565b806371c1dea7146101bc578063886d1650146101e957610096565b806301ffc9a7146100e7578063059bebe61461011c578063439fab911461013c57806361bb39e41461016a575b3480156100a257600080fd5b50600154610100900460ff16156100e5576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b005b3480156100f357600080fd5b50610107610102366004611e21565b610265565b60405190151581526020015b60405180910390f35b34801561012857600080fd5b506100e5610137366004611e8c565b61034a565b34801561014857600080fd5b5061015c610157366004612079565b610425565b604051908152602001610113565b34801561017657600080fd5b506004546101979073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610113565b3480156101c857600080fd5b506003546101979073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101f557600080fd5b506001546101979062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561022857600080fd5b5061015c60025481565b34801561023e57600080fd5b5061015c61024d3660046120ae565b610834565b6100e56102603660046120e9565b610868565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f059bebe60000000000000000000000000000000000000000000000000000000014806102f857507fffffffff0000000000000000000000000000000000000000000000000000000082167f439fab9100000000000000000000000000000000000000000000000000000000145b8061034457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b610358868686868686610fd0565b6000808061036884860186612133565b9194509250905061039173ffffffffffffffffffffffffffffffffffffffff8a16846000611073565b6103d273ffffffffffffffffffffffffffffffffffffffff8a16847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611073565b60006103f573ffffffffffffffffffffffffffffffffffffffff84168347611278565b905061041973ffffffffffffffffffffffffffffffffffffffff8b16856000611073565b50505050505050505050565b600154600090610100900460ff161580801561044557506001805460ff16105b8061045e5750303b15801561045e57506001805460ff16145b6104ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001681179055801561054c57600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6105546112a6565b60008380602001905181019061056a9190612273565b905080516001805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790556040517f61f559321bdc3ad3a0e3b8692a91eaffa9773753bfec4e5f4c344cfed245cab7906105eb9033908490612401565b60405180910390a1600061060682602001516020015161131c565b111561079e5760208082015180519181015160409182015191517fb7f1440300000000000000000000000000000000000000000000000000000000815260009360609373ffffffffffffffffffffffffffffffffffffffff9091169263b7f144039261067592906004016124d6565b6000604051808303816000875af1158015610694573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106da9190810190612504565b6004805473ffffffffffffffffffffffffffffffffffffffff9485167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556003805495909416941693909317909155600182015190935090915060ff168015610778576040517f1751534b000000000000000000000000000000000000000000000000000000008152600481018290526024016104e6565b50602082901b77ffffffffffffffffffffffffffffffffffffffff000000001660025550505b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc39250506107cc6001600055565b801561082e57600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50919050565b60006040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108706112a6565b600154610100900460ff16156108b2576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108bf606083018361257c565b90506000036108fa576040517f9c95219f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610909606084018461257c565b600081811061091a5761091a6125e4565b905060200281019061092c9190612613565b6109369080612651565b6109449060a0810190612685565b610951606086018661257c565b6000818110610962576109626125e4565b90506020028101906109749190612613565b60200135818110610987576109876125e4565b61099d92602060609092020190810191506126ec565b905060006109ae606085018561257c565b60008181106109bf576109bf6125e4565b90506020028101906109d19190612613565b6109db9080612651565b6109e99060c0810190612685565b6109f6606087018761257c565b6000818110610a0757610a076125e4565b9050602002810190610a199190612613565b60400135818110610a2c57610a2c6125e4565b610a4292602060609092020190810191506126ec565b6002549091508015610ca957600354600454600091829173ffffffffffffffffffffffffffffffffffffffff91821691636046c5f99116610a8d843060009182526020526040902090565b604080516000808252602082019092528891610b289190610abe565b6060815260200190600190039081610aa95790505b506040805160008082526020820190925290610b22565b610b0f6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b815260200190600190039081610ad55790505b5061133a565b604080516000815260208101918290527fffffffff0000000000000000000000000000000000000000000000000000000060e088901b16909152610b73949392919060248101612709565b600060405180830381865afa158015610b90573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610bd691908101906127c8565b8151919350915015610c14576040517f379fa94000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805115610ca657600480546040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163946aadc691610c739160009186910161282c565b600060405180830381600087803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b505050505b50505b600154610cd79073ffffffffffffffffffffffffffffffffffffffff85811691620100009004166000611073565b600154610d249073ffffffffffffffffffffffffffffffffffffffff85811691620100009004167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611073565b6001546040517f8a44689c00000000000000000000000000000000000000000000000000000000815260009182916201000090910473ffffffffffffffffffffffffffffffffffffffff1690638a44689c90610d84908a90600401612b69565b60408051808303816000875af1158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc69190612ddc565b6001549193509150610df99073ffffffffffffffffffffffffffffffffffffffff87811691620100009004166000611073565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610e66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8a9190612e00565b905086811015610ed0576040517f0c08b5bc00000000000000000000000000000000000000000000000000000000815260048101889052602481018290526044016104e6565b8015610ef757610ef773ffffffffffffffffffffffffffffffffffffffff8716338361164a565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff8716906370a0823190602401602060405180830381865afa158015610f64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f889190612e00565b90508015610fb157610fb173ffffffffffffffffffffffffffffffffffffffff8716338361164a565b610fbb33476116a0565b50505050505050610fcc6001600055565b5050565b600154610100900460ff1615611012576040517f4e8f6c4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015462010000900473ffffffffffffffffffffffffffffffffffffffff16331461106b576040517f0bc3cde00000000000000000000000000000000000000000000000000000000081523360048201526024016104e6565b505050505050565b80158061111357506040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111119190612e00565b155b61119f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016104e6565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112739084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526117fa565b505050565b606061129e848484604051806060016040528060298152602001612ea460299139611909565b949350505050565b600260005403611312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104e6565b6002600055565b50565b6000815160000361132f57506000919050565b506020015160001a90565b60606000825167ffffffffffffffff81111561135857611358611f36565b604051908082528060200260200182016040528015611381578160200160208202803683370190505b50905060008084511161139557600061139b565b83516001015b855160010101905060008167ffffffffffffffff8111156113be576113be611f36565b6040519080825280602002602001820160405280156113f157816020015b60608152602001906001900390816113dc5790505b5090506000611416604080516002815233602082015230818301526060810190915290565b828281518110611428576114286125e4565b602002602001018190525060005b8751811015611486578180600101925050878181518110611459576114596125e4565b6020026020010151838381518110611473576114736125e4565b6020908102919091010152600101611436565b50855115611640578080600101915050838282815181106114a9576114a96125e4565b602002602001018190525060005b865181101561163e576115688782815181106114d5576114d56125e4565b6020026020010151600001516115456115128a85815181106114f9576114f96125e4565b6020026020010151602001518051602090810291012090565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b898481518110611557576115576125e4565b602002602001015160400151611a22565b6115a1576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016104e6565b8681815181106115b3576115b36125e4565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168582815181106115e7576115e76125e4565b602002602001018181525050818060010192505086818151811061160d5761160d6125e4565b60200260200101516020015183838151811061162b5761162b6125e4565b60209081029190910101526001016114b7565b505b5095945050505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526112739084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016111f1565b8047101561170a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016104e6565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114611764576040519150601f19603f3d011682016040523d82523d6000602084013e611769565b606091505b5050905080611273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016104e6565b600061185c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611a9d9092919063ffffffff16565b905080516000148061187d57508080602001905181019061187d9190612e19565b611273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104e6565b60608247101561199b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016104e6565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516119c49190612e36565b60006040518083038185875af1925050503d8060008114611a01576040519150601f19603f3d011682016040523d82523d6000602084013e611a06565b606091505b5091509150611a1787838387611aac565b979650505050505050565b6000806000611a318585611b4c565b90925090506000816004811115611a4a57611a4a612e48565b148015611a8257508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80611a935750611a93868686611b91565b9695505050505050565b606061129e8484600085611909565b60608315611b42578251600003611b3b5773ffffffffffffffffffffffffffffffffffffffff85163b611b3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104e6565b508161129e565b61129e8383611cee565b6000808251604103611b825760208301516040840151606085015160001a611b7687828585611d32565b94509450505050611b8a565b506000905060025b9250929050565b60008060008573ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8686604051602401611bc8929190612e77565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611c519190612e36565b600060405180830381855afa9150503d8060008114611c8c576040519150601f19603f3d011682016040523d82523d6000602084013e611c91565b606091505b5091509150818015611ca557506020815110155b8015611a93575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611ce39083016020908101908401612e00565b149695505050505050565b815115611cfe5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e69190612e90565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d695750600090506003611e18565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611dbd573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611e1157600060019250925050611e18565b9150600090505b94509492505050565b600060208284031215611e3357600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611e6357600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461131957600080fd5b60008060008060008060a08789031215611ea557600080fd5b8635611eb081611e6a565b95506020870135611ec081611e6a565b94506040870135935060608701359250608087013567ffffffffffffffff80821115611eeb57600080fd5b818901915089601f830112611eff57600080fd5b813581811115611f0e57600080fd5b8a6020828501011115611f2057600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611f8857611f88611f36565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611fd557611fd5611f36565b604052919050565b600067ffffffffffffffff821115611ff757611ff7611f36565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261203457600080fd5b813561204761204282611fdd565b611f8e565b81815284602083860101111561205c57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561208b57600080fd5b813567ffffffffffffffff8111156120a257600080fd5b61129e84828501612023565b6000602082840312156120c057600080fd5b813567ffffffffffffffff8111156120d757600080fd5b820160608185031215611e6357600080fd5b600080604083850312156120fc57600080fd5b823567ffffffffffffffff81111561211357600080fd5b830160a0818603121561212557600080fd5b946020939093013593505050565b60008060006060848603121561214857600080fd5b833561215381611e6a565b9250602084013561216381611e6a565b9150604084013567ffffffffffffffff81111561217f57600080fd5b61218b86828701612023565b9150509250925092565b60005b838110156121b0578181015183820152602001612198565b50506000910152565b600082601f8301126121ca57600080fd5b81516121d861204282611fdd565b8181528460208386010111156121ed57600080fd5b61129e826020830160208701612195565b600082601f83011261220f57600080fd5b8151602067ffffffffffffffff82111561222b5761222b611f36565b8160051b61223a828201611f8e565b928352848101820192828101908785111561225457600080fd5b83870192505b84831015611a175782518252918301919083019061225a565b60006020828403121561228557600080fd5b815167ffffffffffffffff8082111561229d57600080fd5b90830190606082860312156122b157600080fd5b6122b9611f65565b82516122c481611e6a565b81526020830151828111156122d857600080fd5b8301606081880312156122ea57600080fd5b6122f2611f65565b81516122fd81611e6a565b815260208201518481111561231157600080fd5b61231d898285016121b9565b60208301525060408201518481111561233557600080fd5b612341898285016121fe565b604083015250806020840152505060408301518281111561236157600080fd5b61236d878286016121b9565b60408301525095945050505050565b60008151808452612394816020860160208601612195565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156123f6578151875295820195908201906001016123da565b509495945050505050565b600073ffffffffffffffffffffffffffffffffffffffff80851683526040602084015280845116604084015260208401516060808501528181511660a085015260208101519150606060c085015261245d61010085018361237c565b9150604081015190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608483030160e085015261249a82826123c6565b91505060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016080850152611a93828261237c565b6040815260006124e9604083018561237c565b82810360208401526124fb81856123c6565b95945050505050565b6000806000806080858703121561251a57600080fd5b845161252581611e6a565b602086015190945061253681611e6a565b604086015190935061254781611e6a565b606086015190925067ffffffffffffffff81111561256457600080fd5b612570878288016121b9565b91505092959194509250565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126125b157600080fd5b83018035915067ffffffffffffffff8211156125cc57600080fd5b6020019150600581901b3603821315611b8a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8183360301811261264757600080fd5b9190910192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2183360301811261264757600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126126ba57600080fd5b83018035915067ffffffffffffffff8211156126d557600080fd5b6020019150606081023603821315611b8a57600080fd5b6000602082840312156126fe57600080fd5b8135611e6381611e6a565b600060a0820173ffffffffffffffffffffffffffffffffffffffff881683526020878185015286604085015260a0606085015281865180845260c08601915060c08160051b870101935082880160005b828110156127a5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff408887030184526127938683516123c6565b95509284019290840190600101612759565b505050505082810360808401526127bc81856123c6565b98975050505050505050565b600080604083850312156127db57600080fd5b825167ffffffffffffffff808211156127f357600080fd5b6127ff868387016121fe565b9350602085015191508082111561281557600080fd5b50612822858286016121fe565b9150509250929050565b82815260406020820152600061129e60408301846123c6565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261287a57600080fd5b830160208101925035905067ffffffffffffffff81111561289a57600080fd5b8060051b3603821315611b8a57600080fd5b801515811461131957600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126128ef57600080fd5b830160208101925035905067ffffffffffffffff81111561290f57600080fd5b606081023603821315611b8a57600080fd5b818352600060208085019450826000805b8681101561299157823561294581611e6a565b73ffffffffffffffffffffffffffffffffffffffff1688528284013560ff8116808214612970578384fd5b89860152506040838101359089015260609788019790920191600101612932565b50959695505050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126129d257600080fd5b830160208101925035905067ffffffffffffffff8111156129f257600080fd5b803603821315611b8a57600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196506005915085821b81018560005b88811015612b5b578383038a5281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612aa457600080fd5b880160608135612ab381611e6a565b73ffffffffffffffffffffffffffffffffffffffff168552612ad782890183612845565b828a8801528083880152608092507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811115612b1257600080fd5b881b808288850137860190506040612b2c8482018561299d565b9450838884030182890152612b448484018683612a01565b9e8b019e9750505093880193505050600101612a65565b509098975050505050505050565b6000602080835260c083018435828501526040828601358186015260608187013581870152612b9a81880188612845565b60a060808981018290529582905260e095868a01600584901b8b0188018560005b86811015612d85577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff208e840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81893603018112612c1c57600080fd5b88018035368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff21018112612c5157600080fd5b86855281018035612c6181611e6a565b73ffffffffffffffffffffffffffffffffffffffff90811686890152818f013590612c8b826128ac565b901515868a0152818d013590612ca082611e6a565b90811660c0870152818c013590612cb682611e6a565b908116868f01528188013590612ccb82611e6a565b16610100860152612cde818901826128ba565b8e610120880152612cf461016088018284612921565b915050612d0460c08301836128ba565b92507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8087830301610140880152612d3c828483612921565b925050508d8201358e8601528b8201358c860152612d5c8b830183612845565b92508582038c870152612d70828483612a4a565b968f019695505050918c019150600101612bbb565b5050612d93838e018e61299d565b9a5098507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c820301848d0152612dcb818b8b612a01565b9d9c50505050505050505050505050565b60008060408385031215612def57600080fd5b505080516020909101519092909150565b600060208284031215612e1257600080fd5b5051919050565b600060208284031215612e2b57600080fd5b8151611e63816128ac565b60008251612647818460208701612195565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82815260406020820152600061129e604083018461237c565b602081526000611e63602083018461237c56fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
    "sourceMap": "484:1277:170:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6596:13:21;;;;;;;4112:69:167;;;4156:14;;;;;;;;;;;;;;4112:69;484:1277:170;3674:271:167;;;;;;;;;;-1:-1:-1;3674:271:167;;;;;:::i;:::-;;:::i;:::-;;;516:14:227;;509:22;491:41;;479:2;464:18;3674:271:167;;;;;;;;815:867:170;;;;;;;;;;-1:-1:-1;815:867:170;;;;;:::i;:::-;;:::i;4385:1815:167:-;;;;;;;;;;-1:-1:-1;4385:1815:167;;;;;:::i;:::-;;:::i;:::-;;;3686:25:227;;;3674:2;3659:18;4385:1815:167;3540:177:227;3411:36:167;;;;;;;;;;-1:-1:-1;3411:36:167;;;;;;;;;;;3927:42:227;3915:55;;;3897:74;;3885:2;3870:18;3411:36:167;3722:255:227;3379:26:167;;;;;;;;;;-1:-1:-1;3379:26:167;;;;;;;;3302:30;;;;;;;;;;-1:-1:-1;3302:30:167;;;;;;;;;;;3338:35;;;;;;;;;;;;;;;;4204:142;;;;;;;;;;-1:-1:-1;4204:142:167;;;;;:::i;:::-;;:::i;6252:2883::-;;;;;;:::i;:::-;;:::i;3674:271::-;3759:4;3782:55;;;3797:40;3782:55;;:104;;-1:-1:-1;3841:45:167;;;3856:30;3841:45;3782:104;:156;;;-1:-1:-1;952:25:35;937:40;;;;3902:36:167;3775:163;3674:271;-1:-1:-1;;3674:271:167:o;815:867:170:-;1041:95;1060:10;1072:11;1085:15;1102:17;1121:14;;1041:18;:95::i;:::-;1147:15;;;1226:53;;;;1237:14;1226:53;:::i;:::-;1146:133;;-1:-1:-1;1146:133:170;-1:-1:-1;1146:133:170;-1:-1:-1;1290:42:170;:30;;;1146:133;1330:1;1290:30;:42::i;:::-;1342:58;:30;;;1373:7;1382:17;1342:30;:58::i;:::-;1410:23;1436:70;:26;;;1463:19;1484:21;1436:26;:70::i;:::-;1410:96;-1:-1:-1;1633:42:170;:30;;;1664:7;1673:1;1633:30;:42::i;:::-;1031:651;;;;815:867;;;;;;:::o;4385:1815:167:-;3291:13:21;;4467:7:167;;3291:13:21;;;;;3290:14;;3336:34;;;;-1:-1:-1;3369:1:21;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:21;1702:19:29;:23;;;3376:55:21;;-1:-1:-1;3414:12:21;;;;;:17;3376:55;3314:190;;;;;;;6417:2:227;3314:190:21;;;6399:21:227;6456:2;6436:18;;;6429:30;6495:34;6475:18;;;6468:62;6566:16;6546:18;;;6539:44;6600:19;;3314:190:21;;;;;;;;;3529:1;3514:16;;;;;;;;3540:65;;;;3590:4;3574:20;;;;;;;;3540:65;2261:21:22::1;:19;:21::i;:::-;4486:46:167::2;4546:4;4535:52;;;;;;;;;;;;:::i;:::-;4486:101:::0;-1:-1:-1;4799:16:167;;4773:10:::2;:43:::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;4891:30:::2;::::0;::::2;::::0;::::2;::::0;4902:10:::2;::::0;4799:6;;4891:30:::2;:::i;:::-;;;;;;;;5144:1;5085:56;5109:6;:22;;;:31;;;5085:23;:56::i;:::-;:60;5081:1074;;;5590:22;::::0;;::::2;::::0;:31;;5657;;::::2;::::0;5690:32:::2;::::0;;::::2;::::0;5590:146;;;;;5161:18:::2;::::0;5194:15:::2;::::0;5590:49:::2;::::0;;::::2;::::0;::::2;::::0;:146:::2;::::0;5690:32;5590:146:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;::::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;5561:9;5554:182:::0;;::::2;::::0;;::::2;::::0;;;::::2;;::::0;;;5555:4:::2;5554:182:::0;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;5867:10;::::2;5861:17:::0;5554:182;;-1:-1:-1;5554:182:167;;-1:-1:-1;5880:4:167::2;5857:28;5924:11:::0;;5920:95:::2;;5966:30;::::0;::::2;::::0;;::::2;::::0;::::2;3686:25:227::0;;;3659:18;;5966:30:167::2;3540:177:227::0;5920:95:167::2;-1:-1:-1::0;1517:4:89;1485:36;;;;;6042:12:167::2;:102:::0;-1:-1:-1;;5081:1074:167::2;191:36:41;6165:28:167;;;2303:20:22::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;3629:14:21::0;3625:99;;;3659:13;:21;;;;;;3699:14;;13165:36:227;;;3699:14:21;;13153:2:227;13138:18;3699:14:21;;;;;;;3625:99;3258:472;4385:1815:167;;;:::o;4204:142::-;4290:7;4316:23;;;;;;;;;;;;;;6252:2883;2261:21:22;:19;:21::i;:::-;6596:13:21;;;;;;;4112:69:167::1;;;4156:14;;;;;;;;;;;;;;4112:69;6503:17:::2;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;:24;;6531:1;6503:29:::0;6499:77:::2;;6555:10;;;;;;;;;;;;;;6499:77;6586:24;6613:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;6631:1;6613:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:38;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;6652:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;6670:1;6652:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:33;;;6613:73;;;;;;;:::i;:::-;:79;::::0;::::2;:73;::::0;;::::2;;:79:::0;;::::2;::::0;-1:-1:-1;6613:79:167::2;:::i;:::-;6586:106:::0;-1:-1:-1;6702:25:167::2;6730:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;6748:1;6730:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;::::0;;::::2;:::i;:::-;:39;::::0;::::2;::::0;::::2;::::0;::::2;:::i;:::-;6770:17;;::::0;::::2;:10:::0;:17:::2;:::i;:::-;6788:1;6770:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:34;;;6730:75;;;;;;;:::i;:::-;:81;::::0;::::2;:75;::::0;;::::2;;:81:::0;;::::2;::::0;-1:-1:-1;6730:81:167::2;:::i;:::-;6906:12;::::0;6702:109;;-1:-1:-1;6932:36:167;;6928:725:::2;;7033:4;::::0;7061:9:::2;::::0;6985:22:::2;::::0;;;7033:4:::2;::::0;;::::2;::::0;:10:::2;::::0;7061:9:::2;7088:69;6985:22:::0;7151:4:::2;1053:42:93::0;1150:25;;;1195:4;1188:20;1256:4;1243:18;;;933:344;7088:69:167::2;7218:18;::::0;;7234:1:::2;7218:18:::0;;;::::2;::::0;::::2;::::0;;;7175:8;;7201:62:::2;::::0;7218:18;::::2;::::0;::::2;;;;;;;;;;;;;;;;;-1:-1:-1::0;7238:24:167::2;::::0;;7260:1:::2;7238:24:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;7238:24:167::2;;;;;;;;;;;;;;;;;7201:16;:62::i;:::-;7281:16;::::0;;7295:1:::2;7281:16:::0;;::::2;::::0;::::2;::::0;;;;7033:278;::::2;::::0;;;;;;;::::2;::::0;;;;;;;;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;::::0;;::::2;::::0;::::2;::::0;::::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;:::i;:::-;7391:12:::0;;6984:327;;-1:-1:-1;6984:327:167;-1:-1:-1;7391:16:167;7387:85:::2;;7434:23;;;;;;;;;;;;;;7387:85;7551:10:::0;;:14;7547:96:::2;;7585:9;::::0;;:43:::2;::::0;;;;:9:::2;::::0;;::::2;::::0;:13:::2;::::0;:43:::2;::::0;:9:::2;::::0;7624:3;;7585:43:::2;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;7547:96;6970:683;;6928:725;7708:10;::::0;7663:60:::2;::::0;7708:10:::2;7663:36:::0;;::::2;::::0;7708:10;;::::2;;7721:1;7663:36;:60::i;:::-;7778:10;::::0;7733:76:::2;::::0;7778:10:::2;7733:36:::0;;::::2;::::0;7778:10;;::::2;;7791:17;7733:36;:76::i;:::-;7863:10;::::0;:33:::2;::::0;;;;7820:18:::2;::::0;;;7863:10;;;::::2;;;::::0;:21:::2;::::0;:33:::2;::::0;7885:10;;7863:33:::2;;;:::i;:::-;;::::0;::::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7986:10;::::0;7819:77;;-1:-1:-1;7819:77:167;-1:-1:-1;7941:60:167::2;::::0;7986:10:::2;7941:36:::0;;::::2;::::0;7986:10;;::::2;;7999:1;7941:36;:60::i;:::-;8091:49;::::0;;;;8134:4:::2;8091:49;::::0;::::2;3897:74:227::0;8068:20:167::2;::::0;8091:34:::2;::::0;::::2;::::0;::::2;::::0;3870:18:227;;8091:49:167::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8068:72;;8169:19;8154:12;:34;8150:120;;;8211:48;::::0;::::2;::::0;;::::2;::::0;::::2;28162:25:227::0;;;28203:18;;;28196:34;;;28135:18;;8211:48:167::2;27988:248:227::0;8150:120:167::2;8283:16:::0;;8279:110:::2;;8315:63;:37;::::0;::::2;8353:10;8365:12:::0;8315:37:::2;:63::i;:::-;8479:50;::::0;;;;8523:4:::2;8479:50;::::0;::::2;3897:74:227::0;8455:21:167::2;::::0;8479:35:::2;::::0;::::2;::::0;::::2;::::0;3870:18:227;;8479:50:167::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8455:74:::0;-1:-1:-1;8543:17:167;;8539:113:::2;;8576:65;:38;::::0;::::2;8615:10;8627:13:::0;8576:38:::2;:65::i;:::-;9067:61;9093:10;9106:21;9067:17;:61::i;:::-;6420:2715;;;;;;;2303:20:22::0;1716:1;2809:7;:22;2629:209;2303:20;6252:2883:167;;:::o;9184:262::-;6596:13:21;;;;;;;4112:69:167;;;4156:14;;;;;;;;;;;;;;4112:69;9374:10:::1;::::0;;;::::1;;;9352;:33;9348:92;;9408:21;::::0;::::1;::::0;;9418:10:::1;9408:21;::::0;::::1;3897:74:227::0;3870:18;;9408:21:167::1;3722:255:227::0;9348:92:167::1;9184:262:::0;;;;;;:::o;1818:573:27:-;2143:10;;;2142:62;;-1:-1:-1;2159:39:27;;;;;2183:4;2159:39;;;28476:34:227;2159:15:27;28546::227;;;28526:18;;;28519:43;2159:15:27;;;;;28388:18:227;;2159:39:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;;;;28775:2:227;2121:163:27;;;28757:21:227;28814:2;28794:18;;;28787:30;28853:34;28833:18;;;28826:62;28924:24;28904:18;;;28897:52;28966:19;;2121:163:27;28573:418:227;2121:163:27;2321:62;;29200:42:227;29188:55;;2321:62:27;;;29170:74:227;29260:18;;;29253:34;;;2294:90:27;;2314:5;;2344:22;;29143:18:227;;2321:62:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:19;:90::i;:::-;1818:573;;;:::o;4693:224:29:-;4792:12;4823:87;4845:6;4853:4;4859:5;4823:87;;;;;;;;;;;;;;;;;:21;:87::i;:::-;4816:94;4693:224;-1:-1:-1;;;;4693:224:29:o;2336:287:22:-;1759:1;2468:7;;:19;2460:63;;;;;;;29500:2:227;2460:63:22;;;29482:21:227;29539:2;29519:18;;;29512:30;29578:33;29558:18;;;29551:61;29629:18;;2460:63:22;29298:355:227;2460:63:22;1759:1;2598:7;:18;2336:287::o;3951:65:167:-;;:::o;3332:365:86:-;3399:13;3428:8;:15;3447:1;3428:20;3424:59;;-1:-1:-1;3471:1:86;;3332:365;-1:-1:-1;3332:365:86:o;3424:59::-;-1:-1:-1;3674:4:86;3660:19;3654:26;3651:1;3646:35;;3332:365::o;7166:2290:87:-;7301:18;7359:24;7400:14;:21;7386:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7386:36:87;;7359:63;;7571:21;7645:1;7621:14;:21;:25;:57;;7677:1;7621:57;;;7649:14;:21;7673:1;7649:25;7621:57;7599:11;:18;7595:1;:22;:84;7571:108;;7694:26;7739:13;7723:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7694:59;;7767:14;7817:17;3283:4:159;3277:11;;3315:1;3301:16;;2288:10:87;3348:4:159;3337:16;;3330:27;2326:4:87;3377:16:159;;;3370:27;2211:16:87;3423::159;;3410:30;;;3277:11;2172:169:87;7817:17;7799:7;7807:6;7799:15;;;;;;;;:::i;:::-;;;;;;:35;;;;7854:9;7849:140;7873:11;:18;7869:1;:22;7849:140;;;7916:8;;;;;;;7960:11;7972:1;7960:14;;;;;;;;:::i;:::-;;;;;;;7942:7;7950:6;7942:15;;;;;;;;:::i;:::-;;;;;;;;;;:32;7893:3;;7849:140;;;-1:-1:-1;8007:21:87;;:25;8003:1408;;8052:8;;;;;;;8096:7;8078;8086:6;8078:15;;;;;;;;:::i;:::-;;;;;;:25;;;;8127:9;8122:1275;8146:14;:21;8142:1;:25;8122:1275;;;8824:284;8890:14;8905:1;8890:17;;;;;;;;:::i;:::-;;;;;;;:24;;;8944:81;8973:51;8998:14;9013:1;8998:17;;;;;;;;:::i;:::-;;;;;;;:25;;;4081:13:146;;4096:4;4077:24;;;4058:17;;4048:54;;3908:210;8973:51:87;7389:34:33;7189:15;7376:48;;;7444:4;7437:18;;;;7495:4;7479:21;;;7120:396;8944:81:87;9055:14;9070:1;9055:17;;;;;;;;:::i;:::-;;;;;;;:27;;;8824:36;:284::i;:::-;8196:1010;;9164:19;;;;;;;;3686:25:227;;;3659:18;;9164:19:87;3540:177:227;8196:1010:87;9257:14;9272:1;9257:17;;;;;;;;:::i;:::-;;;;;;;:24;;;9241:42;;9228:7;9236:1;9228:10;;;;;;;;:::i;:::-;;;;;;:55;;;;;9305:8;;;;;;;9353:14;9368:1;9353:17;;;;;;;;:::i;:::-;;;;;;;:25;;;9335:7;9343:6;9335:15;;;;;;;;:::i;:::-;;;;;;;;;;:43;8169:3;;8122:1275;;;;8003:1408;-1:-1:-1;9432:7:87;7166:2290;-1:-1:-1;;;;;7166:2290:87:o;941:175:27:-;1050:58;;29200:42:227;29188:55;;1050:58:27;;;29170:74:227;29260:18;;;29253:34;;;1023:86:27;;1043:5;;1073:23;;29143:18:227;;1050:58:27;28996:297:227;2647:312:29;2761:6;2736:21;:31;;2728:73;;;;;;;29860:2:227;2728:73:29;;;29842:21:227;29899:2;29879:18;;;29872:30;29938:31;29918:18;;;29911:59;29987:18;;2728:73:29;29658:353:227;2728:73:29;2813:12;2831:9;:14;;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;;;;30428:2:227;2874:78:29;;;30410:21:227;30467:2;30447:18;;;30440:30;30506:34;30486:18;;;30479:62;30577:28;30557:18;;;30550:56;30623:19;;2874:78:29;30226:422:227;5196:642:27;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;;;;31105:2:227;5720:111:27;;;31087:21:227;31144:2;31124:18;;;31117:30;31183:34;31163:18;;;31156:62;31254:12;31234:18;;;31227:40;31284:19;;5720:111:27;30903:406:227;5165:446:29;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;31516:2:227;5354:81:29;;;31498:21:227;31555:2;31535:18;;;31528:30;31594:34;31574:18;;;31567:62;31665:8;31645:18;;;31638:36;31691:19;;5354:81:29;31314:402:227;5354:81:29;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:29:o;1014:366:34:-;1120:4;1137:17;1156:24;1184:33;1201:4;1207:9;1184:16;:33::i;:::-;1136:81;;-1:-1:-1;1136:81:34;-1:-1:-1;1256:26:34;1247:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1299:6;1286:19;;:9;:19;;;1247:58;1246:127;;;;1322:51;1349:6;1357:4;1363:9;1322:26;:51::i;:::-;1227:146;1014:366;-1:-1:-1;;;;;;1014:366:34:o;4108:223:29:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;1702:19;;;;8113:60;;;;;;;32404:2:227;8113:60:29;;;32386:21:227;32443:2;32423:18;;;32416:30;32482:31;32462:18;;;32455:59;32531:18;;8113:60:29;32202:353:227;8113:60:29;-1:-1:-1;8208:10:29;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;2145:730:33:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:33;;-1:-1:-1;2822:35:33;2259:610;2145:730;;;;;:::o;1786:473:34:-;1929:4;1946:12;1960:19;1983:6;:17;;2037:34;;;2073:4;2079:9;2014:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:116;;;;2014:75;1983:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:154;;;;2117:7;:42;;;;;2157:2;2140:6;:13;:19;;2117:42;:134;;;;-1:-1:-1;2175:29:34;;2216:34;;2175:29;;;;;;;;;;;;:::i;:::-;:76;;1786:473;-1:-1:-1;;;;;;1786:473:34:o;8821:540:29:-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;5009:1456:33:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:33;;-1:-1:-1;6123:30:33;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;33493:25:227;;;33566:4;33554:17;;33534:18;;;33527:45;;;;33588:18;;;33581:34;;;33631:18;;;33624:34;;;6276:24:33;;33465:19:227;;6276:24:33;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:33;;;;;;-1:-1:-1;;6314:20:33;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:33;;-1:-1:-1;5009:1456:33;;;;;;;;:::o;14:332:227:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:227:o;543:154::-;629:42;622:5;618:54;611:5;608:65;598:93;;687:1;684;677:12;702:1005;808:6;816;824;832;840;848;901:3;889:9;880:7;876:23;872:33;869:53;;;918:1;915;908:12;869:53;957:9;944:23;976:31;1001:5;976:31;:::i;:::-;1026:5;-1:-1:-1;1083:2:227;1068:18;;1055:32;1096:33;1055:32;1096:33;:::i;:::-;1148:7;-1:-1:-1;1202:2:227;1187:18;;1174:32;;-1:-1:-1;1253:2:227;1238:18;;1225:32;;-1:-1:-1;1308:3:227;1293:19;;1280:33;1332:18;1362:14;;;1359:34;;;1389:1;1386;1379:12;1359:34;1427:6;1416:9;1412:22;1402:32;;1472:7;1465:4;1461:2;1457:13;1453:27;1443:55;;1494:1;1491;1484:12;1443:55;1534:2;1521:16;1560:2;1552:6;1549:14;1546:34;;;1576:1;1573;1566:12;1546:34;1621:7;1616:2;1607:6;1603:2;1599:15;1595:24;1592:37;1589:57;;;1642:1;1639;1632:12;1589:57;1673:2;1669;1665:11;1655:21;;1695:6;1685:16;;;;;702:1005;;;;;;;;:::o;1712:184::-;1764:77;1761:1;1754:88;1861:4;1858:1;1851:15;1885:4;1882:1;1875:15;1901:253;1973:2;1967:9;2015:4;2003:17;;2050:18;2035:34;;2071:22;;;2032:62;2029:88;;;2097:18;;:::i;:::-;2133:2;2126:22;1901:253;:::o;2159:334::-;2230:2;2224:9;2286:2;2276:13;;2291:66;2272:86;2260:99;;2389:18;2374:34;;2410:22;;;2371:62;2368:88;;;2436:18;;:::i;:::-;2472:2;2465:22;2159:334;;-1:-1:-1;2159:334:227:o;2498:245::-;2546:4;2579:18;2571:6;2568:30;2565:56;;;2601:18;;:::i;:::-;-1:-1:-1;2658:2:227;2646:15;2663:66;2642:88;2732:4;2638:99;;2498:245::o;2748:462::-;2790:5;2843:3;2836:4;2828:6;2824:17;2820:27;2810:55;;2861:1;2858;2851:12;2810:55;2897:6;2884:20;2928:48;2944:31;2972:2;2944:31;:::i;:::-;2928:48;:::i;:::-;3001:2;2992:7;2985:19;3047:3;3040:4;3035:2;3027:6;3023:15;3019:26;3016:35;3013:55;;;3064:1;3061;3054:12;3013:55;3129:2;3122:4;3114:6;3110:17;3103:4;3094:7;3090:18;3077:55;3177:1;3152:16;;;3170:4;3148:27;3141:38;;;;3156:7;2748:462;-1:-1:-1;;;2748:462:227:o;3215:320::-;3283:6;3336:2;3324:9;3315:7;3311:23;3307:32;3304:52;;;3352:1;3349;3342:12;3304:52;3392:9;3379:23;3425:18;3417:6;3414:30;3411:50;;;3457:1;3454;3447:12;3411:50;3480:49;3521:7;3512:6;3501:9;3497:22;3480:49;:::i;4709:412::-;4821:6;4874:2;4862:9;4853:7;4849:23;4845:32;4842:52;;;4890:1;4887;4880:12;4842:52;4930:9;4917:23;4963:18;4955:6;4952:30;4949:50;;;4995:1;4992;4985:12;4949:50;5018:22;;5074:2;5056:16;;;5052:25;5049:45;;;5090:1;5087;5080:12;5126:467;5233:6;5241;5294:2;5282:9;5273:7;5269:23;5265:32;5262:52;;;5310:1;5307;5300:12;5262:52;5350:9;5337:23;5383:18;5375:6;5372:30;5369:50;;;5415:1;5412;5405:12;5369:50;5438:22;;5494:3;5476:16;;;5472:26;5469:46;;;5511:1;5508;5501:12;5469:46;5534:2;5583;5568:18;;;;5555:32;;-1:-1:-1;;;5126:467:227:o;5598:612::-;5700:6;5708;5716;5769:2;5757:9;5748:7;5744:23;5740:32;5737:52;;;5785:1;5782;5775:12;5737:52;5824:9;5811:23;5843:31;5868:5;5843:31;:::i;:::-;5893:5;-1:-1:-1;5950:2:227;5935:18;;5922:32;5963:33;5922:32;5963:33;:::i;:::-;6015:7;-1:-1:-1;6073:2:227;6058:18;;6045:32;6100:18;6089:30;;6086:50;;;6132:1;6129;6122:12;6086:50;6155:49;6196:7;6187:6;6176:9;6172:22;6155:49;:::i;:::-;6145:59;;;5598:612;;;;;:::o;6630:250::-;6715:1;6725:113;6739:6;6736:1;6733:13;6725:113;;;6815:11;;;6809:18;6796:11;;;6789:39;6761:2;6754:10;6725:113;;;-1:-1:-1;;6872:1:227;6854:16;;6847:27;6630:250::o;6885:441::-;6938:5;6991:3;6984:4;6976:6;6972:17;6968:27;6958:55;;7009:1;7006;6999:12;6958:55;7038:6;7032:13;7069:48;7085:31;7113:2;7085:31;:::i;7069:48::-;7142:2;7133:7;7126:19;7188:3;7181:4;7176:2;7168:6;7164:15;7160:26;7157:35;7154:55;;;7205:1;7202;7195:12;7154:55;7218:77;7292:2;7285:4;7276:7;7272:18;7265:4;7257:6;7253:17;7218:77;:::i;7331:709::-;7396:5;7449:3;7442:4;7434:6;7430:17;7426:27;7416:55;;7467:1;7464;7457:12;7416:55;7496:6;7490:13;7522:4;7545:18;7541:2;7538:26;7535:52;;;7567:18;;:::i;:::-;7613:2;7610:1;7606:10;7636:28;7660:2;7656;7652:11;7636:28;:::i;:::-;7698:15;;;7768;;;7764:24;;;7729:12;;;;7800:15;;;7797:35;;;7828:1;7825;7818:12;7797:35;7864:2;7856:6;7852:15;7841:26;;7876:135;7892:6;7887:3;7884:15;7876:135;;;7958:10;;7946:23;;7909:12;;;;7989;;;;7876:135;;8045:1508;8166:6;8219:2;8207:9;8198:7;8194:23;8190:32;8187:52;;;8235:1;8232;8225:12;8187:52;8268:9;8262:16;8297:18;8338:2;8330:6;8327:14;8324:34;;;8354:1;8351;8344:12;8324:34;8377:22;;;;8433:4;8415:16;;;8411:27;8408:47;;;8451:1;8448;8441:12;8408:47;8477:22;;:::i;:::-;8529:2;8523:9;8541:33;8566:7;8541:33;:::i;:::-;8583:22;;8644:2;8636:11;;8630:18;8660:16;;;8657:36;;;8689:1;8686;8679:12;8657:36;8712:17;;8763:4;8745:16;;;8741:27;8738:47;;;8781:1;8778;8771:12;8738:47;8809:22;;:::i;:::-;8861:2;8855:9;8873:33;8898:7;8873:33;:::i;:::-;8915:24;;8978:2;8970:11;;8964:18;8994:16;;;8991:36;;;9023:1;9020;9013:12;8991:36;9061:55;9108:7;9097:8;9093:2;9089:17;9061:55;:::i;:::-;9056:2;9047:7;9043:16;9036:81;;9156:2;9152;9148:11;9142:18;9185:2;9175:8;9172:16;9169:36;;;9201:1;9198;9191:12;9169:36;9239:67;9298:7;9287:8;9283:2;9279:17;9239:67;:::i;:::-;9234:2;9225:7;9221:16;9214:93;;9339:7;9334:2;9327:5;9323:14;9316:31;;;9386:2;9382;9378:11;9372:18;9415:2;9405:8;9402:16;9399:36;;;9431:1;9428;9421:12;9399:36;9467:55;9514:7;9503:8;9499:2;9495:17;9467:55;:::i;:::-;9462:2;9451:14;;9444:79;-1:-1:-1;9455:5:227;8045:1508;-1:-1:-1;;;;;8045:1508:227:o;9558:329::-;9599:3;9637:5;9631:12;9664:6;9659:3;9652:19;9680:76;9749:6;9742:4;9737:3;9733:14;9726:4;9719:5;9715:16;9680:76;:::i;:::-;9801:2;9789:15;9806:66;9785:88;9776:98;;;;9876:4;9772:109;;9558:329;-1:-1:-1;;9558:329:227:o;9892:435::-;9945:3;9983:5;9977:12;10010:6;10005:3;9998:19;10036:4;10065:2;10060:3;10056:12;10049:19;;10102:2;10095:5;10091:14;10123:1;10133:169;10147:6;10144:1;10141:13;10133:169;;;10208:13;;10196:26;;10242:12;;;;10277:15;;;;10169:1;10162:9;10133:169;;;-1:-1:-1;10318:3:227;;9892:435;-1:-1:-1;;;;;9892:435:227:o;10332:1278::-;10554:4;10583:42;10664:2;10656:6;10652:15;10641:9;10634:34;10704:2;10699;10688:9;10684:18;10677:30;10762:2;10753:6;10747:13;10743:22;10738:2;10727:9;10723:18;10716:50;10813:2;10805:6;10801:15;10795:22;10855:4;10848;10837:9;10833:20;10826:34;10922:2;10907:12;10901:19;10897:28;10891:3;10880:9;10876:19;10869:57;10981:2;10967:12;10963:21;10957:28;10935:50;;11022:4;11016:3;11005:9;11001:19;10994:33;11050:53;11098:3;11087:9;11083:19;11067:14;11050:53;:::i;:::-;11036:67;;11158:2;11144:12;11140:21;11134:28;11112:50;;11227:66;11215:9;11207:6;11203:22;11199:95;11193:3;11182:9;11178:19;11171:124;11315:52;11360:6;11344:14;11315:52;:::i;:::-;11304:63;;;11416:2;11408:6;11404:15;11398:22;11482:66;11470:9;11465:3;11461:19;11457:92;11451:3;11440:9;11436:19;11429:121;11567:37;11600:3;11584:14;11567:37;:::i;11615:421::-;11840:2;11829:9;11822:21;11803:4;11866:44;11906:2;11895:9;11891:18;11883:6;11866:44;:::i;:::-;11958:9;11950:6;11946:22;11941:2;11930:9;11926:18;11919:50;11986:44;12023:6;12015;11986:44;:::i;:::-;11978:52;11615:421;-1:-1:-1;;;;;11615:421:227:o;12041:785::-;12200:6;12208;12216;12224;12277:3;12265:9;12256:7;12252:23;12248:33;12245:53;;;12294:1;12291;12284:12;12245:53;12326:9;12320:16;12345:31;12370:5;12345:31;:::i;:::-;12445:2;12430:18;;12424:25;12395:5;;-1:-1:-1;12458:33:227;12424:25;12458:33;:::i;:::-;12562:2;12547:18;;12541:25;12510:7;;-1:-1:-1;12575:33:227;12541:25;12575:33;:::i;:::-;12678:2;12663:18;;12657:25;12627:7;;-1:-1:-1;12705:18:227;12694:30;;12691:50;;;12737:1;12734;12727:12;12691:50;12760:60;12812:7;12803:6;12792:9;12788:22;12760:60;:::i;:::-;12750:70;;;12041:785;;;;;;;:::o;13212:642::-;13343:4;13349:6;13409:11;13396:25;13499:66;13488:8;13472:14;13468:29;13464:102;13444:18;13440:127;13430:155;;13581:1;13578;13571:12;13430:155;13608:33;;13660:20;;;-1:-1:-1;13703:18:227;13692:30;;13689:50;;;13735:1;13732;13725:12;13689:50;13768:4;13756:17;;-1:-1:-1;13819:1:227;13815:14;;;13799;13795:35;13785:46;;13782:66;;;13844:1;13841;13834:12;13859:184;13911:77;13908:1;13901:88;14008:4;14005:1;13998:15;14032:4;14029:1;14022:15;14048:394;14152:4;14210:11;14197:25;14300:66;14289:8;14273:14;14269:29;14265:102;14245:18;14241:127;14231:155;;14382:1;14379;14372:12;14231:155;14403:33;;;;;14048:394;-1:-1:-1;;14048:394:227:o;14447:384::-;14541:4;14599:11;14586:25;14689:66;14678:8;14662:14;14658:29;14654:102;14634:18;14630:127;14620:155;;14771:1;14768;14761:12;14836:630;14952:4;14958:6;15018:11;15005:25;15108:66;15097:8;15081:14;15077:29;15073:102;15053:18;15049:127;15039:155;;15190:1;15187;15180:12;15039:155;15217:33;;15269:20;;;-1:-1:-1;15312:18:227;15301:30;;15298:50;;;15344:1;15341;15334:12;15298:50;15377:4;15365:17;;-1:-1:-1;15436:4:227;15424:17;;15408:14;15404:38;15394:49;;15391:69;;;15456:1;15453;15446:12;15471:247;15530:6;15583:2;15571:9;15562:7;15558:23;15554:32;15551:52;;;15599:1;15596;15589:12;15551:52;15638:9;15625:23;15657:31;15682:5;15657:31;:::i;15723:1456::-;16188:4;16236:3;16225:9;16221:19;16279:42;16271:6;16267:55;16256:9;16249:74;16342:2;16380:6;16375:2;16364:9;16360:18;16353:34;16423:6;16418:2;16407:9;16403:18;16396:34;16466:3;16461:2;16450:9;16446:18;16439:31;16490:6;16525;16519:13;16556:6;16548;16541:22;16594:3;16583:9;16579:19;16572:26;;16657:3;16647:6;16644:1;16640:14;16629:9;16625:30;16621:40;16607:54;;16696:2;16688:6;16684:15;16717:1;16727:325;16741:6;16738:1;16735:13;16727:325;;;16830:66;16818:9;16810:6;16806:22;16802:95;16797:3;16790:108;16921:51;16965:6;16956;16950:13;16921:51;:::i;:::-;16911:61;-1:-1:-1;17030:12:227;;;;16995:15;;;;16763:1;16756:9;16727:325;;;16731:3;;;;;17101:9;17093:6;17089:22;17083:3;17072:9;17068:19;17061:51;17129:44;17166:6;17158;17129:44;:::i;:::-;17121:52;15723:1456;-1:-1:-1;;;;;;;;15723:1456:227:o;17184:614::-;17313:6;17321;17374:2;17362:9;17353:7;17349:23;17345:32;17342:52;;;17390:1;17387;17380:12;17342:52;17423:9;17417:16;17452:18;17493:2;17485:6;17482:14;17479:34;;;17509:1;17506;17499:12;17479:34;17532:72;17596:7;17587:6;17576:9;17572:22;17532:72;:::i;:::-;17522:82;;17650:2;17639:9;17635:18;17629:25;17613:41;;17679:2;17669:8;17666:16;17663:36;;;17695:1;17692;17685:12;17663:36;;17718:74;17784:7;17773:8;17762:9;17758:24;17718:74;:::i;:::-;17708:84;;;17184:614;;;;;:::o;17803:368::-;18046:6;18035:9;18028:25;18089:2;18084;18073:9;18069:18;18062:30;18009:4;18109:56;18161:2;18150:9;18146:18;18138:6;18109:56;:::i;18176:605::-;18272:5;18279:6;18339:3;18326:17;18421:66;18410:8;18394:14;18390:29;18386:102;18366:18;18362:127;18352:155;;18503:1;18500;18493:12;18352:155;18531:33;;18635:4;18622:18;;;-1:-1:-1;18583:21:227;;-1:-1:-1;18663:18:227;18652:30;;18649:50;;;18695:1;18692;18685:12;18649:50;18749:6;18746:1;18742:14;18726;18722:35;18715:5;18711:47;18708:67;;;18771:1;18768;18761:12;18786:118;18872:5;18865:13;18858:21;18851:5;18848:32;18838:60;;18894:1;18891;18884:12;18909:593;18990:5;18997:6;19057:3;19044:17;19139:66;19128:8;19112:14;19108:29;19104:102;19084:18;19080:127;19070:155;;19221:1;19218;19211:12;19070:155;19249:33;;19353:4;19340:18;;;-1:-1:-1;19301:21:227;;-1:-1:-1;19381:18:227;19370:30;;19367:50;;;19413:1;19410;19403:12;19367:50;19472:4;19464:6;19460:17;19444:14;19440:38;19433:5;19429:50;19426:70;;;19492:1;19489;19482:12;19507:892;19618:6;19613:3;19606:19;19588:3;19644:4;19673:2;19668:3;19664:12;19657:19;;19699:5;19722:1;19743;19753:621;19769:6;19764:3;19761:15;19753:621;;;19850:6;19837:20;19870:33;19895:7;19870:33;:::i;:::-;19941:42;19928:56;19916:69;;20026:15;;;20013:29;20078:4;20065:18;;20106:15;;;20096:43;;20135:1;20132;20125:12;20096:43;20159:12;;;20152:24;-1:-1:-1;20199:4:227;20250:15;;;20237:29;20223:12;;;20216:51;20290:4;20314:12;;;;20349:15;;;;19795:1;19786:11;19753:621;;;-1:-1:-1;20390:3:227;;19507:892;-1:-1:-1;;;;;;19507:892:227:o;20404:559::-;20462:5;20469:6;20529:3;20516:17;20611:66;20600:8;20584:14;20580:29;20576:102;20556:18;20552:127;20542:155;;20693:1;20690;20683:12;20542:155;20721:33;;20825:4;20812:18;;;-1:-1:-1;20773:21:227;;-1:-1:-1;20853:18:227;20842:30;;20839:50;;;20885:1;20882;20875:12;20839:50;20932:6;20916:14;20912:27;20905:5;20901:39;20898:59;;;20953:1;20950;20943:12;20968:325;21056:6;21051:3;21044:19;21108:6;21101:5;21094:4;21089:3;21085:14;21072:43;;21160:1;21153:4;21144:6;21139:3;21135:16;21131:27;21124:38;21026:3;21282:4;21212:66;21207:2;21199:6;21195:15;21191:88;21186:3;21182:98;21178:109;21171:116;;20968:325;;;;:::o;21298:1874::-;21422:6;21417:3;21410:19;21392:3;21448:4;21489:2;21484:3;21480:12;21514:11;21541;21534:18;;21571:1;21561:11;;21612:6;21608:2;21604:15;21597:5;21593:27;21643:5;21666:1;21676:1470;21690:6;21687:1;21684:13;21676:1470;;;21761:5;21755:4;21751:16;21746:3;21739:29;21820:6;21807:20;21906:66;21898:5;21882:14;21878:26;21874:99;21854:18;21850:124;21840:152;;21988:1;21985;21978:12;21840:152;22020:30;;22073:4;22105:21;;22139:33;22105:21;22139:33;:::i;:::-;22211:42;22198:56;22185:70;;22302:95;22380:16;;;22384:7;22302:95;:::i;:::-;22432:2;22427;22421:4;22417:13;22410:25;22470:12;22465:2;22459:4;22455:13;22448:35;22506:3;22496:13;;22542:66;22528:12;22525:84;22522:104;;;22622:1;22619;22612:12;22522:104;22655:21;;;22717:12;22702:13;;;22689:51;22763:19;;;-1:-1:-1;22805:4:227;22860:57;22900:16;;;22904:7;22860:57;:::i;:::-;22822:95;;22971:2;22964:4;22960:2;22956:13;22952:22;22947:2;22941:4;22937:13;22930:45;22996:70;23062:2;23058;23054:11;23038:14;23022;22996:70;:::i;:::-;23124:12;;;;22988:78;-1:-1:-1;;;23089:15:227;;;;-1:-1:-1;;;21712:1:227;21705:9;21676:1470;;;-1:-1:-1;23162:4:227;;21298:1874;-1:-1:-1;;;;;;;;21298:1874:227:o;23177:4136::-;23345:4;23374:2;23403;23392:9;23385:21;23444:3;23433:9;23429:19;23497:6;23484:20;23479:2;23468:9;23464:18;23457:48;23524:2;23587;23579:6;23575:15;23562:29;23557:2;23546:9;23542:18;23535:57;23611:2;23674;23666:6;23662:15;23649:29;23644:2;23633:9;23629:18;23622:57;23722:93;23811:2;23803:6;23799:15;23791:6;23722:93;:::i;:::-;23834:4;23857:3;23876:18;;;23869:30;;;23934:28;;;;23981:3;;24000:18;;;24064:1;24060:20;;;24045:36;;24041:45;;24109:12;24139:1;24149:2842;24163:12;24160:1;24157:19;24149:2842;;;24258:66;24246:9;24238:6;24234:22;24230:95;24225:3;24218:108;24378:6;24365:20;24471:66;24456:12;24440:14;24436:33;24432:106;24412:18;24408:131;24398:159;;24553:1;24550;24543:12;24398:159;24583:37;;24661:19;;24737:14;24733:26;;;24761:66;24729:99;24703:126;;24693:154;;24843:1;24840;24833:12;24693:154;24920:18;;;24875:32;;24966:21;;25000:33;24966:21;25000:33;:::i;:::-;25056:42;25135:16;;;25118:15;;;25111:41;25193:16;;;25180:30;;25223;25180;25223;:::i;:::-;25297:15;;25290:23;25273:15;;;25266:48;25355:16;;;25342:30;;25385:33;25342:30;25385:33;:::i;:::-;25456:16;;;25450:3;25438:16;;25431:42;25514:16;;;25501:30;;25544:33;25501:30;25544:33;:::i;:::-;25614:16;;;25597:15;;;25590:41;25672:16;;;25659:30;;25702:33;25659:30;25702:33;:::i;:::-;25773:16;25767:3;25755:16;;25748:42;25841:80;25904:16;;;25908:7;25841:80;:::i;:::-;25959:2;25953:3;25945:6;25941:16;25934:28;25989:98;26082:3;26074:6;26070:16;26054:14;26038;25989:98;:::i;:::-;25975:112;;;26138:81;26214:3;26205:7;26201:17;26192:7;26138:81;:::i;:::-;26100:119;;26282:66;26273:6;26265;26261:19;26257:92;26251:3;26243:6;26239:16;26232:118;26374:88;26455:6;26439:14;26423;26374:88;:::i;:::-;26363:99;;;;26523:2;26516:5;26512:14;26499:28;26494:2;26486:6;26482:15;26475:53;26589:2;26582:5;26578:14;26565:28;26560:2;26552:6;26548:15;26541:53;26645:91;26732:2;26725:5;26721:14;26714:5;26645:91;:::i;:::-;26607:129;;26782:6;26777:3;26773:16;26768:2;26760:6;26756:15;26749:41;26813:98;26907:3;26891:14;26875;26813:98;:::i;:::-;26969:12;;;;26803:108;-1:-1:-1;;;26934:15:227;;;;-1:-1:-1;24191:1:227;24184:9;24149:2842;;;24153:3;;27038:55;27089:2;27081:6;27077:15;27069:6;27038:55;:::i;:::-;27000:93;;;;27157:66;27145:9;27137:6;27133:22;27129:95;27124:2;27113:9;27109:18;27102:123;27242:65;27300:6;27284:14;27268;27242:65;:::i;:::-;27234:73;23177:4136;-1:-1:-1;;;;;;;;;;;;;23177:4136:227:o;27318:245::-;27397:6;27405;27458:2;27446:9;27437:7;27433:23;27429:32;27426:52;;;27474:1;27471;27464:12;27426:52;-1:-1:-1;;27497:16:227;;27553:2;27538:18;;;27532:25;27497:16;;27532:25;;-1:-1:-1;27318:245:227:o;27799:184::-;27869:6;27922:2;27910:9;27901:7;27897:23;27893:32;27890:52;;;27938:1;27935;27928:12;27890:52;-1:-1:-1;27961:16:227;;27799:184;-1:-1:-1;27799:184:227:o;30653:245::-;30720:6;30773:2;30761:9;30752:7;30748:23;30744:32;30741:52;;;30789:1;30786;30779:12;30741:52;30821:9;30815:16;30840:28;30862:5;30840:28;:::i;31721:287::-;31850:3;31888:6;31882:13;31904:66;31963:6;31958:3;31951:4;31943:6;31939:17;31904:66;:::i;32013:184::-;32065:77;32062:1;32055:88;32162:4;32159:1;32152:15;32186:4;32183:1;32176:15;32560:288;32735:6;32724:9;32717:25;32778:2;32773;32762:9;32758:18;32751:30;32698:4;32798:44;32838:2;32827:9;32823:18;32815:6;32798:44;:::i;33042:219::-;33191:2;33180:9;33173:21;33154:4;33211:44;33251:2;33240:9;33236:18;33228:6;33211:44;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "arb((uint256,uint256,uint256,((address,bool,(address,address,address),(address,uint8,uint256)[],(address,uint8,uint256)[]),uint256,uint256,(address,uint256[],bytes)[])[],bytes),uint256)": "c3b7c7c3",
    "initialize((address,(address,bytes,uint256[]),bytes))": "98da8d6a",
    "initialize(bytes)": "439fab91",
    "onTakeOrders(address,address,uint256,uint256,bytes)": "059bebe6",
    "sI9r()": "71c1dea7",
    "sI9rDispatch()": "89448c3a",
    "sI9rStore()": "61bb39e4",
    "sOrderBook()": "886d1650",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"internalType\":\"struct DeployerDiscoverableMetaV3ConstructionConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"badLender\",\"type\":\"address\"}],\"name\":\"BadLender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializeSignatureFn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"MinimumOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOrders\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inputs\",\"type\":\"uint256\"}],\"name\":\"NonZeroBeforeArbInputs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonZeroBeforeArbStack\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"unmeta\",\"type\":\"bytes\"}],\"name\":\"NotRainMetaV1\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expectedHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actualHash\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedMetaHash\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV3\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV3\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct OrderBookV3ArbOrderTakerConfigV1\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subject\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"meta\",\"type\":\"bytes\"}],\"name\":\"MetaV1\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minimumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumInput\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumIORatio\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"handleIO\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"contract IInterpreterV2\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"internalType\":\"struct EvaluableV2\",\"name\":\"evaluable\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validInputs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"internalType\":\"struct IO[]\",\"name\":\"validOutputs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct OrderV2\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"inputIOIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputIOIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"context\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedContextV1[]\",\"name\":\"signedContext\",\"type\":\"tuple[]\"}],\"internalType\":\"struct TakeOrderConfigV2[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TakeOrdersConfigV2\",\"name\":\"takeOrders\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"minimumSenderOutput\",\"type\":\"uint256\"}],\"name\":\"arb\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"orderBook\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV3\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV3\",\"name\":\"evaluableConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"implementationData\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderBookV3ArbOrderTakerConfigV1\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmountSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"takeOrdersData\",\"type\":\"bytes\"}],\"name\":\"onTakeOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9r\",\"outputs\":[{\"internalType\":\"contract IInterpreterV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rDispatch\",\"outputs\":[{\"internalType\":\"EncodedDispatch\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sI9rStore\",\"outputs\":[{\"internalType\":\"contract IInterpreterStoreV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sOrderBook\",\"outputs\":[{\"internalType\":\"contract IOrderBookV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BadLender(address)\":[{\"params\":{\"badLender\":\"The untrusted lender calling `onFlashLoan`.\"}}],\"MinimumOutput(uint256,uint256)\":[{\"params\":{\"actual\":\"The actual output that would be received by the sender.\",\"minimum\":\"The minimum output expected by the sender.\"}}],\"NotRainMetaV1(bytes)\":[{\"params\":{\"unmeta\":\"the bytes that are not meta.\"}}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"params\":{\"actualHash\":\"The hash of the metadata seen by the `IMetaV1` contract.\",\"expectedHash\":\"The hash expected by the `IMetaV1` contract.\"}}]},\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetaV1(address,uint256,bytes)\":{\"params\":{\"meta\":\"Rain metadata V1 compliant metadata bytes. https://github.com/rainprotocol/specs/blob/main/metadata-v1.md\",\"sender\":\"The msg.sender.\",\"subject\":\"The entity that the metadata is about. MAY be the address of the emitting contract (as `uint256`) OR anything else. The interpretation of the subject is context specific, so will often be a hash of some data/thing that this metadata is about.\"}}},\"kind\":\"dev\",\"methods\":{\"initialize(bytes)\":{\"details\":\"The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.\",\"params\":{\"data\":\"The initialization data.\"},\"returns\":{\"_0\":\"keccak256(\\\"ICloneableV2.initialize\\\") if successful.\"}},\"onTakeOrders(address,address,uint256,uint256,bytes)\":{\"params\":{\"inputAmountSent\":\"The amount of `inputToken` that was sent to `IOrderBookV3OrderTaker`.\",\"inputToken\":\"The token that was sent to `IOrderBookV3OrderTaker`.\",\"outputToken\":\"The token that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.\",\"takeOrdersData\":\"The data passed to `takeOrders` by the caller.\",\"totalOutputAmount\":\"The total amount of `outputToken` that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"BadLender(address)\":[{\"notice\":\"Thrown when the lender is not the trusted `OrderBook`.\"}],\"InitializeSignatureFn()\":[{\"notice\":\"Overloaded initialize function MUST revert with this error.\"}],\"Initializing()\":[{\"notice\":\"Thrown when calling functions while the contract is still initializing.\"}],\"InvalidSignature(uint256)\":[{\"notice\":\"Thrown when the ith signature from a list of signed contexts is invalid.\"}],\"MinimumOutput(uint256,uint256)\":[{\"notice\":\"Thrown when the minimum output for the sender is not met after the arb.\"}],\"NoOrders()\":[{\"notice\":\"Thrown when take orders is called with no orders.\"}],\"NonZeroBeforeArbInputs(uint256)\":[{\"notice\":\"Thrown when \\\"before arb\\\" wants inputs that we don't have.\"}],\"NonZeroBeforeArbStack()\":[{\"notice\":\"Thrown when the stack is not empty after the access control dispatch.\"}],\"NotRainMetaV1(bytes)\":[{\"notice\":\"Thrown when some bytes are expected to be rain meta and are not.\"}],\"UnexpectedMetaHash(bytes32,bytes32)\":[{\"notice\":\"Thrown when hashed metadata does NOT match the expected hash.\"}]},\"events\":{\"MetaV1(address,uint256,bytes)\":{\"notice\":\"An onchain wrapper to carry arbitrary Rain metadata. Assigns the sender to the metadata so that tooling can easily drop/ignore data from unknown sources. As metadata is about something, the subject MUST be provided.\"}},\"kind\":\"user\",\"methods\":{\"initialize(bytes)\":{\"notice\":\"Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \\\"ICloneableV2.initialize\\\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`.\"},\"onTakeOrders(address,address,uint256,uint256,bytes)\":{\"notice\":\"Called by `OrderBookV3` when `takeOrders` is called with non-zero data, if it caused a non-zero input amount. I.e. if the order(s) taker received some tokens. Input and output directions are relative to the `IOrderBookV3OrderTaker` contract. If the order(s) taker had an active debt from a flash loan then that debt will be paid _before_ calculating any input amounts sent. i.e. the debt is deducted from the input amount before this callback is called.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/concrete/GenericPoolOrderBookV3ArbOrderTaker.sol\":\"GenericPoolOrderBookV3ArbOrderTaker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":axelar-gmp-sdk-solidity/=lib/sushixswap-v2/lib/axelar-gmp-sdk-solidity/\",\":bitwise/=lib/rain.interpreter/src/lib/bitwise/\",\":bytecode/=lib/rain.interpreter/src/lib/bytecode/\",\":caller/=lib/rain.interpreter/src/lib/caller/\",\":compile/=lib/rain.interpreter/src/lib/compile/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eval/=lib/rain.interpreter/src/lib/eval/\",\":extern/=lib/rain.interpreter/src/lib/extern/\",\":forge-gas-snapshot/=lib/sushixswap-v2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":integrity/=lib/rain.interpreter/src/lib/integrity/\",\":ns/=lib/rain.interpreter/src/lib/ns/\",\":op/=lib/rain.interpreter/src/lib/op/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":parse/=lib/rain.interpreter/src/lib/parse/\",\":prb-math/=lib/rain.interpreter/lib/prb-math/src/\",\":prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/\",\":rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/\",\":rain.datacontract/=lib/rain.interpreter/lib/rain.datacontract/src/\",\":rain.erc1820/=lib/rain.erc1820/src/\",\":rain.extrospection/=lib/rain.factory/lib/rain.extrospection/\",\":rain.factory/=lib/rain.factory/\",\":rain.interpreter/=lib/rain.interpreter/\",\":rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/\",\":rain.lib.memkv/=lib/rain.lib.memkv/src/\",\":rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/\",\":rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/\",\":rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.metadata/=lib/rain.metadata/src/\",\":rain.solmem/=lib/rain.solmem/src/\",\":sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/\",\":state/=lib/rain.interpreter/src/lib/state/\",\":sushixswap-v2/=lib/sushixswap-v2/\",\":uniswap/=lib/rain.interpreter/src/lib/uniswap/\",\":v2-core/=lib/rain.interpreter/lib/v2-core/contracts/\",\":v2-periphery/=lib/rain.interpreter/lib/v2-periphery/contracts/\"]},\"sources\":{\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d\",\"dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/rain.factory/src/interface/ICloneableV2.sol\":{\"keccak256\":\"0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234\",\"dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP\"]},\"lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV3.sol\":{\"keccak256\":\"0xe333361bf503def41107d2e38acb421f11766e636ffe0728fef933097c66857b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://43b69e65c41a2cb13304d8d8b7fe31ee8d1cb55708b6cf60b799552bb09b4c1b\",\"dweb:/ipfs/QmXy4CDRjBVMezbH72uTkYJNrt6yQLVnjNkheD5773MKrn\"]},\"lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol\":{\"keccak256\":\"0xd6f76317b41d50fb6b3fbfcffa5fa8b4a3bb547a17bf52244f67f5c364fcd6bc\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://e7a35981e397564e85c53fab7b46bf8118328cfdb729264f946f7826c205f813\",\"dweb:/ipfs/QmfXnGW5RTDgqoMkp3k4E3eWBBS7hXWzmhw56XcfvB766E\"]},\"lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol\":{\"keccak256\":\"0x8fe347844f029b84087daae66742fb10aa9e44f94ac90af696318188aa922c19\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5eea5d2116f643db3ede89fd2dc3a5d293e35aec1d62a9daf6531f88a9656fb3\",\"dweb:/ipfs/Qmdys5MsEjgpXokb5FhMg96SYB6Bmf3frtVRvX74WrbKTc\"]},\"lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV1.sol\":{\"keccak256\":\"0x5e903fdb445cc16e63bb86d53eeb49172e2472cd7344a762c6d85684aec8251d\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5dab81bd2f092f392afbb295525c3602246ab5620de7630e84dab37b955f7e4d\",\"dweb:/ipfs/QmaGiCBSf2KjwjpVtJwG4k6iGqPKYs8dq6gkUYo9EFWkTg\"]},\"lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV2.sol\":{\"keccak256\":\"0xc98ea86cd5d633d01b4136258bc0026b3d4bade652f831b482867e97df0e5365\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d412df06ddccb1be19f6e962872297395546c591ccd42ccad91559aa0e5ee214\",\"dweb:/ipfs/QmebpvwxNtv9XNoKi9y8Ldqhzy3GWY5kwoSNDQL2vJHrbg\"]},\"lib/rain.interpreter/src/interface/deprecated/IInterpreterCallerV1.sol\":{\"keccak256\":\"0xdfccb8ca0e4673ac476d1ccfcd1ffa69300f910c41352cc51c3408a58bf095b2\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9a44b64873ed13c9c7d964e1d3b66dc2e80bb457563def325551bf796db8791c\",\"dweb:/ipfs/QmWTfH9qtwki5DFRAri1ouV7NVZ1mQzraz9eRumNEbcSNU\"]},\"lib/rain.interpreter/src/interface/deprecated/IInterpreterV1.sol\":{\"keccak256\":\"0xb58d3b75312da70f4fb7896dc07d8a3d77de0638d169db4acf6c246ddab0f518\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://970029663ca4321640ca0d577213e938046a3fe2995b580f9f7c8f0bfa34a3f3\",\"dweb:/ipfs/QmeZgH1RKqLgDh56FWQATBy8BCt6CyGiCuamrKY22QyCRz\"]},\"lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV3.sol\":{\"keccak256\":\"0x408f6c6fa3766cf7d24ffe1c98eb57b77af5bfbe946f266fd7a3b800de4ddb79\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://186b12c32030d2b7e4e81f1a11ac7c7a63b0f14b7dc1b6df50cbd2be7459bb69\",\"dweb:/ipfs/QmXRV3DGCoQtVxufMtiuXLvN3GF6YNTLyPLVVeoLL53sMg\"]},\"lib/rain.interpreter/src/interface/unstable/IInterpreterV2.sol\":{\"keccak256\":\"0xcf050192ba12f7eb129e0262cee4920cbd65bb331e7487cfc21151882464be50\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://10ff84f0acf532c5e11e69b7ab41c739ce4ad0f9193d347b5cc4a34f158774a8\",\"dweb:/ipfs/QmRvfB8jCdCwDdLrLHQh8yLLLv2eowpwjfwXgy2u629xew\"]},\"lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol\":{\"keccak256\":\"0xac53e84486e843acbabd6ba258550ba947c35c33a570e4615e57ff15a77d57e0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://e07c2907da9323f1d6d5b6557e87a904fdf1be3768ad64bb59655d060128bee4\",\"dweb:/ipfs/QmbukDZevfHYZ27yPqfmG1UFw8TsGbCRyH6Uc536QrtgHK\"]},\"lib/rain.interpreter/src/lib/caller/LibContext.sol\":{\"keccak256\":\"0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05\",\"dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF\"]},\"lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol\":{\"keccak256\":\"0x3949de1f4537cd262d54a06a64028343793c6110611c7b4967de3153de4b3b55\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9bdd88ec9a7dc671c33bf73e9fe1801bcf7d4a2eb4e6308186f8a7adc4b712dc\",\"dweb:/ipfs/Qme27jUCKETZ9ASPqVbyiQPGTj7ifgZdmRZcsJqgm5hkEW\"]},\"lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol\":{\"keccak256\":\"0x4f011d07a8fa4b24efccb02022bff68730d53c852424817a4ca3cfc134bbc455\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd0ffd2bdc5e2af1f2f67938d70e2ae694a0285a4fae4818530aa86edce400b1\",\"dweb:/ipfs/QmQAcoLvHatMANZpm5aP1vCaVm3xp1tF5MnZjQiX7AfiRe\"]},\"lib/rain.interpreter/src/lib/caller/LibEvaluable.sol\":{\"keccak256\":\"0xc3e649c4d698822ae81c4ec0814d2dd506e601795914a7af0883c5c40678ab21\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://901d9258689585e338aeb648d77ca083766c423dabc78db46285b3fb69fb12d1\",\"dweb:/ipfs/QmPVw7yuoDuqWorxpM7oWPhjSGRXhcEeu1dXQrjBDvpfrn\"]},\"lib/rain.interpreter/src/lib/ns/LibNamespace.sol\":{\"keccak256\":\"0x29574214b0e499343ea999d676764a18618485dece1cedc732ab73e779302153\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4de0c0b4d297bbe286bf2e6ec8ba38ef3ea93811826d910c00381df86e54661f\",\"dweb:/ipfs/QmdJv5EgqtuRo2iTdChUE5hjhJgtBhBzztYqPUXevU6J5y\"]},\"lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol\":{\"keccak256\":\"0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24\",\"dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35\"]},\"lib/rain.metadata/src/IMetaV1.sol\":{\"keccak256\":\"0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3\",\"dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs\"]},\"lib/rain.metadata/src/LibMeta.sol\":{\"keccak256\":\"0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d\",\"dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU\"]},\"lib/rain.solmem/src/lib/LibBytes.sol\":{\"keccak256\":\"0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353\",\"dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk\"]},\"lib/rain.solmem/src/lib/LibMemCpy.sol\":{\"keccak256\":\"0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102\",\"dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe\"]},\"lib/rain.solmem/src/lib/LibPointer.sol\":{\"keccak256\":\"0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7\",\"dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG\"]},\"lib/rain.solmem/src/lib/LibUint256Array.sol\":{\"keccak256\":\"0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6\",\"dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL\"]},\"src/abstract/OrderBookV3ArbCommon.sol\":{\"keccak256\":\"0xd639006096b170c49ffa6299d47879c244447862478823ca35e2aeb819785860\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://c39adbe01adbb7cc84d6375b70d090c45fc30b6ae9cbc2ecdb1289a33a524acf\",\"dweb:/ipfs/QmZsKJXbSFtdEbnTD4d8c4KJJjurwBectuCKcdiaBsakyW\"]},\"src/abstract/OrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0x44c98f7b979b896b26558e849713a35828f123f78eb420edcc6f4b60e1a584d4\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://73c5dc32c0eb67d5b2423e7f2dbcd59a84667c0f91e2a291e990f5e66e0812e0\",\"dweb:/ipfs/QmcYPxHjoEujNg3NQ4iU5kWWBY5YM262Ja3J4bBxQBRKbX\"]},\"src/concrete/GenericPoolOrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0x62b64d5b2f8f38f7d0519c1d0e1f073ae74b068c3ceb20bde530fe3b1fc81996\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://e6a3a5be4392646ccdb1c2f5f7b3d822a06edbf67d2b3e6bcfec20f1c7c34446\",\"dweb:/ipfs/QmSbTmf7BP76aUcnFMc5ye9iQwzp62S3qJu3YhGse548WU\"]},\"src/interface/deprecated/IOrderBookV2.sol\":{\"keccak256\":\"0xc4f99b2e74b48063eb0383184446e5ad65aa158e12519949e28bed62b49d88fb\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://1a2cdc0410026ffc686d4100505564a9dff28b2364cadfeb75b3eea4dde841dc\",\"dweb:/ipfs/QmXC1QtN2Go2RLH8bK9GrtsxfMLY5eKaksW53utMTaNuR8\"]},\"src/interface/ierc3156/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c\",\"dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB\"]},\"src/interface/ierc3156/IERC3156FlashLender.sol\":{\"keccak256\":\"0x1c14bc32c7483a68f5cb3ff65f64a8a32b279472525340033ce8e0b462fd1e72\",\"license\":\"CC0\",\"urls\":[\"bzz-raw://e25cbc0c4512d737fd9fb32f30af0f9bcccd10f28870c927057f6bcaac213dd4\",\"dweb:/ipfs/Qmey7YDkCTMXgoRDVHUbHRH6f4MJz6mBdfucp7v7bVy1ie\"]},\"src/interface/unstable/IOrderBookV3.sol\":{\"keccak256\":\"0x1aba9fbf5e9c2f410a2c24d56361718ac4ec6d62431ee07107bb83660740b6a1\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://12e803376fce4b36bcb7c228faa2aa5360b85688539485212f129b3467e23852\",\"dweb:/ipfs/QmV7oBCy2idxp8pY9yhGGcqbdpfVcqgpRvpJ1wYDNg7rZT\"]},\"src/interface/unstable/IOrderBookV3ArbOrderTaker.sol\":{\"keccak256\":\"0xcf557395c82abca1d66abf241a8435aeee7ee8d451a08e9a95cbd3d156c19091\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://c08f1c3f6bc2adae54badc1ace1f5d76bf3ebc7f7564cd971ed31f304f569452\",\"dweb:/ipfs/Qmc7CRZ17fzVTorhUbRTxwSGtRrHwFDpBvBuypt46WH8eb\"]},\"src/interface/unstable/IOrderBookV3OrderTaker.sol\":{\"keccak256\":\"0x256cda8259c6c344e80ea5db35c7899e2c6f337ca040653ebdf7527e2e1d776e\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5b26e4385457c5c18b0c4cb394d00662364912f082510df6015e0127059c05b9\",\"dweb:/ipfs/QmaQmiW8dDDAcfzRJZVavcZo9QLeFrN44obvRydJouJbL1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct DeployerDiscoverableMetaV3ConstructionConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "meta",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "badLender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BadLender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializeSignatureFn"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializing"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minimum",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MinimumOutput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoOrders"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "inputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NonZeroBeforeArbInputs"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonZeroBeforeArbStack"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "unmeta",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "NotRainMetaV1"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expectedHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actualHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedMetaHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV3",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV3",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "subject",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "meta",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetaV1",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct TakeOrdersConfigV2",
              "name": "takeOrders",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "minimumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumInput",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maximumIORatio",
                  "type": "uint256"
                },
                {
                  "internalType": "struct TakeOrderConfigV2[]",
                  "name": "orders",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct OrderV2",
                      "name": "order",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "owner",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "handleIO",
                          "type": "bool"
                        },
                        {
                          "internalType": "struct EvaluableV2",
                          "name": "evaluable",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "contract IInterpreterV2",
                              "name": "interpreter",
                              "type": "address"
                            },
                            {
                              "internalType": "contract IInterpreterStoreV1",
                              "name": "store",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "expression",
                              "type": "address"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validInputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        },
                        {
                          "internalType": "struct IO[]",
                          "name": "validOutputs",
                          "type": "tuple[]",
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint8",
                              "name": "decimals",
                              "type": "uint8"
                            },
                            {
                              "internalType": "uint256",
                              "name": "vaultId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "inputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "outputIOIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct SignedContextV1[]",
                      "name": "signedContext",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "signer",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "context",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "bytes",
                          "name": "signature",
                          "type": "bytes"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "minimumSenderOutput",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "arb"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OrderBookV3ArbOrderTakerConfigV1",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "orderBook",
                  "type": "address"
                },
                {
                  "internalType": "struct EvaluableConfigV3",
                  "name": "evaluableConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IExpressionDeployerV3",
                      "name": "deployer",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "bytecode",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "constants",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "implementationData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "inputToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "outputToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "inputAmountSent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalOutputAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "takeOrdersData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onTakeOrders"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9r",
          "outputs": [
            {
              "internalType": "contract IInterpreterV2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rDispatch",
          "outputs": [
            {
              "internalType": "EncodedDispatch",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sI9rStore",
          "outputs": [
            {
              "internalType": "contract IInterpreterStoreV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sOrderBook",
          "outputs": [
            {
              "internalType": "contract IOrderBookV3",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "initialize(bytes)": {
            "details": "The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.",
            "params": {
              "data": "The initialization data."
            },
            "returns": {
              "_0": "keccak256(\"ICloneableV2.initialize\") if successful."
            }
          },
          "onTakeOrders(address,address,uint256,uint256,bytes)": {
            "params": {
              "inputAmountSent": "The amount of `inputToken` that was sent to `IOrderBookV3OrderTaker`.",
              "inputToken": "The token that was sent to `IOrderBookV3OrderTaker`.",
              "outputToken": "The token that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns.",
              "takeOrdersData": "The data passed to `takeOrders` by the caller.",
              "totalOutputAmount": "The total amount of `outputToken` that `IOrderBookV3` will attempt to pull from `IOrderBookV3OrderTaker` after this callback returns."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "initialize(bytes)": {
            "notice": "Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \"ICloneableV2.initialize\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`."
          },
          "onTakeOrders(address,address,uint256,uint256,bytes)": {
            "notice": "Called by `OrderBookV3` when `takeOrders` is called with non-zero data, if it caused a non-zero input amount. I.e. if the order(s) taker received some tokens. Input and output directions are relative to the `IOrderBookV3OrderTaker` contract. If the order(s) taker had an active debt from a flash loan then that debt will be paid _before_ calculating any input amounts sent. i.e. the debt is deducted from the input amount before this callback is called."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@prb/test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "axelar-gmp-sdk-solidity/=lib/sushixswap-v2/lib/axelar-gmp-sdk-solidity/",
        "bitwise/=lib/rain.interpreter/src/lib/bitwise/",
        "bytecode/=lib/rain.interpreter/src/lib/bytecode/",
        "caller/=lib/rain.interpreter/src/lib/caller/",
        "compile/=lib/rain.interpreter/src/lib/compile/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "eval/=lib/rain.interpreter/src/lib/eval/",
        "extern/=lib/rain.interpreter/src/lib/extern/",
        "forge-gas-snapshot/=lib/sushixswap-v2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "integrity/=lib/rain.interpreter/src/lib/integrity/",
        "ns/=lib/rain.interpreter/src/lib/ns/",
        "op/=lib/rain.interpreter/src/lib/op/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "parse/=lib/rain.interpreter/src/lib/parse/",
        "prb-math/=lib/rain.interpreter/lib/prb-math/src/",
        "prb-test/=lib/rain.interpreter/lib/prb-math/lib/prb-test/src/",
        "rain.chainlink/=lib/rain.interpreter/lib/rain.chainlink/src/",
        "rain.datacontract/=lib/rain.interpreter/lib/rain.datacontract/src/",
        "rain.erc1820/=lib/rain.erc1820/src/",
        "rain.extrospection/=lib/rain.factory/lib/rain.extrospection/",
        "rain.factory/=lib/rain.factory/",
        "rain.interpreter/=lib/rain.interpreter/",
        "rain.lib.hash/=lib/rain.lib.memkv/lib/rain.lib.hash/src/",
        "rain.lib.memkv/=lib/rain.lib.memkv/src/",
        "rain.lib.typecast/=lib/rain.interpreter/lib/rain.lib.typecast/src/",
        "rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/",
        "rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/",
        "rain.metadata/=lib/rain.metadata/src/",
        "rain.solmem/=lib/rain.solmem/src/",
        "sol.lib.binmaskflag/=lib/rain.interpreter/lib/sol.lib.binmaskflag/src/",
        "state/=lib/rain.interpreter/src/lib/state/",
        "sushixswap-v2/=lib/sushixswap-v2/",
        "uniswap/=lib/rain.interpreter/src/lib/uniswap/",
        "v2-core/=lib/rain.interpreter/lib/v2-core/contracts/",
        "v2-periphery/=lib/rain.interpreter/lib/v2-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/concrete/GenericPoolOrderBookV3ArbOrderTaker.sol": "GenericPoolOrderBookV3ArbOrderTaker"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0x3af3ca86df39aac39a0514c84459d691434a108d2151c8ce9d69f32e315cab80",
        "urls": [
          "bzz-raw://77d1f1cf302cd5e1dfbbb4ce3b281b28e8c52942d4319fce43df2e1b6f02a52d",
          "dweb:/ipfs/QmT6ZXStmK3Knhh9BokeVHQ9HXTBZNgL3Eb1ar1cYg1hWy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/src/interface/ICloneableV2.sol": {
        "keccak256": "0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80",
        "urls": [
          "bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234",
          "dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/abstract/DeployerDiscoverableMetaV3.sol": {
        "keccak256": "0xe333361bf503def41107d2e38acb421f11766e636ffe0728fef933097c66857b",
        "urls": [
          "bzz-raw://43b69e65c41a2cb13304d8d8b7fe31ee8d1cb55708b6cf60b799552bb09b4c1b",
          "dweb:/ipfs/QmXy4CDRjBVMezbH72uTkYJNrt6yQLVnjNkheD5773MKrn"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterCallerV2.sol": {
        "keccak256": "0xd6f76317b41d50fb6b3fbfcffa5fa8b4a3bb547a17bf52244f67f5c364fcd6bc",
        "urls": [
          "bzz-raw://e7a35981e397564e85c53fab7b46bf8118328cfdb729264f946f7826c205f813",
          "dweb:/ipfs/QmfXnGW5RTDgqoMkp3k4E3eWBBS7hXWzmhw56XcfvB766E"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/IInterpreterStoreV1.sol": {
        "keccak256": "0x8fe347844f029b84087daae66742fb10aa9e44f94ac90af696318188aa922c19",
        "urls": [
          "bzz-raw://5eea5d2116f643db3ede89fd2dc3a5d293e35aec1d62a9daf6531f88a9656fb3",
          "dweb:/ipfs/Qmdys5MsEjgpXokb5FhMg96SYB6Bmf3frtVRvX74WrbKTc"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV1.sol": {
        "keccak256": "0x5e903fdb445cc16e63bb86d53eeb49172e2472cd7344a762c6d85684aec8251d",
        "urls": [
          "bzz-raw://5dab81bd2f092f392afbb295525c3602246ab5620de7630e84dab37b955f7e4d",
          "dweb:/ipfs/QmaGiCBSf2KjwjpVtJwG4k6iGqPKYs8dq6gkUYo9EFWkTg"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IExpressionDeployerV2.sol": {
        "keccak256": "0xc98ea86cd5d633d01b4136258bc0026b3d4bade652f831b482867e97df0e5365",
        "urls": [
          "bzz-raw://d412df06ddccb1be19f6e962872297395546c591ccd42ccad91559aa0e5ee214",
          "dweb:/ipfs/QmebpvwxNtv9XNoKi9y8Ldqhzy3GWY5kwoSNDQL2vJHrbg"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IInterpreterCallerV1.sol": {
        "keccak256": "0xdfccb8ca0e4673ac476d1ccfcd1ffa69300f910c41352cc51c3408a58bf095b2",
        "urls": [
          "bzz-raw://9a44b64873ed13c9c7d964e1d3b66dc2e80bb457563def325551bf796db8791c",
          "dweb:/ipfs/QmWTfH9qtwki5DFRAri1ouV7NVZ1mQzraz9eRumNEbcSNU"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/deprecated/IInterpreterV1.sol": {
        "keccak256": "0xb58d3b75312da70f4fb7896dc07d8a3d77de0638d169db4acf6c246ddab0f518",
        "urls": [
          "bzz-raw://970029663ca4321640ca0d577213e938046a3fe2995b580f9f7c8f0bfa34a3f3",
          "dweb:/ipfs/QmeZgH1RKqLgDh56FWQATBy8BCt6CyGiCuamrKY22QyCRz"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/unstable/IExpressionDeployerV3.sol": {
        "keccak256": "0x408f6c6fa3766cf7d24ffe1c98eb57b77af5bfbe946f266fd7a3b800de4ddb79",
        "urls": [
          "bzz-raw://186b12c32030d2b7e4e81f1a11ac7c7a63b0f14b7dc1b6df50cbd2be7459bb69",
          "dweb:/ipfs/QmXRV3DGCoQtVxufMtiuXLvN3GF6YNTLyPLVVeoLL53sMg"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/interface/unstable/IInterpreterV2.sol": {
        "keccak256": "0xcf050192ba12f7eb129e0262cee4920cbd65bb331e7487cfc21151882464be50",
        "urls": [
          "bzz-raw://10ff84f0acf532c5e11e69b7ab41c739ce4ad0f9193d347b5cc4a34f158774a8",
          "dweb:/ipfs/QmRvfB8jCdCwDdLrLHQh8yLLLv2eowpwjfwXgy2u629xew"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/bytecode/LibBytecode.sol": {
        "keccak256": "0xac53e84486e843acbabd6ba258550ba947c35c33a570e4615e57ff15a77d57e0",
        "urls": [
          "bzz-raw://e07c2907da9323f1d6d5b6557e87a904fdf1be3768ad64bb59655d060128bee4",
          "dweb:/ipfs/QmbukDZevfHYZ27yPqfmG1UFw8TsGbCRyH6Uc536QrtgHK"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibContext.sol": {
        "keccak256": "0x155499b7b1624484d2b03b9aecc7d7133c6c69bd17aa278b756c27e2c48af74a",
        "urls": [
          "bzz-raw://a2c9276f73ba44f1978b06847a23eed697b62f72eaa02e5e5711c30ea8097c05",
          "dweb:/ipfs/QmfKhi9K4Sp45t2dXCz5pms7mkoXARWkYgB661uc8DPrbF"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibDeployerDiscoverable.sol": {
        "keccak256": "0x3949de1f4537cd262d54a06a64028343793c6110611c7b4967de3153de4b3b55",
        "urls": [
          "bzz-raw://9bdd88ec9a7dc671c33bf73e9fe1801bcf7d4a2eb4e6308186f8a7adc4b712dc",
          "dweb:/ipfs/Qme27jUCKETZ9ASPqVbyiQPGTj7ifgZdmRZcsJqgm5hkEW"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEncodedDispatch.sol": {
        "keccak256": "0x4f011d07a8fa4b24efccb02022bff68730d53c852424817a4ca3cfc134bbc455",
        "urls": [
          "bzz-raw://fd0ffd2bdc5e2af1f2f67938d70e2ae694a0285a4fae4818530aa86edce400b1",
          "dweb:/ipfs/QmQAcoLvHatMANZpm5aP1vCaVm3xp1tF5MnZjQiX7AfiRe"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/caller/LibEvaluable.sol": {
        "keccak256": "0xc3e649c4d698822ae81c4ec0814d2dd506e601795914a7af0883c5c40678ab21",
        "urls": [
          "bzz-raw://901d9258689585e338aeb648d77ca083766c423dabc78db46285b3fb69fb12d1",
          "dweb:/ipfs/QmPVw7yuoDuqWorxpM7oWPhjSGRXhcEeu1dXQrjBDvpfrn"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter/src/lib/ns/LibNamespace.sol": {
        "keccak256": "0x29574214b0e499343ea999d676764a18618485dece1cedc732ab73e779302153",
        "urls": [
          "bzz-raw://4de0c0b4d297bbe286bf2e6ec8ba38ef3ea93811826d910c00381df86e54661f",
          "dweb:/ipfs/QmdJv5EgqtuRo2iTdChUE5hjhJgtBhBzztYqPUXevU6J5y"
        ],
        "license": "CAL"
      },
      "lib/rain.lib.memkv/lib/rain.lib.hash/src/LibHashNoAlloc.sol": {
        "keccak256": "0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8",
        "urls": [
          "bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24",
          "dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/IMetaV1.sol": {
        "keccak256": "0xd1959040fcc89be7a4dc8c9c193e4e5a78b84b05848b86c54d39c3d717ad1843",
        "urls": [
          "bzz-raw://7d3cba2279a6b8912f783430eef89c4a6482a489632ead7e2a3594d2162fa2b3",
          "dweb:/ipfs/QmfJFn72vcnq4LXpeBs9PWuDRzJSr58uVeDVjWpxjMHFWs"
        ],
        "license": "CAL"
      },
      "lib/rain.metadata/src/LibMeta.sol": {
        "keccak256": "0x04665ba6364cc67050b2a245daa780c39039dd51653f7b2029910f242f5dd285",
        "urls": [
          "bzz-raw://4341f3462120c37c832c03c6c9a0d52a100708fad713ced970f09747badd9d6d",
          "dweb:/ipfs/QmUGovuLTuTmCSTvYWc6SehzyoYAzVsAnPBNmE3hmRDAQU"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibBytes.sol": {
        "keccak256": "0xcdc485d90d6d8a89a842b64c83efd15266c5c80916535736aa8a05497bcf5625",
        "urls": [
          "bzz-raw://a45d0edb1d404207ad328d7a4eb16ee52d68db8dbb44796caa521a4765dfe353",
          "dweb:/ipfs/QmVT8vbFLMmD1sg1sEz21mTrDRE58yFNsmKDPnZ3LX8yYk"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibMemCpy.sol": {
        "keccak256": "0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406",
        "urls": [
          "bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102",
          "dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibPointer.sol": {
        "keccak256": "0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7",
        "urls": [
          "bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7",
          "dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibUint256Array.sol": {
        "keccak256": "0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde",
        "urls": [
          "bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6",
          "dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL"
        ],
        "license": "CAL"
      },
      "src/abstract/OrderBookV3ArbCommon.sol": {
        "keccak256": "0xd639006096b170c49ffa6299d47879c244447862478823ca35e2aeb819785860",
        "urls": [
          "bzz-raw://c39adbe01adbb7cc84d6375b70d090c45fc30b6ae9cbc2ecdb1289a33a524acf",
          "dweb:/ipfs/QmZsKJXbSFtdEbnTD4d8c4KJJjurwBectuCKcdiaBsakyW"
        ],
        "license": "CAL"
      },
      "src/abstract/OrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0x44c98f7b979b896b26558e849713a35828f123f78eb420edcc6f4b60e1a584d4",
        "urls": [
          "bzz-raw://73c5dc32c0eb67d5b2423e7f2dbcd59a84667c0f91e2a291e990f5e66e0812e0",
          "dweb:/ipfs/QmcYPxHjoEujNg3NQ4iU5kWWBY5YM262Ja3J4bBxQBRKbX"
        ],
        "license": "CAL"
      },
      "src/concrete/GenericPoolOrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0x62b64d5b2f8f38f7d0519c1d0e1f073ae74b068c3ceb20bde530fe3b1fc81996",
        "urls": [
          "bzz-raw://e6a3a5be4392646ccdb1c2f5f7b3d822a06edbf67d2b3e6bcfec20f1c7c34446",
          "dweb:/ipfs/QmSbTmf7BP76aUcnFMc5ye9iQwzp62S3qJu3YhGse548WU"
        ],
        "license": "CAL"
      },
      "src/interface/deprecated/IOrderBookV2.sol": {
        "keccak256": "0xc4f99b2e74b48063eb0383184446e5ad65aa158e12519949e28bed62b49d88fb",
        "urls": [
          "bzz-raw://1a2cdc0410026ffc686d4100505564a9dff28b2364cadfeb75b3eea4dde841dc",
          "dweb:/ipfs/QmXC1QtN2Go2RLH8bK9GrtsxfMLY5eKaksW53utMTaNuR8"
        ],
        "license": "CAL"
      },
      "src/interface/ierc3156/IERC3156FlashBorrower.sol": {
        "keccak256": "0x493227b1bc21c04ba2506d8d63f8fab8eb828683cf41336db1076edee2e010a7",
        "urls": [
          "bzz-raw://99b27f1f11576c22462c93ab613835522dfc89a7e28e584df034b339187bc15c",
          "dweb:/ipfs/QmQZ1H8PotScE5rSbruZn97MC6pgDNTuCQcjtg8ZWU4SPB"
        ],
        "license": "CC0"
      },
      "src/interface/ierc3156/IERC3156FlashLender.sol": {
        "keccak256": "0x1c14bc32c7483a68f5cb3ff65f64a8a32b279472525340033ce8e0b462fd1e72",
        "urls": [
          "bzz-raw://e25cbc0c4512d737fd9fb32f30af0f9bcccd10f28870c927057f6bcaac213dd4",
          "dweb:/ipfs/Qmey7YDkCTMXgoRDVHUbHRH6f4MJz6mBdfucp7v7bVy1ie"
        ],
        "license": "CC0"
      },
      "src/interface/unstable/IOrderBookV3.sol": {
        "keccak256": "0x1aba9fbf5e9c2f410a2c24d56361718ac4ec6d62431ee07107bb83660740b6a1",
        "urls": [
          "bzz-raw://12e803376fce4b36bcb7c228faa2aa5360b85688539485212f129b3467e23852",
          "dweb:/ipfs/QmV7oBCy2idxp8pY9yhGGcqbdpfVcqgpRvpJ1wYDNg7rZT"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IOrderBookV3ArbOrderTaker.sol": {
        "keccak256": "0xcf557395c82abca1d66abf241a8435aeee7ee8d451a08e9a95cbd3d156c19091",
        "urls": [
          "bzz-raw://c08f1c3f6bc2adae54badc1ace1f5d76bf3ebc7f7564cd971ed31f304f569452",
          "dweb:/ipfs/Qmc7CRZ17fzVTorhUbRTxwSGtRrHwFDpBvBuypt46WH8eb"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IOrderBookV3OrderTaker.sol": {
        "keccak256": "0x256cda8259c6c344e80ea5db35c7899e2c6f337ca040653ebdf7527e2e1d776e",
        "urls": [
          "bzz-raw://5b26e4385457c5c18b0c4cb394d00662364912f082510df6015e0127059c05b9",
          "dweb:/ipfs/QmaQmiW8dDDAcfzRJZVavcZo9QLeFrN44obvRydJouJbL1"
        ],
        "license": "CAL"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/concrete/GenericPoolOrderBookV3ArbOrderTaker.sol",
    "id": 75684,
    "exportedSymbols": {
      "Address": [
        45259
      ],
      "BEFORE_ARB_MAX_OUTPUTS": [
        74241
      ],
      "BEFORE_ARB_MIN_OUTPUTS": [
        74237
      ],
      "BEFORE_ARB_SOURCE_INDEX": [
        74233
      ],
      "BadLender": [
        74156
      ],
      "CALLER_META_HASH": [
        75568
      ],
      "DEFAULT_STATE_NAMESPACE": [
        55887
      ],
      "DeployerDiscoverableMetaV3": [
        54788
      ],
      "DeployerDiscoverableMetaV3ConstructionConfig": [
        54743
      ],
      "ERC165": [
        46054
      ],
      "EncodedDispatch": [
        55875
      ],
      "EvaluableConfigV3": [
        55623
      ],
      "GenericPoolOrderBookV3ArbOrderTaker": [
        75683
      ],
      "ICLONEABLE_V2_SUCCESS": [
        47145
      ],
      "ICloneableV2": [
        47158
      ],
      "IERC165": [
        46066
      ],
      "IERC20": [
        44376
      ],
      "IInterpreterStoreV1": [
        55698
      ],
      "IInterpreterV2": [
        56032
      ],
      "IOrderBookV3": [
        79289
      ],
      "IOrderBookV3ArbOrderTaker": [
        79306
      ],
      "IOrderBookV3OrderTaker": [
        79323
      ],
      "Initializable": [
        43646
      ],
      "Initializing": [
        74148
      ],
      "LibBytecode": [
        56710
      ],
      "LibContext": [
        57009
      ],
      "LibEncodedDispatch": [
        57164
      ],
      "LibMeta": [
        73191
      ],
      "LibNamespace": [
        57900
      ],
      "MinimumOutput": [
        74145
      ],
      "NoOrders": [
        78997
      ],
      "NonZeroBeforeArbInputs": [
        74217
      ],
      "NonZeroBeforeArbStack": [
        74151
      ],
      "OrderBookV3ArbOrderTaker": [
        74744
      ],
      "OrderBookV3ArbOrderTakerConfigV1": [
        74225
      ],
      "ReentrancyGuard": [
        43711
      ],
      "SafeERC20": [
        44813
      ],
      "SignedContextV1": [
        55640
      ],
      "SourceIndexV2": [
        55998
      ],
      "TakeOrdersConfigV2": [
        79055
      ],
      "console2": [
        30145
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1730:170",
    "nodes": [
      {
        "id": 75555,
        "nodeType": "PragmaDirective",
        "src": "32:24:170",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 75556,
        "nodeType": "ImportDirective",
        "src": "58:50:170",
        "nodes": [],
        "absolutePath": "src/abstract/OrderBookV3ArbOrderTaker.sol",
        "file": "../abstract/OrderBookV3ArbOrderTaker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75684,
        "sourceUnit": 74745,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75558,
        "nodeType": "ImportDirective",
        "src": "109:83:170",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75684,
        "sourceUnit": 44377,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75557,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44376,
              "src": "117:6:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75560,
        "nodeType": "ImportDirective",
        "src": "193:95:170",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75684,
        "sourceUnit": 44814,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75559,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44813,
              "src": "201:9:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75562,
        "nodeType": "ImportDirective",
        "src": "289:79:170",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75684,
        "sourceUnit": 45260,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75561,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45259,
              "src": "297:7:170",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75568,
        "nodeType": "VariableDeclaration",
        "src": "370:111:170",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "CALLER_META_HASH",
        "nameLocation": "387:16:170",
        "scope": 75684,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_bytes32",
          "typeString": "bytes32"
        },
        "typeName": {
          "id": 75563,
          "name": "bytes32",
          "nodeType": "ElementaryTypeName",
          "src": "370:7:170",
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "value": {
          "arguments": [
            {
              "hexValue": "307861353139653036396261346530643866646364386665623061363532393265653134373333336666653033326661383334316534323764623664373865643163",
              "id": 75566,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "414:66:170",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_74677340034454690209398324749558797768809488447446017630982701421605290568988_by_1",
                "typeString": "int_const 7467...(69 digits omitted)...8988"
              },
              "value": "0xa519e069ba4e0d8fdcd8feb0a65292ee147333ffe032fa8341e427db6d78ed1c"
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_rational_74677340034454690209398324749558797768809488447446017630982701421605290568988_by_1",
                "typeString": "int_const 7467...(69 digits omitted)...8988"
              }
            ],
            "id": 75565,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "406:7:170",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_bytes32_$",
              "typeString": "type(bytes32)"
            },
            "typeName": {
              "id": 75564,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "406:7:170",
              "typeDescriptions": {}
            }
          },
          "id": 75567,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "406:75:170",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_bytes32",
            "typeString": "bytes32"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 75683,
        "nodeType": "ContractDefinition",
        "src": "484:1277:170",
        "nodes": [
          {
            "id": 75574,
            "nodeType": "UsingForDirective",
            "src": "563:27:170",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 75571,
              "name": "SafeERC20",
              "nameLocations": [
                "569:9:170"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44813,
              "src": "569:9:170"
            },
            "typeName": {
              "id": 75573,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 75572,
                "name": "IERC20",
                "nameLocations": [
                  "583:6:170"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44376,
                "src": "583:6:170"
              },
              "referencedDeclaration": 44376,
              "src": "583:6:170",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$44376",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 75577,
            "nodeType": "UsingForDirective",
            "src": "595:26:170",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 75575,
              "name": "Address",
              "nameLocations": [
                "601:7:170"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45259,
              "src": "601:7:170"
            },
            "typeName": {
              "id": 75576,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "613:7:170",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 75588,
            "nodeType": "FunctionDefinition",
            "src": "627:137:170",
            "nodes": [],
            "body": {
              "id": 75587,
              "nodeType": "Block",
              "src": "762:2:170",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 75583,
                    "name": "CALLER_META_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75568,
                    "src": "732:16:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 75584,
                    "name": "config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75580,
                    "src": "750:6:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV3ConstructionConfig_$54743_memory_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV3ConstructionConfig memory"
                    }
                  }
                ],
                "id": 75585,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 75582,
                  "name": "OrderBookV3ArbOrderTaker",
                  "nameLocations": [
                    "707:24:170"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 74744,
                  "src": "707:24:170"
                },
                "nodeType": "ModifierInvocation",
                "src": "707:50:170"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 75581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75580,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "691:6:170",
                  "nodeType": "VariableDeclaration",
                  "scope": 75588,
                  "src": "639:58:170",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV3ConstructionConfig_$54743_memory_ptr",
                    "typeString": "struct DeployerDiscoverableMetaV3ConstructionConfig"
                  },
                  "typeName": {
                    "id": 75579,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 75578,
                      "name": "DeployerDiscoverableMetaV3ConstructionConfig",
                      "nameLocations": [
                        "639:44:170"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54743,
                      "src": "639:44:170"
                    },
                    "referencedDeclaration": 54743,
                    "src": "639:44:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployerDiscoverableMetaV3ConstructionConfig_$54743_storage_ptr",
                      "typeString": "struct DeployerDiscoverableMetaV3ConstructionConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "638:60:170"
            },
            "returnParameters": {
              "id": 75586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "762:0:170"
            },
            "scope": 75683,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75675,
            "nodeType": "FunctionDefinition",
            "src": "815:867:170",
            "nodes": [],
            "body": {
              "id": 75674,
              "nodeType": "Block",
              "src": "1031:651:170",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75606,
                        "name": "inputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75591,
                        "src": "1060:10:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75607,
                        "name": "outputToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75593,
                        "src": "1072:11:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75608,
                        "name": "inputAmountSent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75595,
                        "src": "1085:15:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 75609,
                        "name": "totalOutputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75597,
                        "src": "1102:17:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 75610,
                        "name": "takeOrdersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75599,
                        "src": "1121:14:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 75603,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1041:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GenericPoolOrderBookV3ArbOrderTaker_$75683_$",
                          "typeString": "type(contract super GenericPoolOrderBookV3ArbOrderTaker)"
                        }
                      },
                      "id": 75605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1047:12:170",
                      "memberName": "onTakeOrders",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74743,
                      "src": "1041:18:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes calldata)"
                      }
                    },
                    "id": 75611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1041:95:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75612,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:95:170"
                },
                {
                  "assignments": [
                    75614,
                    75616,
                    75618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75614,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1155:7:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 75674,
                      "src": "1147:15:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 75613,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1147:7:170",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 75616,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "1172:4:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 75674,
                      "src": "1164:12:170",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 75615,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1164:7:170",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 75618,
                      "mutability": "mutable",
                      "name": "encodedFunctionCall",
                      "nameLocation": "1191:19:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 75674,
                      "src": "1178:32:170",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 75617,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1178:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75630,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 75621,
                        "name": "takeOrdersData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75599,
                        "src": "1237:14:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 75623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1254:7:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 75622,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1254:7:170",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 75625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1263:7:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 75624,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1263:7:170",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 75627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1272:5:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 75626,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1272:5:170",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 75628,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1253:25:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(bytes storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(address),type(address),type(bytes storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 75619,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1226:3:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 75620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1230:6:170",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1226:10:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 75629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:53:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(address payable,address payable,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1146:133:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75635,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75614,
                        "src": "1321:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 75636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1330:1:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 75632,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75591,
                            "src": "1297:10:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 75631,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44376,
                          "src": "1290:6:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44376_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 75633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1290:18:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 75634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1309:11:170",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44541,
                      "src": "1290:30:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44376_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44376_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 75637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1290:42:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75638,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:42:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75643,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75614,
                        "src": "1373:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 75646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1387:7:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 75645,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1387:7:170",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 75644,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1382:4:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 75647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1382:13:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 75648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1396:3:170",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1382:17:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 75640,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75591,
                            "src": "1349:10:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 75639,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44376,
                          "src": "1342:6:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44376_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 75641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1342:18:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 75642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1361:11:170",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44541,
                      "src": "1342:30:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44376_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44376_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 75649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1342:58:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75650,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:58:170"
                },
                {
                  "assignments": [
                    75652
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75652,
                      "mutability": "mutable",
                      "name": "returnData",
                      "nameLocation": "1423:10:170",
                      "nodeType": "VariableDeclaration",
                      "scope": 75674,
                      "src": "1410:23:170",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 75651,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1410:5:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75662,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 75655,
                        "name": "encodedFunctionCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75618,
                        "src": "1463:19:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 75658,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1492:4:170",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenericPoolOrderBookV3ArbOrderTaker_$75683",
                                "typeString": "contract GenericPoolOrderBookV3ArbOrderTaker"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GenericPoolOrderBookV3ArbOrderTaker_$75683",
                                "typeString": "contract GenericPoolOrderBookV3ArbOrderTaker"
                              }
                            ],
                            "id": 75657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1484:7:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 75656,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1484:7:170",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 75659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1484:13:170",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 75660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1498:7:170",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1484:21:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 75653,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75616,
                        "src": "1436:4:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 75654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1441:21:170",
                      "memberName": "functionCallWithValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45039,
                      "src": "1436:26:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
                        "typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
                      }
                    },
                    "id": 75661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1436:70:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1410:96:170"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 75663,
                        "name": "returnData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75652,
                        "src": "1612:10:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 75664,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1611:12:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 75665,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:12:170"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75670,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75614,
                        "src": "1664:7:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 75671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1673:1:170",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 75667,
                            "name": "inputToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75591,
                            "src": "1640:10:170",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 75666,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44376,
                          "src": "1633:6:170",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44376_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 75668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1633:18:170",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44376",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 75669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1652:11:170",
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44541,
                      "src": "1633:30:170",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$44376_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44376_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 75672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1633:42:170",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75673,
                  "nodeType": "ExpressionStatement",
                  "src": "1633:42:170"
                }
              ]
            },
            "baseFunctions": [
              74743
            ],
            "documentation": {
              "id": 75589,
              "nodeType": "StructuredDocumentation",
              "src": "770:40:170",
              "text": "@inheritdoc OrderBookV3ArbOrderTaker"
            },
            "functionSelector": "059bebe6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onTakeOrders",
            "nameLocation": "824:12:170",
            "overrides": {
              "id": 75601,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1022:8:170"
            },
            "parameters": {
              "id": 75600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75591,
                  "mutability": "mutable",
                  "name": "inputToken",
                  "nameLocation": "854:10:170",
                  "nodeType": "VariableDeclaration",
                  "scope": 75675,
                  "src": "846:18:170",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:7:170",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75593,
                  "mutability": "mutable",
                  "name": "outputToken",
                  "nameLocation": "882:11:170",
                  "nodeType": "VariableDeclaration",
                  "scope": 75675,
                  "src": "874:19:170",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:170",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75595,
                  "mutability": "mutable",
                  "name": "inputAmountSent",
                  "nameLocation": "911:15:170",
                  "nodeType": "VariableDeclaration",
                  "scope": 75675,
                  "src": "903:23:170",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75597,
                  "mutability": "mutable",
                  "name": "totalOutputAmount",
                  "nameLocation": "944:17:170",
                  "nodeType": "VariableDeclaration",
                  "scope": 75675,
                  "src": "936:25:170",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75599,
                  "mutability": "mutable",
                  "name": "takeOrdersData",
                  "nameLocation": "986:14:170",
                  "nodeType": "VariableDeclaration",
                  "scope": 75675,
                  "src": "971:29:170",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 75598,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "971:5:170",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:170:170"
            },
            "returnParameters": {
              "id": 75602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:0:170"
            },
            "scope": 75683,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 75682,
            "nodeType": "FunctionDefinition",
            "src": "1717:42:170",
            "nodes": [],
            "body": {
              "id": 75681,
              "nodeType": "Block",
              "src": "1757:2:170",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 75676,
              "nodeType": "StructuredDocumentation",
              "src": "1688:24:170",
              "text": "Allow receiving gas."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "id": 75679,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75678,
                  "name": "onlyNotInitializing",
                  "nameLocations": [
                    "1737:19:170"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 74339,
                  "src": "1737:19:170"
                },
                "nodeType": "ModifierInvocation",
                "src": "1737:19:170"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 75677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1725:2:170"
            },
            "returnParameters": {
              "id": 75680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1757:0:170"
            },
            "scope": 75683,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 75569,
              "name": "OrderBookV3ArbOrderTaker",
              "nameLocations": [
                "532:24:170"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 74744,
              "src": "532:24:170"
            },
            "id": 75570,
            "nodeType": "InheritanceSpecifier",
            "src": "532:24:170"
          }
        ],
        "canonicalName": "GenericPoolOrderBookV3ArbOrderTaker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          75683,
          74744,
          46054,
          46066,
          54788,
          73107,
          47158,
          43646,
          43711,
          79306,
          79323
        ],
        "name": "GenericPoolOrderBookV3ArbOrderTaker",
        "nameLocation": "493:35:170",
        "scope": 75684,
        "usedErrors": [
          47149,
          56724,
          73087,
          73092,
          74145,
          74148,
          74151,
          74156,
          74217,
          78997
        ]
      }
    ],
    "license": "CAL"
  },
  "id": 170
}